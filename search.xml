<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C语言笔记：函数指针(函数传递)</title>
      <link href="/2020/08/15/2020-08-15.2/"/>
      <url>/2020/08/15/2020-08-15.2/</url>
      
        <content type="html"><![CDATA[<p><strong>重要理解：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//函数声明 </span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getAverage</span><span class="params">(<span class="keyword">int</span> *arr,<span class="keyword">int</span> <span class="built_in">size</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getAverage2</span><span class="params">(<span class="keyword">int</span> *arr,<span class="keyword">int</span> <span class="built_in">size</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//int *intt;</span></span><br><span class="line"><span class="comment">//int num = 4;</span></span><br><span class="line"><span class="comment">//intt = &amp;num</span></span><br><span class="line"><span class="comment">//intt 是地址，*intt是值 </span></span><br><span class="line"><span class="comment">//千万注意：arr是地址，*arr和arr[i]是值 </span></span><br><span class="line"><span class="keyword">int</span> balance[<span class="number">5</span>]=&#123;<span class="number">1000</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">17</span>,<span class="number">15</span>&#125;;</span><br><span class="line"><span class="keyword">double</span> avg;</span><br><span class="line">avg = getAverage(balance,<span class="number">5</span>);</span><br><span class="line"><span class="comment">//avg = getAverage2(balance,5);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%f"</span>,avg);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i= <span class="number">0</span> ;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,balance[i]);  <span class="comment">//1 2 3 4</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//函数1 </span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getAverage</span><span class="params">(<span class="keyword">int</span> *arr,<span class="keyword">int</span> <span class="built_in">size</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,sum =<span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> avg;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i&lt;<span class="built_in">size</span>;i++)</span><br><span class="line">&#123;<span class="comment">//不可*arr[i],*取值符，取值符与地址搭配得到值，arr是个地址值，所以*arr可以，但arr[i]是个数值，所以不行</span></span><br><span class="line">sum +=arr[i];<span class="comment">//千万注意：arr是地址，*arr和arr[i]是值</span></span><br><span class="line">arr[i] = i;</span><br><span class="line"><span class="comment">//printf("%d\n",arr[i]);</span></span><br><span class="line">&#125;</span><br><span class="line">avg = (<span class="keyword">double</span>)sum/<span class="built_in">size</span>;</span><br><span class="line"><span class="keyword">return</span> avg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数2 </span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getAverage2</span><span class="params">(<span class="keyword">int</span> *arr,<span class="keyword">int</span> <span class="built_in">size</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,sum =<span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> avg;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i&lt;<span class="built_in">size</span>;i++)</span><br><span class="line">&#123;<span class="comment">//不可*arr[i],*取值符，取值符与地址搭配得到值，arr是个地址值，所以*arr可以，但arr[i]是个数值，所以不行</span></span><br><span class="line">sum +=*arr;<span class="comment">//千万注意：arr是地址，*arr和arr[i]是值</span></span><br><span class="line">arr++;</span><br><span class="line">&#125;</span><br><span class="line">avg = (<span class="keyword">double</span>)sum/<span class="built_in">size</span>;</span><br><span class="line"><span class="keyword">return</span> avg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结构体值传递：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义Dog结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Dog</span>&#123;</span></span><br><span class="line"><span class="keyword">char</span> *name;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">double</span> weight;</span><br><span class="line"></span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//函数声明 </span></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">say</span><span class="params">(struct Dog dog)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//say函数定义,返回字符串，信息中包含所有成员值 </span></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">say</span><span class="params">(struct Dog dog)</span></span>&#123;</span><br><span class="line"><span class="comment">//为防止局部变量被销毁，要用static修饰</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> info[<span class="number">50</span>];</span><br><span class="line">dog.name = <span class="string">"小花"</span>;</span><br><span class="line"><span class="built_in">sprintf</span>(info,<span class="string">"name=%s age=%d weight=%.2f"</span>,dog.name,dog.age,dog.weight); </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> info; </span><br><span class="line"> </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//定义结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Dog</span> <span class="title">dog</span>;</span></span><br><span class="line"><span class="keyword">char</span>* info = <span class="literal">NULL</span>;</span><br><span class="line">dog.name = <span class="string">"小黄"</span>; </span><br><span class="line">dog.age = <span class="number">1</span>;</span><br><span class="line">dog.weight = <span class="number">3.4</span>;</span><br><span class="line">info = say(dog);  <span class="comment">//结构体变量默认是值传递</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n小狗信息=%s"</span>,info);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n main 小狗名字=%s"</span>,dog.name);</span><br><span class="line">getchar(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>传递结构体指针：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.一个景区根据有人的年龄收取不同价格的门票</span></span><br><span class="line"><span class="comment">2.请编写有人结构体（Visitor），根据不同年龄收费不同</span></span><br><span class="line"><span class="comment">3.规则：年龄&gt;20 门票20元，其余免费</span></span><br><span class="line"><span class="comment">4.可以循环从控制台输入名字和年龄，打印门票收费情况，如果名字输入n，则退出程序</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">//定义结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Visitor</span>&#123;</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="keyword">double</span> pay; <span class="comment">//应付票价 </span></span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="comment">//编写函数处理数据</span></span><br><span class="line"><span class="comment">//说明：结构体是值传递，会赋值一份传递过去，效率较低</span></span><br><span class="line"><span class="comment">//为了提高效率，直接传递指针</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ticket</span><span class="params">(struct Visitor* visitor)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//注意：visitor是结构体地址，*visitor才是值 </span></span><br><span class="line"><span class="keyword">if</span>((*visitor).age&gt;=<span class="number">18</span>)&#123;</span><br><span class="line">(*visitor).pay = <span class="number">20</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">(*visitor).pay = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//创建结构体变量</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Visitor</span> <span class="title">visitor</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 循环输入名字和年龄</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n注意：姓名输入n则退出程序"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n请输入游客名字："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,visitor.name);</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断如果名字输入为n就退出,strcmp("n",visitor.name)比较相等的话会返回0 </span></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(<span class="string">"n"</span>,visitor.name))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n退出程序"</span>); </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n请输入游客年龄："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;visitor.age);</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//调用函数ticket函数</span></span><br><span class="line"> ticket(&amp;visitor);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n姓名：%s 年龄：%d  票价：%f"</span>,visitor.name,visitor.age,visitor.pay); </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 函数指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言笔记：字符串指针输出疑解</title>
      <link href="/2020/08/15/2020-08-15.1/"/>
      <url>/2020/08/15/2020-08-15.1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/lanQing-Song/blogimages/QQ%E6%88%AA%E5%9B%BE20200810214422.png" alt=""></p><p>又如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串赋值给指针变量时，是将字符串的首个字符地址赋给</span></span><br><span class="line"><span class="keyword">char</span>* <span class="built_in">string</span> = <span class="string">"i am a student"</span>;<span class="comment">//或 char* string; string = "i am a student"</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>,<span class="built_in">string</span>);  <span class="comment">//理解：为什么不是*string？</span></span><br></pre></td></tr></table></figure><p><strong>解答：</strong></p><p>%s是输出字符串时所用的格式符，在输出项中给出字符指针变量名string，<strong>则系统会输出string所指向的字符串第一个字符，然后自动使string+1，使之指向下一个字符，再输出该字符……如此直到遇到字符串结束标志‘\0’为止。</strong>注意：再内存中，字符串最后被自动加了’\0’。</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS笔记：常用知识点</title>
      <link href="/2020/08/07/2020-08-07.3/"/>
      <url>/2020/08/07/2020-08-07.3/</url>
      
        <content type="html"><![CDATA[<p>参考文章：<a href="https://juejin.im/post/6844903962529759239" target="_blank" rel="noopener">https://juejin.im/post/6844903962529759239</a></p><h1 id="一、元素水平居中的方案"><a href="#一、元素水平居中的方案" class="headerlink" title="一、元素水平居中的方案"></a>一、元素水平居中的方案</h1><h2 id="1、对于行内元素：text-align-center"><a href="#1、对于行内元素：text-align-center" class="headerlink" title="1、对于行内元素：text-align:center;"></a>1、对于<strong>行内元素</strong>：<code>text-align:center;</code></h2><h2 id="2、对于确定宽度的块级元素："><a href="#2、对于确定宽度的块级元素：" class="headerlink" title="2、对于确定宽度的块级元素："></a>2、对于确定宽度的块级元素：</h2><ul><li>(1))用width和margin实现：<code>margin:0  auto;</code></li><li>(2)子绝父相，再给子元素<code>left:50%;margin-left:-自身宽度一半</code></li></ul><h2 id="3、对于宽度无知的块级元素"><a href="#3、对于宽度无知的块级元素" class="headerlink" title="3、对于宽度无知的块级元素"></a>3、对于宽度无知的块级元素</h2><ul><li>(1))将该块级元素<code>display:table;margin:0 auto;</code></li><li>(2))将子元素<code>display:inline-block;</code>,再给父元素添加<code>text-align:center</code></li><li>(3)子绝父相，再给子元素来<code>left:50%;  transform:translateX(-50%)(移动自身50%)</code></li><li>(4)给父元素<code>display:flex;  justify-content:center</code>,子元素自然居中</li></ul><h1 id="二、垂直居中"><a href="#二、垂直居中" class="headerlink" title="二、垂直居中"></a>二、垂直居中</h1><ul><li>(1)父元素高度不写死，自接给个上下内边距让子元素居中</li><li>(2)父子都已确定高度，再子绝父相，再给子元素<code>top:50%;transform：translateX(-50%)</code>注意父元素高度要确定，不然子元素绝对定位脱离文档流，导致父元素高度坍塌</li><li>(3)给父元素<code>display:flex;</code>,子元素<code>margin：auto（水平垂直居中）margin：auto 0(垂直居中)</code></li><li>(4)table标签内的td标签里的内容默认垂直居中，缺点是子元素会占满整个父元素。</li><li>(5)将div改造成表单，给父元素添加<code>display:table</code>子元素<code>display:table-cell  vertical-align:middle</code>,这样子元素的内容物就会垂直居中，缺点是子元素会占满整个父元素。</li></ul><h1 id="三、选择器分类"><a href="#三、选择器分类" class="headerlink" title="三、选择器分类"></a>三、选择器分类</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="selector-tag">important</span>&gt;行内样式&gt;<span class="selector-tag">ID</span>选择器&gt;类、伪类、属性&gt;元素、伪元素&gt;继承&gt;通配符</span><br></pre></td></tr></table></figure><h2 id="通配符选择器"><a href="#通配符选择器" class="headerlink" title="通配符选择器"></a>通配符选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="标签（元素）选择器"><a href="#标签（元素）选择器" class="headerlink" title="标签（元素）选择器"></a>标签（元素）选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.warning</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ID选择器"><a href="#ID选择器" class="headerlink" title="ID选择器"></a>ID选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#warning</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><blockquote><p>例子</p><table><thead><tr><th>a[src^=”https”]</th><th>选择其 src 属性值以 “https” 开头的每个 <a> 元素。</th></tr></thead><tbody><tr><td>[target]</td><td>选择带有 target 属性所有元素。</td></tr></tbody></table></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">foo</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">foo</span>=<span class="string">"abc"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">foo</span>=<span class="string">"abc efj"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">foo</span>=<span class="string">"abcefj"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">foo</span>=<span class="string">"efjabc"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">foo</span>=<span class="string">"ab"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>[attribute（属性）]</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//选择所有带有foo属性的标签</span><br><span class="line"><span class="selector-attr">[foo]</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>[attribute=value]</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//选择foo=abc的标签</span><br><span class="line"><span class="selector-attr">[foo=value]</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>[attribute~=value]</li></ul><blockquote><p>选择 attribute 属性包含单词 value 的所有元素。</p></blockquote><ul><li>[attribute^=value]</li></ul><blockquote><p>选择其attribute属性值以value开头的所有元素</p></blockquote><ul><li>[attribute$=value]</li></ul><blockquote><p>选择attribute属性值以value结束的所有元素</p></blockquote><ul><li>[attribute*=value]</li></ul><blockquote><p>选择其attribute属性包含value子串的每个元素</p></blockquote><ul><li>[attribute|=value]</li></ul><blockquote><p>选择attribute属性值以value开头的所有元素</p></blockquote><h2 id="文档结构选择器"><a href="#文档结构选择器" class="headerlink" title="文档结构选择器"></a>文档结构选择器</h2><table><thead><tr><th><a href="https://www.w3school.com.cn/cssref/selector_element_comma.asp" target="_blank" rel="noopener"><em>element</em>,<em>element</em></a>并集选择器</th><th>div,p</th><th>选择所有 <div> 元素和所有 <p> 元素。</th><th>1</th></tr></thead><tbody><tr><td><a href="https://www.w3school.com.cn/cssref/selector_element_element.asp" target="_blank" rel="noopener"><em>element</em> <em>element</em></a>后代选择器</td><td>div p</td><td>选择 <div> 元素内部的所有 <p> 元素。</td><td>1</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/selector_element_gt.asp" target="_blank" rel="noopener"><em>element</em>&gt;<em>element</em></a>子代选择器</td><td>div&gt;p</td><td>选择父元素为 <div> 元素的所有 <p> 元素。</td><td>2</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/selector_element_plus.asp" target="_blank" rel="noopener"><em>element</em>+<em>element</em></a>相邻兄弟选择器</td><td>div+p</td><td>选择紧接在 <div> 元素之后的所有 <p> 元素。</td><td>2</td></tr></tbody></table><h2 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h2><ul><li>：root文档根元素伪类</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>:nth-child(n)孩子选择器</li><li>:nth-of-type(n)同类型的第n个选择器</li><li>element:fitst-child</li></ul><blockquote><p>选择属于父元素element的第一个子元素。 等同 :nth-child(1)</p></blockquote><ul><li><p>element:last-of-type</p></li><li><p>element:only-child</p></li></ul><blockquote><p>选择了父元素element唯一的子元素</p></blockquote><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;h1&gt;h1&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;p1&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;p2&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;p3&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;h1&gt;h2&lt;/h1&gt;  //变红</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"> <span class="selector-tag">div</span> <span class="selector-pseudo">:only-child</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ul><li>:empty没有子元素包括文本节点</li><li>:nth-last-child(n)倒数第n个子元素</li><li>element:nth-last-of-type(n)同类型的倒数第n个子元素</li><li>element:only-of-type父元素里唯一同类型子元素</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt; </span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:only-of-type</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;h1&gt;h1&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;p1&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;p2&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;p3&lt;/p&gt;</span><br><span class="line">    &lt;h1&gt;h1&lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;h1&gt;h2&lt;/h1&gt;  //被选中</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>a:active链接正在被点击</li><li>a:hover鼠标指针位于其上的链接</li><li>a:visited被访问过的链接</li><li>:focus  用于选取获得焦点的元素</li><li>:enabled/:disabled选择每个启用的input元素/选择每个禁用的input元素</li><li>:checked 选择每个被选择的input元素。自定义开关可以用这个实现</li><li>:not(selector)选择分selector元素的每个元素（反向选择）</li></ul><h2 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h2><ul><li>element:first-line</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"></span><br><span class="line">p:first-line&#123;  //第一行文字发生改变</span><br><span class="line"><span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;h1&gt;WWF's Mission Statement&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;To stop the degradation of the planet's natural environment and to build a future in which humans live in harmony with nature, by; conserving the world's biological diversity, ensuring that the use of renewable natural resources is sustainable, and promoting the reduction of pollution and wasteful consumption.&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>element:fitst-letter</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-pseudo">:first-letter</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:yellow;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;h1&gt;WWF's Mission Statement&lt;/h1&gt;   //第一个字发生改变</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>element:before  在元素的内容前面插入内容</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span><span class="selector-pseudo">:before</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="built_in">url</span>(smiley.gif);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>element:after  在元素的内容后面插入内容</p></li><li><p>:selector  选择被用户选取的元素部分</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS常用知识点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：原生轮播图move函数</title>
      <link href="/2020/08/07/2020-08-07.2/"/>
      <url>/2020/08/07/2020-08-07.2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    参数：</span></span><br><span class="line"><span class="comment">        obj：要移动的对象</span></span><br><span class="line"><span class="comment">        attr:样式，如：left right top等等</span></span><br><span class="line"><span class="comment">        target：目标位置</span></span><br><span class="line"><span class="comment">        speed：每次移动的距离</span></span><br><span class="line"><span class="comment">        itemtime:定时器调用的间隔时间</span></span><br><span class="line"><span class="comment">        callback:回调函数，使其无线可能,在动画执行完毕后执行   (可传可不传)</span></span><br><span class="line"><span class="comment">        如：move(obj,left,target,speed,function()&#123;</span></span><br><span class="line"><span class="comment">            move(obj,right,target,speed,function()&#123;</span></span><br><span class="line"><span class="comment">                move(obj,right,target,speed)</span></span><br><span class="line"><span class="comment">            &#125;)</span></span><br><span class="line"><span class="comment">        &#125;)</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">obj,attr,target,speed,itemtime,callback</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 注意点：如果定时器关闭前又被打开，定时器效果会叠加，所以每次打开要关闭之前的定时器</span></span><br><span class="line">    clearInterval(obj.intervalId);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取对象当前的位置</span></span><br><span class="line">     <span class="keyword">var</span> current = <span class="built_in">parseInt</span>(getStyle(obj,attr));</span><br><span class="line"></span><br><span class="line">     <span class="comment">//根据当前对象的位置与目标位置来判断要向左还是向右移动</span></span><br><span class="line">     <span class="keyword">if</span>(current&gt;target)&#123;  <span class="comment">//向左</span></span><br><span class="line">         speed = -speed;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  开启私人（防止多人时冲突）定时器，使对象移动</span></span><br><span class="line">    obj.intervalId = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//获取当前元素的有效位置</span></span><br><span class="line">        <span class="keyword">var</span> oldValue = <span class="built_in">parseInt</span>(getStyle(obj,attr));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在旧值的基础上加上每次移动的距离</span></span><br><span class="line">        <span class="keyword">var</span> newValue = oldValue + speed</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断元素移动的方向和防止元素移动的距离超出目标距离</span></span><br><span class="line">        <span class="keyword">if</span>((speed&lt;<span class="number">0</span> &amp;&amp; newValue&lt;target) || (speed&gt;<span class="number">0</span> &amp;&amp; newValue&gt;target))&#123;</span><br><span class="line">            newValue = target;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将新值赋给元素</span></span><br><span class="line">        obj.style[attr] = newValue + <span class="string">'px'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//到达目标关闭定时器</span></span><br><span class="line">        <span class="keyword">if</span>(newValue === target)&#123;</span><br><span class="line">            </span><br><span class="line">            clearInterval(obj.intervalId);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//关键：动画执行完毕之后执行回调函数(可无限套娃) ,&amp;&amp;作用：参数给不给这个回调函数都没关系</span></span><br><span class="line">            callback &amp;&amp; callback();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, itemtime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//读取元素当前（浏览器中显示的）样式的方法（关键）</span></span><br><span class="line"><span class="comment">//注意：getComputerStyle()和currentStyle获取到的样式都是只读的，不能修改</span></span><br><span class="line"><span class="comment">//      如果想修改，要通过style属性</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    可以使用getComputerStyle(参数1，参数2)，方法，这个方法是window的，可以直接使用</span></span><br><span class="line"><span class="comment">    参数1：要获取样式的元素</span></span><br><span class="line"><span class="comment">    参数2：可以传递一个伪元素，一般都传null</span></span><br><span class="line"><span class="comment">    **该方法会返回一个对象，对象中封装了当前元素对应的样式</span></span><br><span class="line"><span class="comment">        可以通过对象.样式名来读取样式</span></span><br><span class="line"><span class="comment">        如果获取的样式没有设置，则会返回该样式在浏览器中显示的真实值，而不是返回一个auto</span></span><br><span class="line"><span class="comment">        比如：没有设置width样式，则返回浏览器中真实的width宽度，而不是auto</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">obj,name</span>)</span>&#123;<span class="comment">//注意：为兼容IE8，此处window不能省，使getComputerStyle变成一个属性，而不是变量</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.getComputedStyle)&#123;</span><br><span class="line">        <span class="comment">//正常浏览器的方式，都具有getComputerStyle()方法，getComputerStyle()是window的方法，可以直接使用</span></span><br><span class="line">        <span class="comment">//注意此处不能return getComputedStyle(obj,null).name,这样的话name会写死，获取到样式名，而不是样式</span></span><br><span class="line">        <span class="keyword">return</span> getComputedStyle(obj,<span class="literal">null</span>)[name];</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//兼容IE8的方式，IE8没有getComputerStyle()方法，IE浏览器有currentStyle属性可以使用</span></span><br><span class="line">        <span class="keyword">return</span> obj.currentStyle[name]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS轮播图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> move工具函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：原生轮播图</title>
      <link href="/2020/08/07/2020-08-07.1/"/>
      <url>/2020/08/07/2020-08-07.1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;style&gt;</span></span><br><span class="line"><span class="regexp">        *&#123;</span></span><br><span class="line"><span class="regexp">            padding: 0;</span></span><br><span class="line"><span class="regexp">            margin: 0;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        #outdiv&#123;</span></span><br><span class="line"><span class="regexp">            width: 600px;</span></span><br><span class="line"><span class="regexp">            height: 400px;</span></span><br><span class="line"><span class="regexp">            padding: 10px 0;</span></span><br><span class="line"><span class="regexp">            background-color: aquamarine;</span></span><br><span class="line"><span class="regexp">            margin: 50px auto;</span></span><br><span class="line"><span class="regexp">            position: relative;</span></span><br><span class="line"><span class="regexp">            overflow: hidden;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        /</span>* 要明确左右移动的是整个imglist，而不是li *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">        #imglist&#123;   </span></span><br><span class="line"><span class="regexp">            list-style: none;</span></span><br><span class="line"><span class="regexp">            /</span>* 设置图片列表的总宽度 *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">            width: 3000px;</span></span><br><span class="line"><span class="regexp">            height: 400px;</span></span><br><span class="line"><span class="regexp">            /</span>* 要移动left值，要先开动定位 *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">            position: absolute;</span></span><br><span class="line"><span class="regexp">            left: 0;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        #imglist li&#123;</span></span><br><span class="line"><span class="regexp">            /</span>* 给个浮动，让图片列表横过来 *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">            float: left;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        #pointlist&#123;</span></span><br><span class="line"><span class="regexp">            /</span>* 同样是决定定位，后面的覆盖前面的 *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">            position: absolute;</span></span><br><span class="line"><span class="regexp">            /</span>* 根据图片的增减，此处需要动态设置小圆点的居中((图片的宽度-pointlist的宽度)/<span class="number">2</span>) *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">            /</span>* left: <span class="number">235.25</span>px; *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">            bottom: 20px;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        #pointlist a&#123;</span></span><br><span class="line"><span class="regexp">            width: 15px;</span></span><br><span class="line"><span class="regexp">            height: 15px;</span></span><br><span class="line"><span class="regexp">            margin: 0 5px;</span></span><br><span class="line"><span class="regexp">            float: left;</span></span><br><span class="line"><span class="regexp">            background-color: red;</span></span><br><span class="line"><span class="regexp">            opacity: .7;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        /</span>* 设置鼠标移入小圆点的效果 *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">        #pointlist a:hover&#123;</span></span><br><span class="line"><span class="regexp">            background-color: black;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>style&gt;</span><br><span class="line">    &lt;script src=<span class="string">"./animation.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=<span class="string">"outdiv"</span>&gt;</span><br><span class="line">        &lt;ul id=<span class="string">"imglist"</span>&gt;</span><br><span class="line">            &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">            &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">            &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">            &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">            &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/5.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">            &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">        &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div id="pointlist"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;a href="javascript:;"&gt;&lt;/</span>a&gt;</span><br><span class="line">            &lt;a href=<span class="string">"javascript:;"</span>&gt;&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">            &lt;a href="javascript:;"&gt;&lt;/</span>a&gt;</span><br><span class="line">            &lt;a href=<span class="string">"javascript:;"</span>&gt;&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">            &lt;a href="javascript:;"&gt;&lt;/</span>a&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            思路：</span></span><br><span class="line"><span class="comment">                1.第一部分：完成轮播图的部署，包括切换小圆点的部署               </span></span><br><span class="line"><span class="comment">                    注意点：</span></span><br><span class="line"><span class="comment">                        1）.要可以动态的增加或减少图片的数目，使imglist可以自动调整宽度</span></span><br><span class="line"><span class="comment">                        2）.对应的要可以动态的增加或小圆点的数目，使其自动居中</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                2.第二部分：手动切换轮播图，点击对应的小圆点，切换到对应的图片</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                3.第三部分：开启自动轮播定时器</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*第一部分*/</span></span><br><span class="line">        <span class="comment">// 动态设置imglist的宽度</span></span><br><span class="line">        <span class="keyword">var</span> imglist = <span class="built_in">document</span>.getElementById(<span class="string">'imglist'</span>)</span><br><span class="line">        <span class="keyword">var</span> liunmber= <span class="built_in">document</span>.getElementsByTagName(<span class="string">'img'</span>) </span><br><span class="line">        <span class="comment">//注意：imglist.style.只能读取和设置内联样式    </span></span><br><span class="line">        imglist.style.width = liunmber.length * <span class="number">600</span> + <span class="string">'px'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//动态设置小圆点pointlist居中</span></span><br><span class="line">        <span class="keyword">var</span> outdiv = <span class="built_in">document</span>.getElementById(<span class="string">'outdiv'</span>)</span><br><span class="line">        <span class="keyword">var</span> pointlist = <span class="built_in">document</span>.getElementById(<span class="string">'pointlist'</span>)</span><br><span class="line">        <span class="built_in">console</span>.log(outdiv.style.width)</span><br><span class="line">        pointlist.style.left = (outdiv.offsetWidth-pointlist.offsetWidth) / <span class="number">2</span> + <span class="string">'px'</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="comment">/*第二部分*/</span></span><br><span class="line">        <span class="comment">//设置默认选中的小圆点</span></span><br><span class="line">        <span class="keyword">var</span> index = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> Alla = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'a'</span>)</span><br><span class="line">        Alla[index].style.backgroundColor = <span class="string">'black'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置一个定时器使它平滑的切换</span></span><br><span class="line">        <span class="keyword">var</span> AllTime = <span class="number">400</span>; <span class="comment">//每张照片移动的时间</span></span><br><span class="line">        <span class="keyword">var</span> itemtime = <span class="number">20</span>; <span class="comment">//每小段的间隔时间</span></span><br><span class="line">        <span class="keyword">var</span> itemwidth = <span class="number">600</span>/(AllTime/itemtime) <span class="comment">//每张图分成的小段距离</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历小圆点，绑定点击事件,并点击后切换图片</span></span><br><span class="line">        <span class="comment">// 注意：for循环先遍历并每个a都绑定了事件</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;Alla.length;i++)&#123;</span><br><span class="line">            Alla[i].num = i</span><br><span class="line">            Alla[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//当进行手动操作时关闭自动定时器</span></span><br><span class="line">                clearInterval(setintervalid)</span><br><span class="line"></span><br><span class="line">                <span class="comment">//注意此处用this不是用Alla[i].num</span></span><br><span class="line">                <span class="comment">// alert(this.num)</span></span><br><span class="line">                index = <span class="keyword">this</span>.num</span><br><span class="line">                Alla[index].style.backgroundColor= <span class="string">'black'</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 调用小圆点颜色切换函数(此处有产生闭包)</span></span><br><span class="line">                pointqh();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 切换图片</span></span><br><span class="line">               <span class="comment">/* 第一张图片：0 *600</span></span><br><span class="line"><span class="comment">                第二张图片：-1 * 600</span></span><br><span class="line"><span class="comment">                第三张图片：-2 * 600</span></span><br><span class="line"><span class="comment">                。。。*/</span></span><br><span class="line">                <span class="comment">//点击切换图片</span></span><br><span class="line">                move(imglist,<span class="string">'left'</span>,<span class="number">-600</span>*index,itemwidth,itemtime,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    <span class="comment">//手动切换完成后又开启自动定时器</span></span><br><span class="line">                    autoqh()</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 点击后小圆点的颜色改变</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">pointqh</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">//当切换到第六张图片时，将小圆点切换到第一个</span></span><br><span class="line">            <span class="keyword">if</span>(index &gt;= liunmber.length<span class="number">-1</span>)&#123;</span><br><span class="line">                index = <span class="number">0</span>;</span><br><span class="line">                <span class="comment">//将图片切换回第一张</span></span><br><span class="line">                imglist.style.left = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 先遍历将小圆点的颜色都变成红色</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;Alla.length;i++ )&#123;</span><br><span class="line">            <span class="comment">/*此处需注意：由于内联样式优先级较高，所以点击之后backgroundColor = 'red'，</span></span><br><span class="line"><span class="comment">                会时hover失效，所以这里red不能要,但默认样式有设成红色，所以ok*/</span></span><br><span class="line">            </span><br><span class="line">                Alla[i].style.backgroundColor = <span class="string">''</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 使用了外部函数变量index，产生闭包</span></span><br><span class="line">            Alla[index].style.backgroundColor = <span class="string">'black'</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*第三部分*/</span></span><br><span class="line">        <span class="comment">// 启动自动切换功能</span></span><br><span class="line">        autoqh()</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义成全局定时器，方便其他函数进行关闭开启的操作</span></span><br><span class="line">        <span class="keyword">var</span> setintervalid;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">autoqh</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">//开启定时器</span></span><br><span class="line">            setintervalid = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">//index自增</span></span><br><span class="line">                index++</span><br><span class="line">                <span class="comment">//调用move函数</span></span><br><span class="line">                move(imglist,<span class="string">'left'</span>,<span class="number">-600</span>*index,itemwidth,itemtime,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    <span class="comment">//图片移动的同时切换小圆点</span></span><br><span class="line">                    pointqh()</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,<span class="number">2000</span>)    </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JS轮播图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原生轮播图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery笔记：练习:点击回到顶部</title>
      <link href="/2020/08/05/2020-08-05.9/"/>
      <url>/2020/08/05/2020-08-05.9/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">  &lt;title&gt;<span class="number">03</span>_回到顶部&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">  &lt;style&gt;</span></span><br><span class="line"><span class="regexp">    #to_top &#123;</span></span><br><span class="line"><span class="regexp">      width: 30px;</span></span><br><span class="line"><span class="regexp">      height: 40px;</span></span><br><span class="line"><span class="regexp">      font: 14px/</span><span class="number">20</span>px arial;</span><br><span class="line">      text-align: center;</span><br><span class="line">      background: #06c;</span><br><span class="line">      position: fixed;</span><br><span class="line">      cursor: pointer;</span><br><span class="line">      color: #fff;</span><br><span class="line">      left: <span class="number">1050</span>px;</span><br><span class="line">      top: <span class="number">500</span>px;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body style=<span class="string">"height: 2000px;"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">"to_top"</span>&gt;返回顶部&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">" src="</span>jquery<span class="number">-1.10</span><span class="number">.1</span>.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script type="</span>text/javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">  $('#to_top').click(function () &#123;</span></span><br><span class="line"><span class="string">    //瞬间回到顶部</span></span><br><span class="line"><span class="string">    // $('html,body').scrollTop(0)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    //平滑回到顶部</span></span><br><span class="line"><span class="string">      //测出总距离</span></span><br><span class="line"><span class="string">      var $page = $('html,body')</span></span><br><span class="line"><span class="string">      var distance = $('html').scrollTop() + $('body').scrollTop()</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">      //设置回到顶部所需的总时间</span></span><br><span class="line"><span class="string">      var time = 500</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      //间隔时间</span></span><br><span class="line"><span class="string">      var intervalTime = 10</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      //每小段的距离</span></span><br><span class="line"><span class="string">      var itemDistance = distance/(time/intervalTime)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      //使用循环定时器不断滚动</span></span><br><span class="line"><span class="string">      var intervalId = setInterval(function()&#123;</span></span><br><span class="line"><span class="string">        distance -= itemDistance</span></span><br><span class="line"><span class="string">        if(distance&lt;=0)&#123;</span></span><br><span class="line"><span class="string">          distance = 0  //修正</span></span><br><span class="line"><span class="string">          clearInterval(intervalId)  //关闭定时器 </span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        $page.scrollTop(distance)</span></span><br><span class="line"><span class="string">      &#125;,intervalTime)</span></span><br><span class="line"><span class="string">  &#125;)</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery笔记：练习:多Tab点击切换</title>
      <link href="/2020/08/05/2020-08-05.8/"/>
      <url>/2020/08/05/2020-08-05.8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">  &lt;title&gt;<span class="number">02</span>_多Tab点击切换&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">  &lt;style&gt;</span></span><br><span class="line"><span class="regexp">    * &#123;</span></span><br><span class="line"><span class="regexp">      margin: 0;</span></span><br><span class="line"><span class="regexp">      padding: 0;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    #tab li &#123;</span></span><br><span class="line"><span class="regexp">      float: left;</span></span><br><span class="line"><span class="regexp">      list-style: none;</span></span><br><span class="line"><span class="regexp">      width: 80px;</span></span><br><span class="line"><span class="regexp">      height: 40px;</span></span><br><span class="line"><span class="regexp">      line-height: 40px;</span></span><br><span class="line"><span class="regexp">      cursor: pointer;</span></span><br><span class="line"><span class="regexp">      text-align: center;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    #container &#123;</span></span><br><span class="line"><span class="regexp">      position: relative;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    #content1, #content2, #content3 &#123;</span></span><br><span class="line"><span class="regexp">      width: 300px;</span></span><br><span class="line"><span class="regexp">      height: 100px;</span></span><br><span class="line"><span class="regexp">      padding: 30px;</span></span><br><span class="line"><span class="regexp">      position: absolute;</span></span><br><span class="line"><span class="regexp">      top: 40px;</span></span><br><span class="line"><span class="regexp">      left: 0;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    #tab1, #content1 &#123;</span></span><br><span class="line"><span class="regexp">      background-color: #ffcc00;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    #tab2, #content2 &#123;</span></span><br><span class="line"><span class="regexp">      background-color: #ff00cc;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    #tab3, #content3 &#123;</span></span><br><span class="line"><span class="regexp">      background-color: #00ccff;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>style&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;h2&gt;多Tab点击切换&lt;/</span>h2&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul id=<span class="string">"tab"</span>&gt;</span><br><span class="line">  &lt;li id=<span class="string">"tab1"</span> value=<span class="string">"1"</span>&gt;<span class="number">10</span>元套餐&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">  &lt;li id="tab2" value="2"&gt;30元套餐&lt;/</span>li&gt;</span><br><span class="line">  &lt;li id=<span class="string">"tab3"</span> value=<span class="string">"3"</span>&gt;<span class="number">50</span>元包月&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">&lt;/u</span>l&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">"container"</span>&gt;</span><br><span class="line">  &lt;div id=<span class="string">"content1"</span>&gt;</span><br><span class="line">    <span class="number">10</span>元套餐详情：&lt;br/&gt;&amp;nbsp;每月套餐内拨打<span class="number">100</span>分钟，超出部分<span class="number">2</span>毛/分钟</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div id="content2" style="display: none"&gt;</span></span><br><span class="line"><span class="regexp">    30元套餐详情：&lt;br/</span>&gt;&amp;nbsp;每月套餐内拨打<span class="number">300</span>分钟，超出部分<span class="number">1.5</span>毛/分钟</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div id="content3" style="display: none"&gt;</span></span><br><span class="line"><span class="regexp">    50元包月详情：&lt;br/</span>&gt;&amp;nbsp;每月无限量随心打</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"jquery-1.10.1.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  var $contents = $('#container&gt;div')</span></span><br><span class="line"><span class="string">  //方式1：</span></span><br><span class="line"><span class="string">  // //给3个li加监听</span></span><br><span class="line"><span class="string">  // $('#tab&gt;li').click(function()&#123; //隐式遍历</span></span><br><span class="line"><span class="string">  //   //隐藏所有内容div</span></span><br><span class="line"><span class="string">  //   $contents.css('display','none')</span></span><br><span class="line"><span class="string">  //   //显示对应的内容div</span></span><br><span class="line"><span class="string">  //   //得到当前点击的li在兄弟中下标</span></span><br><span class="line"><span class="string">  //   var index = $(this).index()</span></span><br><span class="line"><span class="string">  //   //找到对应内容div，并显示方式1：</span></span><br><span class="line"><span class="string">  //   $contents[index].style.display = 'block'</span></span><br><span class="line"><span class="string">  //   //找到对应内容div，并显示方式2:</span></span><br><span class="line"><span class="string">  //   // $($contents[index]).css('display','block')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  // &#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//更好的方式2：</span></span><br><span class="line"><span class="string">  var currIndex  = 0 //当前显示内容div的下标</span></span><br><span class="line"><span class="string">  $('#tab&gt;li').click(function()&#123;  //隐式遍历</span></span><br><span class="line"><span class="string">    // 点击时，隐藏当前已经显示的内容div</span></span><br><span class="line"><span class="string">    $contents[currIndex].style.display = 'none'</span></span><br><span class="line"><span class="string">    //显示被点击的div内容</span></span><br><span class="line"><span class="string">      //得到被点击的div下包</span></span><br><span class="line"><span class="string">    var index = $(this).index()</span></span><br><span class="line"><span class="string">    //找到被点击div并显示</span></span><br><span class="line"><span class="string">    $contents[index].style.display = 'block'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    //更新当前的下标</span></span><br><span class="line"><span class="string">    currIndex = index</span></span><br><span class="line"><span class="string">  &#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery笔记：练习:添加删除记录</title>
      <link href="/2020/08/05/2020-08-05.7/"/>
      <url>/2020/08/05/2020-08-05.7/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01//EN"</span> <span class="string">"http://www.w3.org/TR/html4/strict.dtd"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span><br><span class="line">  &lt;title&gt;添加删除记录练习&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">  &lt;link rel="stylesheet" type="text/</span>css<span class="string">" href="</span>css.css<span class="string">"/&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;table id="</span>employeeTable<span class="string">"&gt;</span></span><br><span class="line"><span class="string">  &lt;tr&gt;</span></span><br><span class="line"><span class="string">    &lt;th&gt;Name&lt;/th&gt;</span></span><br><span class="line"><span class="string">    &lt;th&gt;Email&lt;/th&gt;</span></span><br><span class="line"><span class="string">    &lt;th&gt;Salary&lt;/th&gt;</span></span><br><span class="line"><span class="string">    &lt;th&gt;&amp;nbsp;&lt;/th&gt;</span></span><br><span class="line"><span class="string">  &lt;/tr&gt;</span></span><br><span class="line"><span class="string">  &lt;tr&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;Tom&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;tom@tom.com&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;5000&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;&lt;a href="</span>deleteEmp?id=<span class="number">001</span><span class="string">"&gt;Delete&lt;/a&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">  &lt;/tr&gt;</span></span><br><span class="line"><span class="string">  &lt;tr&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;Jerry&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;jerry@sohu.com&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;8000&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;&lt;a href="</span>deleteEmp?id=<span class="number">002</span><span class="string">"&gt;Delete&lt;/a&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">  &lt;/tr&gt;</span></span><br><span class="line"><span class="string">  &lt;tr&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;Bob&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;bob@tom.com&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;10000&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;&lt;a href="</span>deleteEmp?id=<span class="number">003</span><span class="string">"&gt;Delete&lt;/a&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">  &lt;/tr&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/table&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;div id="</span>formDiv<span class="string">"&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;h4&gt;添加新员工&lt;/h4&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;table&gt;</span></span><br><span class="line"><span class="string">    &lt;tr&gt;</span></span><br><span class="line"><span class="string">      &lt;td class="</span>word<span class="string">"&gt;name:&lt;/td&gt;</span></span><br><span class="line"><span class="string">      &lt;td class="</span>inp<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;input type="</span>text<span class="string">" name="</span>empName<span class="string">" id="</span>empName<span class="string">"/&gt;</span></span><br><span class="line"><span class="string">      &lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;/tr&gt;</span></span><br><span class="line"><span class="string">    &lt;tr&gt;</span></span><br><span class="line"><span class="string">      &lt;td class="</span>word<span class="string">"&gt;email:&lt;/td&gt;</span></span><br><span class="line"><span class="string">      &lt;td class="</span>inp<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;input type="</span>text<span class="string">" name="</span>email<span class="string">" id="</span>email<span class="string">"/&gt;</span></span><br><span class="line"><span class="string">      &lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;/tr&gt;</span></span><br><span class="line"><span class="string">    &lt;tr&gt;</span></span><br><span class="line"><span class="string">      &lt;td class="</span>word<span class="string">"&gt;salary:&lt;/td&gt;</span></span><br><span class="line"><span class="string">      &lt;td class="</span>inp<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;input type="</span>text<span class="string">" name="</span>salary<span class="string">" id="</span>salary<span class="string">"/&gt;</span></span><br><span class="line"><span class="string">      &lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;/tr&gt;</span></span><br><span class="line"><span class="string">    &lt;tr&gt;</span></span><br><span class="line"><span class="string">      &lt;td colspan="</span><span class="number">2</span><span class="string">" align="</span>center<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;button id="</span>addEmpButton<span class="string">" value="</span>abc<span class="string">"&gt;</span></span><br><span class="line"><span class="string">          Submit</span></span><br><span class="line"><span class="string">        &lt;/button&gt;</span></span><br><span class="line"><span class="string">      &lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;/tr&gt;</span></span><br><span class="line"><span class="string">  &lt;/table&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script type="</span>text/javascript<span class="string">" src="</span>jquery<span class="number">-1.10</span><span class="number">.1</span>.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script type="</span>text/javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">  /*</span></span><br><span class="line"><span class="string">  1. 添加</span></span><br><span class="line"><span class="string">  2. 删除</span></span><br><span class="line"><span class="string">   */</span></span><br><span class="line"><span class="string">  $('#addEmpButton').click(function () &#123;</span></span><br><span class="line"><span class="string">    //1. 收集输入的数据</span></span><br><span class="line"><span class="string">    var $empName = $('#empName')</span></span><br><span class="line"><span class="string">    var $email = $('#email')</span></span><br><span class="line"><span class="string">    var $salary = $('#salary')</span></span><br><span class="line"><span class="string">    var empName = $empName.val()</span></span><br><span class="line"><span class="string">    var email = $email.val()</span></span><br><span class="line"><span class="string">    var salary = $salary.val()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    //2. 生成对应的&lt;tr&gt;标签结构, 并插入#employeeTable的tbody中</span></span><br><span class="line"><span class="string">    /*</span></span><br><span class="line"><span class="string">     &lt;tr&gt;</span></span><br><span class="line"><span class="string">       &lt;td&gt;Bob&lt;/td&gt;</span></span><br><span class="line"><span class="string">       &lt;td&gt;bob@tom.com&lt;/td&gt;</span></span><br><span class="line"><span class="string">       &lt;td&gt;10000&lt;/td&gt;</span></span><br><span class="line"><span class="string">       &lt;td&gt;&lt;a href="</span>deleteEmp?id=<span class="number">003</span><span class="string">"&gt;Delete&lt;/a&gt;&lt;/td&gt;</span></span><br><span class="line"><span class="string">     &lt;/tr&gt;</span></span><br><span class="line"><span class="string">     */</span></span><br><span class="line"><span class="string">    var $xxx = $('&lt;tr&gt;&lt;/tr&gt;')</span></span><br><span class="line"><span class="string">      .append('&lt;td&gt;'+empName+'&lt;/td&gt;') // 拼串</span></span><br><span class="line"><span class="string">      .append('&lt;td&gt;'+email+'&lt;/td&gt;')</span></span><br><span class="line"><span class="string">      .append('&lt;td&gt;'+salary+'&lt;/td&gt;')</span></span><br><span class="line"><span class="string">      .append('&lt;td&gt;&lt;a href="</span>deleteEmp?id=<span class="string">"'+Date.now()+'&gt;Delete&lt;/a&gt;&lt;/td&gt;')</span></span><br><span class="line"><span class="string">      .appendTo('#employeeTable&gt;tbody')</span></span><br><span class="line"><span class="string">      // .find('a')</span></span><br><span class="line"><span class="string">      // .click(clickDelete)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    //3. 清除输入</span></span><br><span class="line"><span class="string">    $empName.val('')</span></span><br><span class="line"><span class="string">    $email.val('')</span></span><br><span class="line"><span class="string">    $salary.val('')</span></span><br><span class="line"><span class="string">  &#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  //给所有删除链接绑定点击监听</span></span><br><span class="line"><span class="string">  // $('#employeeTable a').click(clickDelete)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  // 通过table实现对所有a的click事件委托</span></span><br><span class="line"><span class="string">  $('#employeeTable').delegate('a', 'click', clickDelete)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  /*</span></span><br><span class="line"><span class="string">  点击删除的回调函数</span></span><br><span class="line"><span class="string">   */</span></span><br><span class="line"><span class="string">  function clickDelete () &#123;</span></span><br><span class="line"><span class="string">    var $tr = $(this).parent().parent()</span></span><br><span class="line"><span class="string">    var name = $tr.children(':first').html()</span></span><br><span class="line"><span class="string">    if(confirm('确定删除'+name+'吗?')) &#123;</span></span><br><span class="line"><span class="string">      $tr.remove()</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    return false</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery笔记：练习：爱好选择器</title>
      <link href="/2020/08/05/2020-08-05.6/"/>
      <url>/2020/08/05/2020-08-05.6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span><br><span class="line">  &lt;title&gt;全选练习&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form&gt;</span><br><span class="line">  你爱好的运动是？&lt;input type=<span class="string">"checkbox"</span> id=<span class="string">"checkedAllBox"</span>/&gt;全选/全不选</span><br><span class="line"></span><br><span class="line">  &lt;br/&gt;</span><br><span class="line">  &lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"items"</span> value=<span class="string">"足球"</span>/&gt;足球</span><br><span class="line">  &lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"items"</span> value=<span class="string">"篮球"</span>/&gt;篮球</span><br><span class="line">  &lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"items"</span> value=<span class="string">"羽毛球"</span>/&gt;羽毛球</span><br><span class="line">  &lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"items"</span> value=<span class="string">"乒乓球"</span>/&gt;乒乓球</span><br><span class="line">  &lt;br/&gt;</span><br><span class="line">  &lt;input type=<span class="string">"button"</span> id=<span class="string">"checkedAllBtn"</span> value=<span class="string">"全　选"</span>/&gt;</span><br><span class="line">  &lt;input type=<span class="string">"button"</span> id=<span class="string">"checkedNoBtn"</span> value=<span class="string">"全不选"</span>/&gt;</span><br><span class="line">  &lt;input type=<span class="string">"button"</span> id=<span class="string">"checkedRevBtn"</span> value=<span class="string">"反　选"</span>/&gt;</span><br><span class="line">  &lt;input type=<span class="string">"button"</span> id=<span class="string">"sendBtn"</span> value=<span class="string">"提　交"</span>/&gt;</span><br><span class="line">&lt;<span class="regexp">/form&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">" src="</span>jquery<span class="number">-1.10</span><span class="number">.1</span>.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script type="</span>text/javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">  /*</span></span><br><span class="line"><span class="string">   功能说明:</span></span><br><span class="line"><span class="string">   1. 点击'全选': 选中所有爱好</span></span><br><span class="line"><span class="string">   2. 点击'全不选': 所有爱好都不勾选</span></span><br><span class="line"><span class="string">   3. 点击'反选': 改变所有爱好的勾选状态</span></span><br><span class="line"><span class="string">   4. 点击'提交': 提示所有勾选的爱好</span></span><br><span class="line"><span class="string">   5. 点击'全选/全不选': 选中所有爱好, 或者全不选中</span></span><br><span class="line"><span class="string">   6. 点击某个爱好时, 必要时更新'全选/全不选'的选中状态</span></span><br><span class="line"><span class="string">   */</span></span><br><span class="line"><span class="string">  var $checkedAllBox = $('#checkedAllBox')</span></span><br><span class="line"><span class="string">  var $items = $(':checkbox[name=items]')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  // 1. 点击'全选': 选中所有爱好</span></span><br><span class="line"><span class="string">  $('#checkedAllBtn').click(function () &#123;</span></span><br><span class="line"><span class="string">    $items.prop('checked', true)</span></span><br><span class="line"><span class="string">    $checkedAllBox.prop('checked', true)</span></span><br><span class="line"><span class="string">  &#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  // 2. 点击'全不选': 所有爱好都不勾选</span></span><br><span class="line"><span class="string">  $('#checkedNoBtn').click(function () &#123;</span></span><br><span class="line"><span class="string">    $items.prop('checked', false)</span></span><br><span class="line"><span class="string">    $checkedAllBox.prop('checked', false)</span></span><br><span class="line"><span class="string">  &#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  // 3. 点击'反选': 改变所有爱好的勾选状态</span></span><br><span class="line"><span class="string">  $('#checkedRevBtn').click(function () &#123;</span></span><br><span class="line"><span class="string">    $items.each(function () &#123;</span></span><br><span class="line"><span class="string">      this.checked = !this.checked</span></span><br><span class="line"><span class="string">    &#125;)</span></span><br><span class="line"><span class="string">    $checkedAllBox.prop('checked', $items.filter(':not(:checked)').length===0)</span></span><br><span class="line"><span class="string">  &#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  //4. 点击'提交': 提示所有勾选的爱好</span></span><br><span class="line"><span class="string">  $('#sendBtn').click(function () &#123;</span></span><br><span class="line"><span class="string">    $items.filter(':checked').each(function () &#123;</span></span><br><span class="line"><span class="string">      alert(this.value)</span></span><br><span class="line"><span class="string">    &#125;)</span></span><br><span class="line"><span class="string">  &#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  // 5. 点击'全选/全不选': 选中所有爱好, 或者全不选中</span></span><br><span class="line"><span class="string">  $checkedAllBox.click(function () &#123;</span></span><br><span class="line"><span class="string">    $items.prop('checked', this.checked)</span></span><br><span class="line"><span class="string">  &#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  // 6. 点击某个爱好时, 必要时更新'全选/全不选'的选中状态</span></span><br><span class="line"><span class="string">  $items.click(function () &#123;</span></span><br><span class="line"><span class="string">    $checkedAllBox.prop('checked', $items.filter(':not(:checked)').length===0)</span></span><br><span class="line"><span class="string">  &#125;)</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery笔记：两个事件的区别</title>
      <link href="/2020/08/05/2020-08-05.5/"/>
      <url>/2020/08/05/2020-08-05.5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;<span class="number">19</span>_事件切换&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">* &#123;</span><br><span class="line">margin: <span class="number">0</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.div1 &#123;</span><br><span class="line">position: absolute;</span><br><span class="line">width: <span class="number">200</span>px;</span><br><span class="line">height: <span class="number">200</span>px;</span><br><span class="line">top: <span class="number">50</span>px;</span><br><span class="line">left: <span class="number">10</span>px;</span><br><span class="line">background: olive;</span><br><span class="line">&#125;</span><br><span class="line">.div2 &#123;</span><br><span class="line">position: absolute;</span><br><span class="line">width: <span class="number">100</span>px;</span><br><span class="line">height: <span class="number">100</span>px;</span><br><span class="line">top: <span class="number">50</span>px;</span><br><span class="line">background: red;</span><br><span class="line">&#125;</span><br><span class="line">.div3 &#123;</span><br><span class="line">position: absolute;</span><br><span class="line">width: <span class="number">200</span>px;</span><br><span class="line">height: <span class="number">200</span>px;</span><br><span class="line">top: <span class="number">50</span>px;</span><br><span class="line">left: <span class="number">230</span>px;</span><br><span class="line">background: olive;</span><br><span class="line">&#125;</span><br><span class="line">.div4 &#123;</span><br><span class="line">position: absolute;</span><br><span class="line">width: <span class="number">100</span>px;</span><br><span class="line">height: <span class="number">100</span>px;</span><br><span class="line">top: <span class="number">50</span>px;</span><br><span class="line">background: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.divText&#123;</span><br><span class="line">position: absolute;</span><br><span class="line">top: <span class="number">330</span>px;</span><br><span class="line">left: <span class="number">10</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;div class="divText"&gt;</span></span><br><span class="line"><span class="regexp">区分鼠标的事件</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"div1"</span>&gt;</span><br><span class="line">div1.....</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"div2"</span>&gt;div2....&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"div3"</span>&gt;</span><br><span class="line">div3.....</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"div4"</span>&gt;div4....&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">区别：mouseover与mouseenter</span><br><span class="line">*mouseover：在移入子元素时也会触发，对应mouseout</span><br><span class="line">*mouseenter：只在移入当前元素时才触发，对应mouseleave</span><br><span class="line">hover()使用的就是mouseenter()和mouseleave()</span><br><span class="line">区别：on(<span class="string">'eventName'</span>,fun)与eventName(fun)</span><br><span class="line">*on(<span class="string">'eventName'</span>,fun):通用，但编码麻烦</span><br><span class="line">*eventName(fun):编码简单，但有的事件没有对应的方法</span><br><span class="line">--&gt;</span><br><span class="line">&lt;script src=<span class="string">"js/jquery-1.10.1.js"</span> type=<span class="string">"text/javascript"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">$('.div1')</span></span><br><span class="line"><span class="string">.mouseover(function()&#123;</span></span><br><span class="line"><span class="string">console.log('mouseover 进入')</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string">.mouseout(function()&#123;</span></span><br><span class="line"><span class="string">console.log('mouseout 离开')</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$('div3')</span></span><br><span class="line"><span class="string">.mouseenter(function()&#123;</span></span><br><span class="line"><span class="string">console.log('mouseenter 进入')</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string">.mouseleave(function()&#123;</span></span><br><span class="line"><span class="string">console.log('mouseleave 离开')</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery笔记：文档_增删改</title>
      <link href="/2020/08/05/2020-08-05.4/"/>
      <url>/2020/08/05/2020-08-05.4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">  &lt;title&gt;<span class="number">17</span>_文档_增删改&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">  * &#123;</span><br><span class="line">    margin: <span class="number">0</span>px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .div1 &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    width: <span class="number">200</span>px;</span><br><span class="line">    height: <span class="number">200</span>px;</span><br><span class="line">    top: <span class="number">20</span>px;</span><br><span class="line">    left: <span class="number">10</span>px;</span><br><span class="line">    background: blue;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .div2 &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    width: <span class="number">100</span>px;</span><br><span class="line">    height: <span class="number">100</span>px;</span><br><span class="line">    <span class="comment">/*top: 50px;*/</span></span><br><span class="line">    background: red;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .div3 &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: <span class="number">250</span>px;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;ul id="ul1"&gt;</span></span><br><span class="line"><span class="regexp">  &lt;li&gt;AAAAA&lt;/</span>li&gt;</span><br><span class="line"></span><br><span class="line">  &lt;li title=<span class="string">"hello"</span>&gt;BBBBB&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">  &lt;li class="box"&gt;CCCCC&lt;/</span>li&gt;</span><br><span class="line"></span><br><span class="line">  &lt;li title=<span class="string">"hello"</span>&gt;DDDDDD&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">  &lt;li title="two"&gt;EEEEE&lt;/</span>li&gt;</span><br><span class="line">  &lt;li&gt;FFFFF&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/u</span>l&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;ul id=<span class="string">"ul2"</span>&gt;</span><br><span class="line">  &lt;li&gt;aaa&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">  &lt;li title="hello"&gt;bbb&lt;/</span>li&gt;</span><br><span class="line">  &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"box"</span>&gt;ccc&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">  &lt;li title="hello"&gt;ddd&lt;/</span>li&gt;</span><br><span class="line">  &lt;li title=<span class="string">"two"</span>&gt;eee&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">&lt;/u</span>l&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line"><span class="number">1.</span> 添加/替换元素</span><br><span class="line">  * append(content)向当前匹配的所有元素内部的最后插入指定内容</span><br><span class="line">    </span><br><span class="line">  * prepend(content)向当前匹配的所有元素内部的最前面插入指定内容</span><br><span class="line">    </span><br><span class="line">  * before(content) 将指定内容插入到当前所有匹配元素的前面</span><br><span class="line">   </span><br><span class="line">  * after(content)将指定内容插入到当前所有匹配元素的后面替换节点</span><br><span class="line">    </span><br><span class="line">  * replaceWith(content)用指定内容替换所有匹配的标签删除节点</span><br><span class="line">    </span><br><span class="line"><span class="number">2.</span> 删除元素</span><br><span class="line">  * empty()删除所有匹配元素的子元素</span><br><span class="line">    </span><br><span class="line">  * remove()删除所有匹配的元素</span><br><span class="line">    </span><br><span class="line">--&gt;</span><br><span class="line">&lt;script src=<span class="string">"js/jquery-1.10.1.js"</span> type=<span class="string">"text/javascript"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">  /*</span></span><br><span class="line"><span class="string">   需求:</span></span><br><span class="line"><span class="string">   1. 向id为ul1的ul下添加一个span(最后)</span></span><br><span class="line"><span class="string">   2. 向id为ul1的ul下添加一个span(最前)</span></span><br><span class="line"><span class="string">   3. 在id为ul1的ul下的li(title为hello)的前面添加span</span></span><br><span class="line"><span class="string">   4. 在id为ul1的ul下的li(title为hello)的后面添加span</span></span><br><span class="line"><span class="string">   5. 将在id为ul2的ul下的li(title为hello)全部替换为p</span></span><br><span class="line"><span class="string">   6. 移除id为ul2的ul下的所有li</span></span><br><span class="line"><span class="string">   */</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  //1. 向id为ul1的ul下添加一个span(最后)</span></span><br><span class="line"><span class="string">  var $ul1 = $('#ul1')</span></span><br><span class="line"><span class="string">  // $ul1.append('&lt;span&gt;append()添加的span&lt;/span&gt;')</span></span><br><span class="line"><span class="string">  $('&lt;span&gt;appendTo()添加的span&lt;/span&gt;').appendTo($ul1)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  //2. 向id为ul1的ul下添加一个span(最前)</span></span><br><span class="line"><span class="string">  // $ul1.prepend('&lt;span&gt;prepend()添加的span&lt;/span&gt;')</span></span><br><span class="line"><span class="string">  $('&lt;span&gt;prependTo()添加的span&lt;/span&gt;').prependTo($ul1)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  //3. 在id为ul1的ul下的li(title为hello)的前面添加span</span></span><br><span class="line"><span class="string">  $ul1.children('li[title=hello]').before('&lt;span&gt;before()添加的span&lt;/span&gt;')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  //4. 在id为ul1的ul下的li(title为hello)的后面添加span</span></span><br><span class="line"><span class="string">  $ul1.children('li[title=hello]').after('&lt;span&gt;after()添加的span&lt;/span&gt;')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  //5. 将在id为ul2的ul下的li(title为hello)全部替换为p</span></span><br><span class="line"><span class="string">  $('#ul2&gt;li[title=hello]').replaceWith('&lt;p&gt;replaceAll()替换的p&lt;/p&gt;')</span></span><br><span class="line"><span class="string">  //6. 移除id为ul2的ul下的所有li</span></span><br><span class="line"><span class="string">  // $('#ul2').empty()  // &lt;p&gt;也会删除</span></span><br><span class="line"><span class="string">  $('#ul2&gt;li').remove()</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery笔记：事件委托</title>
      <link href="/2020/08/05/2020-08-05.3/"/>
      <url>/2020/08/05/2020-08-05.3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">  &lt;title&gt;<span class="number">20</span>_事件委托<span class="number">2</span>&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">  &lt;li&gt;<span class="number">1111</span>&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">  &lt;li&gt;2222&lt;/</span>li&gt;</span><br><span class="line">  &lt;li&gt;<span class="number">3333</span>&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">  &lt;li&gt;4444&lt;/</span>li&gt;</span><br><span class="line">&lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;li&gt;22222&lt;/</span>li&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;button id=<span class="string">"btn1"</span>&gt;添加新的li&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">&lt;button id="btn2"&gt;删除ul上的事件委托的监听器&lt;/</span>button&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--</span><br><span class="line">  <span class="number">1.</span>事件委托（委派/代理）</span><br><span class="line">    *将多个子元素（例如：li）的事件监听委托给父辈原（ul）处理</span><br><span class="line">    *监听回调是加在父辈元素上的</span><br><span class="line">    *当操作任何一个子元素（li）时，事件会冒泡到父辈元素（ul)上</span><br><span class="line">    *父辈元素不会直接处理事件，而是根据even.target得到发生事件的子元素（li)，通过这个子元素调用事件回调函数</span><br><span class="line"> </span><br><span class="line">  <span class="number">2.</span>事件委托的<span class="number">2</span>方：</span><br><span class="line">    *委托方：业主 li</span><br><span class="line">    *被委托放：中介 ul</span><br><span class="line">  </span><br><span class="line">  <span class="number">3.</span>使用委托的好处</span><br><span class="line">    *添加新的子元素，自动有事件响应处理</span><br><span class="line">    *减少事件监听的数量： n==》<span class="number">1</span></span><br><span class="line">  </span><br><span class="line">  <span class="number">4.</span>jQuery的时间委托API</span><br><span class="line">    *设置事件委托：$(parentSelector).delegate(ChildrenSelector,eventName,callback)</span><br><span class="line">    *移除事件委托：$(parentSelector).undelegate(eventName)</span><br><span class="line"></span><br><span class="line">--&gt;</span><br><span class="line">&lt;script src=<span class="string">"js/jquery-1.10.1.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    /</span>*</span><br><span class="line">   需求：</span><br><span class="line">   <span class="number">1.</span> 点击 li 背景就会变为红色</span><br><span class="line">   <span class="number">2.</span> 点击 btn 就添加一个 li</span><br><span class="line">  *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">  /</span><span class="regexp">/1.不用事件委托时，新添加的li点击后背景不会变红</span></span><br><span class="line"><span class="regexp">  /</span>*$(<span class="string">'ul&gt;li'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.style.background = <span class="string">'red'</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  $(<span class="string">'#btn'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'ul'</span>).append(<span class="string">'&lt;li&gt;新增的li....&lt;/li&gt;'</span>)</span><br><span class="line">  &#125;)*<span class="regexp">/</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  /</span><span class="regexp">/ 2.设置事件委托</span></span><br><span class="line"><span class="regexp">  $('ul').delegate('li','click',function()&#123;</span></span><br><span class="line"><span class="regexp">    this.style.background = 'red'</span></span><br><span class="line"><span class="regexp">  &#125;)</span></span><br><span class="line"><span class="regexp">  /</span><span class="regexp">/添加li</span></span><br><span class="line"><span class="regexp">  $('#btn1').click(function()&#123;</span></span><br><span class="line"><span class="regexp">    $('ul').append('&lt;li&gt;新增的li。。。&lt;/</span>li&gt;<span class="string">')</span></span><br><span class="line"><span class="string">  &#125;)</span></span><br><span class="line"><span class="string">  //移除事件委派</span></span><br><span class="line">  $('#btn2').click(function()&#123;</span><br><span class="line">    $(<span class="string">'ul'</span>).undelegate(<span class="string">'click'</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery笔记：笔记总结2</title>
      <link href="/2020/08/05/2020-08-05.2/"/>
      <url>/2020/08/05/2020-08-05.2/</url>
      
        <content type="html"><![CDATA[<h1 id="1-CSS模块"><a href="#1-CSS模块" class="headerlink" title="1.CSS模块"></a>1.CSS模块</h1><h2 id="style样式"><a href="#style样式" class="headerlink" title="*style样式"></a>*style样式</h2><p>  css(styleName):根据样式名得到对应的值</p><p>  css(styleName,value)：设置一个样式和其值</p><p>  css({多个样式对})：设置多个样式</p><h2 id="位置坐标"><a href="#位置坐标" class="headerlink" title="*位置坐标"></a>*位置坐标</h2><p>  offset():读/写当前元素坐标（原点是页面左上角）</p><p>  position():读当前元素坐标（原点是父元素左上角）</p><p>  scrollTop()/scrollLeft():读/写元素/页面的滚动条坐标</p><h2 id="尺寸"><a href="#尺寸" class="headerlink" title="*尺寸"></a>*尺寸</h2><p>  width()/height(): width/height</p><p>  innerWidth()/innerHeight():width + padding</p><p>  outerWidth()/outerHeight()：width + padding + border</p><h1 id="2-筛选模块"><a href="#2-筛选模块" class="headerlink" title="2.筛选模块"></a>2.筛选模块</h1><h2 id="过滤：在jQuery对象内部的元素中找出部分匹配的元素，并封装成新的jQuery对象返回"><a href="#过滤：在jQuery对象内部的元素中找出部分匹配的元素，并封装成新的jQuery对象返回" class="headerlink" title="*过滤：在jQuery对象内部的元素中找出部分匹配的元素，并封装成新的jQuery对象返回"></a>*过滤：在jQuery对象内部的元素中找出部分匹配的元素，并封装成新的jQuery对象返回</h2><p>  first()</p><p>  last()</p><p>  eq(index)</p><p>  filter(selector):对当前元素提要求</p><p>  not(selector):对当前元素提要求并取反</p><p>  has(selector):对子孙元素提要求</p><h2 id="查找：查找jQuery对象内部的元素的子孙-兄弟-父母元素，并封装成新的jQuery对象返回"><a href="#查找：查找jQuery对象内部的元素的子孙-兄弟-父母元素，并封装成新的jQuery对象返回" class="headerlink" title="*查找：查找jQuery对象内部的元素的子孙/兄弟/父母元素，并封装成新的jQuery对象返回"></a>*查找：查找jQuery对象内部的元素的子孙/兄弟/父母元素，并封装成新的jQuery对象返回</h2><p>  children(selector):子元素</p><p>  find(selector):后代元素</p><p>  preAll(selector):前面的所有兄弟</p><p>  siblings(selector):所有兄弟</p><p>  parent():父元素</p><h1 id="3-文档处理模块"><a href="#3-文档处理模块" class="headerlink" title="3.文档处理模块"></a>3.文档处理模块</h1><h2 id="增加"><a href="#增加" class="headerlink" title="*增加"></a>*增加</h2><p>  append() / appenTo() :插入后部</p><p>  preppend() / preppendTo() :插入前部</p><p>  before(): 插到前面</p><p>  after(): 插到后面</p><h2 id="删除"><a href="#删除" class="headerlink" title="*删除"></a>*删除</h2><p>  remove():将自己及内部的子元素都删除</p><p>  empty(): 清空子元素</p><h2 id="更新"><a href="#更新" class="headerlink" title="*更新"></a>*更新</h2><p>  replaceWith()</p><h1 id="4-事件模块"><a href="#4-事件模块" class="headerlink" title="4.事件模块"></a>4.事件模块</h1><h2 id="绑定事件"><a href="#绑定事件" class="headerlink" title="*绑定事件"></a>*绑定事件</h2><p>  常用事件：click mouseenter/mouseleave mouseover/mouseout focus/blur</p><p>  eventName(function(){})</p><p>  on(‘eventName’,function(){})</p><p>  hover(function(){},function(){})</p><h2 id="解绑事件"><a href="#解绑事件" class="headerlink" title="*解绑事件"></a>*解绑事件</h2><p>  off(‘eventName’)</p><h2 id="事件的委托"><a href="#事件的委托" class="headerlink" title="*事件的委托"></a>*事件的委托</h2><h3 id="理解：将子元素的事件委托给父辈元素处理"><a href="#理解：将子元素的事件委托给父辈元素处理" class="headerlink" title="*理解：将子元素的事件委托给父辈元素处理"></a>*理解：将子元素的事件委托给父辈元素处理</h3><p>   *事件监听绑定在父元素身上，当事件发生在子元素上</p><p>   *事件会冒泡到父元素</p><p>   *但最终调用的事件回调函数是子元素：event.targate</p><h3 id="好处"><a href="#好处" class="headerlink" title="*好处"></a>*好处</h3><p>   *新增的元素没有事件监听</p><p>   *减少监听的数量（n==&gt;1）</p><h3 id="编码"><a href="#编码" class="headerlink" title="*编码"></a>*编码</h3><p>   delegate(‘子selector’,’eventName’,function(){}) // 回调函数中的this是子元素</p><h2 id="事件坐标"><a href="#事件坐标" class="headerlink" title="*事件坐标"></a>*事件坐标</h2><p>  event.offsetX:原点是当前元素左上角</p><p>  event.clientX:原点是窗口左上角</p><p>  event.pageX:原点是页面左上角</p><h2 id="事件相关"><a href="#事件相关" class="headerlink" title="*事件相关"></a>*事件相关</h2><p>  停止事件冒泡：event.stopPropagetion()</p><p>  阻止事件的默认行为：event.preventDefault()</p>]]></content>
      
      
      <categories>
          
          <category> jQuery总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery笔记：笔记总结1</title>
      <link href="/2020/08/05/2020-08-05.1/"/>
      <url>/2020/08/05/2020-08-05.1/</url>
      
        <content type="html"><![CDATA[<h1 id="1-了解jQuery"><a href="#1-了解jQuery" class="headerlink" title="1.了解jQuery"></a>1.了解jQuery</h1><h2 id="是什么？"><a href="#是什么？" class="headerlink" title="*是什么？"></a>*是什么？</h2><p>  一个JS函数库：write less,do more</p><p>  封装简化DOM操作（CRUD：增删改查）/Ajax</p><h2 id="为什么用它：why？"><a href="#为什么用它：why？" class="headerlink" title="*为什么用它：why？"></a>*为什么用它：why？</h2><p>  强大的选择器：方便快速查找DOM元素</p><p>  隐式遍历（迭代）：一次操作多个元素</p><p>  读写合一：读数据/写数据用的是一个函数</p><p>  事件处理</p><p>  链式调用</p><p>  DOM操作（CUD）</p><p>  样式操作</p><h2 id="如何使用：How？"><a href="#如何使用：How？" class="headerlink" title="*如何使用：How？"></a>*如何使用：How？</h2><h3 id="引入JQuery库"><a href="#引入JQuery库" class="headerlink" title="*引入JQuery库"></a>*引入JQuery库</h3><p>   本地引入与CDN远程引入</p><p>   测试版和生产版（压缩版）</p><h3 id="使用jQuery"><a href="#使用jQuery" class="headerlink" title="*使用jQuery"></a>*使用jQuery</h3><p>   使用jQuery函数：$/jQuery</p><p>   使用jQuery对象：$xxx(执行$()得到的)</p><h1 id="2-jQuery的2把利器"><a href="#2-jQuery的2把利器" class="headerlink" title="2.jQuery的2把利器"></a>2.jQuery的2把利器</h1><h2 id="jQuery函数：-jQuery"><a href="#jQuery函数：-jQuery" class="headerlink" title="*jQuery函数：$/jQuery"></a>*jQuery函数：$/jQuery</h2><h3 id="jQuery向外暴露的就是jQuery函数，可以直接使用"><a href="#jQuery向外暴露的就是jQuery函数，可以直接使用" class="headerlink" title="*jQuery向外暴露的就是jQuery函数，可以直接使用"></a>*jQuery向外暴露的就是jQuery函数，可以直接使用</h3><h3 id="当成一般函数使用：-param"><a href="#当成一般函数使用：-param" class="headerlink" title="*当成一般函数使用：$(param)"></a>*当成一般函数使用：$(param)</h3><p>   param是function：相当于window.onload = function（文档加载完成的监听）</p><p>   param是选择器字符串：查找所有匹配的DOM元素，返回包含所以DOM元素的jQuery对象</p><p>   param是DOM元素：将DOM元素对象包装为jQuery对象返回 $(this)</p><p>   param是标签字符串：创建标签DOM元素对象并包装为jQuery对象返回</p><h3 id="当成对象使用：-xxx"><a href="#当成对象使用：-xxx" class="headerlink" title="*当成对象使用：$.xxx"></a>*当成对象使用：$.xxx</h3><p>   each(obj/arr,function(key,value){}) 遍历函数</p><p>   trim(str)</p><h2 id="jQuery对象"><a href="#jQuery对象" class="headerlink" title="*jQuery对象"></a>*jQuery对象</h2><h3 id="包含所有匹配的n个DOM元素的伪数组对象"><a href="#包含所有匹配的n个DOM元素的伪数组对象" class="headerlink" title="*包含所有匹配的n个DOM元素的伪数组对象"></a>*包含所有匹配的n个DOM元素的伪数组对象</h3><h3 id="执行-返回的就是jQuery对象"><a href="#执行-返回的就是jQuery对象" class="headerlink" title="*执行$()返回的就是jQuery对象"></a>*执行$()返回的就是jQuery对象</h3><h3 id="基本行为："><a href="#基本行为：" class="headerlink" title="*基本行为："></a>*基本行为：</h3><p>   length/size():得到dom元素的个数</p><p>   each(function(index,domEle){}):遍历所有dom元素</p><p>   index()：得到当前dom元素在所有兄弟中的下标</p><h1 id="3-选择器"><a href="#3-选择器" class="headerlink" title="3.选择器"></a>3.选择器</h1><h2 id="是什么？-1"><a href="#是什么？-1" class="headerlink" title="*是什么？"></a>*是什么？</h2><p>  有特定语法规则（css选择器）的字符串</p><p>  用来查找某个/些DOM元素：$(selector)</p><h2 id="分类"><a href="#分类" class="headerlink" title="*分类"></a>*分类</h2><h3 id="基本"><a href="#基本" class="headerlink" title="*基本"></a>*基本</h3><p>   #id</p><p>   tagName/*</p><p>   .class</p><p>   selector1,selector2,selector3:并集</p><p>   selector1selector2selector3:交集</p><h3 id="层次-找子孙后代，兄弟元素"><a href="#层次-找子孙后代，兄弟元素" class="headerlink" title="*层次:找子孙后代，兄弟元素"></a>*层次:找子孙后代，兄弟元素</h3><p>   selector1&gt;selector2:找子元素</p><p>   selector1 selector2:找后代元素</p><h3 id="过滤：在原有匹配元素中筛选出其中一些"><a href="#过滤：在原有匹配元素中筛选出其中一些" class="headerlink" title="*过滤：在原有匹配元素中筛选出其中一些"></a>*过滤：在原有匹配元素中筛选出其中一些</h3><p>   :first</p><p>   :last</p><p>   :eq(index)  指定第几个</p><p>   :lt</p><p>   :gt</p><p>   :odd(奇数的)</p><p>   :even(偶数的)</p><p>   :not(selector) 不包含哪几个</p><p>   :hidden</p><p>   :visible</p><p>   [attrName]</p><p>   [attrName=value]</p><h3 id="表单"><a href="#表单" class="headerlink" title="*表单"></a>*表单</h3><p>   :input</p><p>   :text</p><p>   :checkbox</p><p>   :radio</p><p>   :checked (选中的)</p><h1 id="4-属性：操作标签的属性，标签体文本"><a href="#4-属性：操作标签的属性，标签体文本" class="headerlink" title="4.属性：操作标签的属性，标签体文本"></a>4.属性：操作标签的属性，标签体文本</h1><p> attr(name) / attr(name,value) 读写非布尔值的标签属性</p><p> prop(naem) / prop(name,value) 读写布尔值的标签属性</p><p> removeAttr(name)/removeProp(name) 删除属性</p><p> addClass(classValue) 添加class</p><p> removeClass(classValue) 移除指定class</p><p> val() / val(value) 低些标签的value</p><p> html() / html(htmlString) 读写标签体文本</p>]]></content>
      
      
      <categories>
          
          <category> jQuery总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：组合继承</title>
      <link href="/2020/07/30/2020-07-30.6/"/>
      <url>/2020/07/30/2020-07-30.6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line"></span><br><span class="line">     --&gt;</span><br><span class="line">     &lt;script&gt;</span><br><span class="line">         <span class="comment">//父类型</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">             <span class="keyword">this</span>.name = name</span><br><span class="line">             <span class="keyword">this</span>.age = age</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//给原型添加方法</span></span><br><span class="line">         Person.prototype.setName = <span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">             <span class="keyword">this</span>.name = name</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//子类型</span></span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name,age,price</span>)</span>&#123;</span><br><span class="line">             Person.call(<span class="keyword">this</span>,name,age)  <span class="comment">//假继承，为了得到属性,省略了下面两行代码</span></span><br><span class="line">            <span class="comment">//  this.name=name</span></span><br><span class="line">            <span class="comment">//  this.age=age</span></span><br><span class="line">             <span class="keyword">this</span>.price = price</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//继承关键一步：让子类型继承父类型方法</span></span><br><span class="line">         Student.prototype = <span class="keyword">new</span> Person()</span><br><span class="line"></span><br><span class="line">         <span class="comment">//让原型的constructor属性指回Student</span></span><br><span class="line">         Student.prototype.constructor = Student;</span><br><span class="line"></span><br><span class="line">         <span class="comment">//给子类型原型添加方法</span></span><br><span class="line">         Student.prototype.setPrice = <span class="function"><span class="keyword">function</span>(<span class="params">price</span>)</span>&#123;</span><br><span class="line">             <span class="keyword">this</span>.price= price</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">var</span> s = <span class="keyword">new</span> Student(<span class="string">"Tom,"</span>,<span class="number">23</span>,<span class="number">12222</span>)</span><br><span class="line">         <span class="built_in">console</span>.log(s.name,s.age,s.price)</span><br><span class="line">         s.setName(<span class="string">"Bob"</span>)</span><br><span class="line">         s.setPrice(<span class="number">123455</span>)</span><br><span class="line">         <span class="built_in">console</span>.log(s.name,s.age,s.price)</span><br><span class="line">         </span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 对象高级_继承模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：借用构造函数继承</title>
      <link href="/2020/07/30/2020-07-30.5/"/>
      <url>/2020/07/30/2020-07-30.5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        方式<span class="number">2</span>；借用构造函数继承（假的）</span><br><span class="line">        <span class="number">1.</span>套路：</span><br><span class="line">            <span class="number">1.</span>定义父类型构造函数</span><br><span class="line">            <span class="number">2.</span>定义子类型构造函数</span><br><span class="line">            <span class="number">3.</span>在子类型构造函数中调用父类型构造</span><br><span class="line">        <span class="number">2.</span>关键：</span><br><span class="line">            <span class="number">1.</span>在子类型构造函数中通过call()方法调用父类型构造函数</span><br><span class="line">     --&gt;</span><br><span class="line">     &lt;script&gt;</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">             <span class="keyword">this</span>.name = name</span><br><span class="line">             <span class="keyword">this</span>.age = age</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name,age,price</span>)</span>&#123;</span><br><span class="line">             Person.call(<span class="keyword">this</span>,name,age)  <span class="comment">//将Person当成this的一个属性。相当于：this.Person(name,age)</span></span><br><span class="line">             <span class="keyword">this</span>.price = price</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">var</span> s = <span class="keyword">new</span> Student(<span class="string">"Tom"</span>,<span class="number">20</span>,<span class="number">14000</span>)</span><br><span class="line">         <span class="built_in">console</span>.log(s.name,s.age,s.price)</span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 对象高级_继承模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：原型链继承</title>
      <link href="/2020/07/30/2020-07-30.4/"/>
      <url>/2020/07/30/2020-07-30.4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        方式一：原型链继承（子类型继承父类型）</span><br><span class="line">        <span class="number">1.</span>套路：</span><br><span class="line">            <span class="number">1.</span>定义父类型构造函数</span><br><span class="line">            <span class="number">2.</span>给父类型的原型添加方法</span><br><span class="line">            <span class="number">3.</span>定义子类型的构造函数</span><br><span class="line">            <span class="number">4.</span>创建父类型的实例对象赋予子类型的原型（关键）</span><br><span class="line">            <span class="number">5.</span>将子类型原型的构造属性设置为子类型</span><br><span class="line">            <span class="number">6.</span>给子类型原型添加方法</span><br><span class="line">            <span class="number">7.</span>创建子类型的对象，可以调用父类型的方法</span><br><span class="line">        <span class="number">2.</span>关键：</span><br><span class="line">            <span class="number">1.</span>子类型的原型为父类型的一个实例对象</span><br><span class="line">     --&gt;</span><br><span class="line"></span><br><span class="line">     &lt;script&gt;</span><br><span class="line">         <span class="comment">//父类型</span></span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">Supper</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.supProp = <span class="string">"Supper property"</span></span><br><span class="line">         &#125;</span><br><span class="line">         Supper.prototype.showSupperProp = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="built_in">console</span>.log(<span class="keyword">this</span>.supProp)</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="comment">//子类型</span></span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">Sub</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="keyword">this</span>.subProp = <span class="string">"Sub property"</span></span><br><span class="line">         &#125;</span><br><span class="line">         Sub.prototype = <span class="keyword">new</span> Supper() <span class="comment">/*关键一步，继承父类型，因为父类型的实例继承了</span></span><br><span class="line"><span class="comment">                                        父类型，所以将Sub的原型指向父类型的实例，从而是Sub继承父类型*/</span></span><br><span class="line">        <span class="comment">//注意：constructor要指回Sub,否则是Super</span></span><br><span class="line">        <span class="built_in">console</span>.log(Sub.prototype.constructor)</span><br><span class="line">        Sub.prototype.constructor = Sub;</span><br><span class="line">        <span class="built_in">console</span>.log(Sub.prototype.constructor)</span><br><span class="line">        Sub.prototype.showSupProp = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="built_in">console</span>.log(<span class="keyword">this</span>.subProp)</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">var</span> sub = <span class="keyword">new</span> Sub()</span><br><span class="line">         sub.showSupperProp()<span class="comment">//还没继承</span></span><br><span class="line">         <span class="built_in">console</span>.log(Sub.prototype.constructor)</span><br><span class="line">         <span class="built_in">console</span>.log(Supper.prototype.constructor)</span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 对象高级_继承模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：自定义构造函数模式+原型</title>
      <link href="/2020/07/30/2020-07-30.3/"/>
      <url>/2020/07/30/2020-07-30.3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        方式四：自定义构造函数模式</span><br><span class="line">            *套路：自定义构造函数，通过<span class="keyword">new</span>创建对象</span><br><span class="line">            *使用场景：需要创建多个类型确定的对象</span><br><span class="line">            *问题：每个对象都有相同的数据，浪费内存</span><br><span class="line"></span><br><span class="line">     --&gt;</span><br><span class="line">     &lt;script&gt;</span><br><span class="line">        <span class="comment">//  自定义类型Person</span></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.name = name</span><br><span class="line">                <span class="keyword">this</span>.age = age</span><br><span class="line">                <span class="keyword">this</span>.setName = <span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">this</span>.name  = name</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> p1 = <span class="keyword">new</span> Person(<span class="string">"Tome"</span>,<span class="number">12</span>)</span><br><span class="line">            p1.setName(<span class="string">"jack"</span>)</span><br><span class="line">            <span class="built_in">console</span>.log(p1)</span><br><span class="line">            <span class="built_in">console</span>.log(p1 <span class="keyword">instanceof</span> Person)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//自定义类型dog</span></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">dog</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.name=name</span><br><span class="line">                <span class="keyword">this</span>.age=age</span><br><span class="line">                <span class="keyword">this</span>.setName= <span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">this</span>.name=name</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> dog1 = <span class="keyword">new</span> dog(<span class="string">"erha"</span>,<span class="number">3</span>)</span><br><span class="line">            dog1.setName(<span class="string">"sanha"</span>)</span><br><span class="line">            <span class="built_in">console</span>.log(dog1)</span><br><span class="line">            <span class="built_in">console</span>.log(dog1 <span class="keyword">instanceof</span> dog)</span><br><span class="line">            </span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;!-- </span></span><br><span class="line"><span class="regexp">        方式五：构造函数+原型的组合模式</span></span><br><span class="line"><span class="regexp">            *套路：自定义构造函数，属性在函数中初始化，方法添加到原型上</span></span><br><span class="line"><span class="regexp">            *适用场景：需要创建多个类型确定的对象</span></span><br><span class="line"><span class="regexp">     --&gt;</span></span><br><span class="line"><span class="regexp">     &lt;script&gt;</span></span><br><span class="line"><span class="regexp">         function Person(name,age)&#123;/</span><span class="regexp">/在构造函数中只初始化一般函数</span></span><br><span class="line"><span class="regexp">             this.name =name</span></span><br><span class="line"><span class="regexp">             this.age = age</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">         &#125;</span></span><br><span class="line"><span class="regexp">         /</span><span class="regexp">/原型的方法是给实例用的，实例通过原型链获得</span></span><br><span class="line"><span class="regexp">         Person.prototype.setName = function(name)&#123;</span></span><br><span class="line"><span class="regexp">             this.name=name</span></span><br><span class="line"><span class="regexp">         &#125;</span></span><br><span class="line"><span class="regexp">         var p1 =new Person("haha",23)</span></span><br><span class="line"><span class="regexp">         p1.setName("jack")</span></span><br><span class="line"><span class="regexp">         console.log(p1)</span></span><br><span class="line"><span class="regexp">         console.log(p1.name)</span></span><br><span class="line"><span class="regexp">     &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 对象高级_创建模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：工厂模式</title>
      <link href="/2020/07/30/2020-07-30.2/"/>
      <url>/2020/07/30/2020-07-30.2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        方式三：工厂模式（简单理解：返回一个对象的）</span><br><span class="line">            *套路：通过工厂模式动态创建对象并返回</span><br><span class="line">            *适用场景：需要创建多个对象</span><br><span class="line">            *问题：对象没有一个具体的类型，都是<span class="built_in">Object</span></span><br><span class="line">     --&gt;</span><br><span class="line"></span><br><span class="line">     &lt;script&gt;</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">createPerson</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">             <span class="keyword">var</span> obj = &#123;</span><br><span class="line">                 name:name,</span><br><span class="line">                 age:age,</span><br><span class="line">                 setName:<span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">                     <span class="keyword">this</span>.name = name</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">return</span> obj;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="comment">//创建2个人</span></span><br><span class="line">         <span class="keyword">var</span> p1 =<span class="keyword">new</span> createPerson(<span class="string">"Jack"</span>,<span class="number">23</span>);</span><br><span class="line">         <span class="keyword">var</span> p2 =<span class="keyword">new</span> createPerson(<span class="string">"Bob"</span>,<span class="number">24</span>);</span><br><span class="line">         <span class="built_in">console</span>.log(p1)</span><br><span class="line">         <span class="built_in">console</span>.log(p2)</span><br><span class="line">         <span class="built_in">console</span>.log(<span class="keyword">typeof</span> p1)</span><br><span class="line">         <span class="built_in">console</span>.log(<span class="keyword">typeof</span> p2)</span><br><span class="line">         <span class="comment">//p1,p2都是Object类型，没有具体的类型</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">createDog</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">             <span class="keyword">var</span> obj = &#123;</span><br><span class="line">                 name:name,</span><br><span class="line">                 age:age,</span><br><span class="line">                 setName:<span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">                     <span class="keyword">this</span>.name=naem;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">return</span> obj;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">var</span> dog = <span class="keyword">new</span> createDog(<span class="string">"erha"</span>,<span class="number">3</span>);</span><br><span class="line">         <span class="built_in">console</span>.log(<span class="keyword">typeof</span> dog)</span><br><span class="line">         <span class="built_in">console</span>.log(dog <span class="keyword">instanceof</span> createDog)</span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 对象高级_创建模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：简单对象创建</title>
      <link href="/2020/07/30/2020-07-30.1/"/>
      <url>/2020/07/30/2020-07-30.1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        方式<span class="number">1</span>：<span class="built_in">Object</span>构造函数模式</span><br><span class="line">            *套路：先创建空<span class="built_in">Object</span>对象，再动听添加属性/方法</span><br><span class="line">            *适用场景：起始不确定对象内部数据</span><br><span class="line">            *问题：语句太多</span><br><span class="line"></span><br><span class="line">     --&gt;</span><br><span class="line"></span><br><span class="line">     &lt;script&gt;</span><br><span class="line">         <span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Object</span>()</span><br><span class="line">         p.naem=<span class="string">"Tom"</span></span><br><span class="line">         p.age=<span class="number">12</span></span><br><span class="line">         p.setName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="keyword">this</span>.name = name</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="comment">//测试</span></span><br><span class="line">            p.setName(<span class="string">"Jack"</span>)</span><br><span class="line">            <span class="built_in">console</span>.log(p.naem,p.age)</span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">     </span></span><br><span class="line"><span class="regexp">     &lt;!-- </span></span><br><span class="line"><span class="regexp">        方式二：对象字面量模式</span></span><br><span class="line"><span class="regexp">            *套路：适用&#123;&#125;常见对象，同时指定属性/</span>方法</span><br><span class="line">            *适用场景：起始时对象内部数据是确定的</span><br><span class="line">            *问题：如果创建对个对象，有重复代码</span><br><span class="line"></span><br><span class="line">     --&gt;</span><br><span class="line">     &lt;script&gt;</span><br><span class="line">         <span class="keyword">var</span> p = &#123;</span><br><span class="line">             name:<span class="string">"Tom"</span>,</span><br><span class="line">             age:<span class="number">23</span>,</span><br><span class="line">             setNmae:<span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">                 <span class="keyword">this</span>.name=name</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//测试</span></span><br><span class="line">            <span class="built_in">console</span>.log(p.name,p.age)</span><br><span class="line">            p.setNmae(<span class="string">"sb"</span>)</span><br><span class="line">            <span class="built_in">console</span>.log(p.name,p.age)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> p2 = &#123;</span><br><span class="line">             name:<span class="string">"Tom"</span>,</span><br><span class="line">             age:<span class="number">23</span>,</span><br><span class="line">             setNmae:<span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">                 <span class="keyword">this</span>.name=name</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="built_in">console</span>.log(p2.name,p2.age)</span><br><span class="line">         p2.setNmae(<span class="string">"sb"</span>)</span><br><span class="line">         <span class="built_in">console</span>.log(p2.name,p2.age)</span><br><span class="line"></span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 对象高级_创建模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：内存溢出与内存泄漏+习题</title>
      <link href="/2020/07/30/2020-07-29.5/"/>
      <url>/2020/07/30/2020-07-29.5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        <span class="number">1.</span>内存溢出</span><br><span class="line">            *一种程序运行出现的错误</span><br><span class="line">            *当程序运行需要的内存超过了剩余的内存时，就会抛出内存溢出错误</span><br><span class="line">        <span class="number">2.</span>内存泄漏</span><br><span class="line">            *占用的无用内存没有及时释放导致内存泄漏，内存泄漏积累多了就容易</span><br><span class="line">                导致内存溢出</span><br><span class="line">        <span class="number">3.</span>常见的内存泄漏</span><br><span class="line">            *意外的全局变量</span><br><span class="line">            *没有及时清理的定时器或回调函数</span><br><span class="line">            *闭包</span><br><span class="line">     --&gt;</span><br><span class="line"></span><br><span class="line">     &lt;script&gt;</span><br><span class="line">        <span class="comment">//  1.内存溢出</span></span><br><span class="line">            <span class="keyword">var</span> obj = &#123;&#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">                obj[i] = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">100</span>)<span class="comment">//过大会导致溢出</span></span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"jiojoj"</span>)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2内存泄漏</span></span><br><span class="line">                <span class="comment">// 意外的全局变量</span></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">10</span>)</span><br><span class="line">                <span class="built_in">console</span>.log(a)</span><br><span class="line">            &#125;</span><br><span class="line">            fn()   <span class="comment">//没有var a 声明导致函数调用完a没有被释放</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2内存泄漏</span></span><br><span class="line">                <span class="comment">// 没有清理定时器</span></span><br><span class="line">            <span class="keyword">var</span> clean=setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"hahah"</span>)</span><br><span class="line">            &#125;, <span class="number">1000</span>);</span><br><span class="line">            clearInterval(clean)<span class="comment">//</span></span><br><span class="line">            <span class="comment">//要用变量来接收定时器，再清理</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 2内存泄漏</span></span><br><span class="line">            <span class="comment">// 没有释放闭包</span></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">bibao</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> a = <span class="number">2</span></span><br><span class="line">                <span class="function"><span class="keyword">function</span> <span class="title">bib</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    a++</span><br><span class="line">                    <span class="built_in">console</span>.log(a)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> bib</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> bibao2 = bibao()</span><br><span class="line">            bibao2()</span><br><span class="line">            bibao2 = <span class="literal">null</span>  <span class="comment">//要用null来释放闭包  </span></span><br><span class="line">            <span class="comment">// bibao2()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">//  面试题1：</span></span><br><span class="line">            <span class="keyword">var</span> name = <span class="string">"The Window"</span>;</span><br><span class="line">            <span class="keyword">var</span>  object = &#123;</span><br><span class="line">                name:<span class="string">"My Object"</span> ,</span><br><span class="line">                getNameFunc : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            alert(object.getNameFunc()());    <span class="comment">//The Window  (调用者是window，window在全局中找到name属性)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//面试题2：</span></span><br><span class="line">            <span class="keyword">var</span> name2 = <span class="string">"The Window"</span>;</span><br><span class="line">            <span class="keyword">var</span> object2 =&#123;</span><br><span class="line">                name2:<span class="string">"My Object"</span>,</span><br><span class="line">                getNameFunc:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> that.name2;</span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            alert(object2.getNameFunc()());  <span class="comment">//My Object  此处产生闭包</span></span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">"------------------------------------------------------"</span>)</span><br><span class="line">        <span class="comment">//面试题3：</span></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">n,o</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(o)</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    fun:<span class="function"><span class="keyword">function</span>(<span class="params">m</span>)</span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> fun(m,n) <span class="comment">//</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> a = fun(<span class="number">0</span>)  <span class="comment">//undefined 只产生了一个闭包n=0，所以值不变，都是0</span></span><br><span class="line">            a.fun(<span class="number">1</span>)  <span class="comment">//0</span></span><br><span class="line">            a.fun(<span class="number">2</span>)  <span class="comment">//0</span></span><br><span class="line">            a.fun(<span class="number">3</span>)  <span class="comment">//0</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> b = fun(<span class="number">0</span>).fun(<span class="number">1</span>).fun(<span class="number">2</span>).fun(<span class="number">3</span>)  <span class="comment">//undefined  0 1 2 </span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> c = fun(<span class="number">0</span>).fun(<span class="number">1</span>)  <span class="comment">//undefined 0</span></span><br><span class="line">            c.fun(<span class="number">2</span>)  <span class="comment">//1</span></span><br><span class="line">            c.fun(<span class="number">3</span>)  <span class="comment">//1</span></span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 函数高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：闭包的应用_自定义js模块</title>
      <link href="/2020/07/30/2020-07-29.4/"/>
      <url>/2020/07/30/2020-07-29.4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script &gt;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ 1.第一种闭包封装模式</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ 向外暴露一个方法</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ function myModule()&#123;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     var msg = "wahaha"</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     function doSomething()&#123;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/         console.log("doSomething()：" + msg.toUpperCase())  /</span><span class="regexp">/toUpperCase()转为大写字母</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     &#125;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     function doOtherthing()&#123;</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/         console.log("doOtherthing()：" + msg.toLowerCase()) /</span><span class="regexp">/转换为小写字母</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/     return doSomething</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ 2.返回对象，向外暴露多个方法</span></span><br><span class="line"><span class="regexp">        function myModule()&#123;</span></span><br><span class="line"><span class="regexp">            var msg = "wahaha"</span></span><br><span class="line"><span class="regexp">            function doSomething()&#123;</span></span><br><span class="line"><span class="regexp">                console.log("doSomething()：" + msg.toUpperCase())  /</span><span class="regexp">/toUpperCase()转为大写字母</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            function doOtherthing()&#123;</span></span><br><span class="line"><span class="regexp">                console.log("doOtherthing()：" + msg.toLowerCase()) /</span><span class="regexp">/转换为小写字母</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            return &#123;</span></span><br><span class="line"><span class="regexp">                doSomething: doSomething ,</span></span><br><span class="line"><span class="regexp">                doOtherthing: doOtherthing</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/3.采用匿名函数自调用方法</span></span><br><span class="line"><span class="regexp">        (function(window)&#123;</span></span><br><span class="line"><span class="regexp">            var msg = "wahaha"</span></span><br><span class="line"><span class="regexp">            function doSomething()&#123;</span></span><br><span class="line"><span class="regexp">                console.log("doSomething()：" + msg.toUpperCase())  /</span><span class="regexp">/toUpperCase()转为大写字母</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            function doOtherthing()&#123;</span></span><br><span class="line"><span class="regexp">                console.log("doOtherthing()：" + msg.toLowerCase()) /</span><span class="regexp">/转换为小写字母</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/将要暴露的东西添加为window的属性，这种方法在外面可以直接使用,不用调用函数</span></span><br><span class="line"><span class="regexp">            window.module2 = &#123;</span></span><br><span class="line"><span class="regexp">                doSomething : doSomething ,</span></span><br><span class="line"><span class="regexp">                doOtherthing : doOtherthing</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        &#125;)(window)</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;!-- </span></span><br><span class="line"><span class="regexp">        闭包的应用：定义js模块</span></span><br><span class="line"><span class="regexp">js模块：</span></span><br><span class="line"><span class="regexp">            *具体特定功能的js文件</span></span><br><span class="line"><span class="regexp">            *将所有数据和功能都封装在一个函数内部（只有函数内部外界是访问不到的）</span></span><br><span class="line"><span class="regexp">            *只向外暴露一个包含n个方法的对象或函数</span></span><br><span class="line"><span class="regexp">            *模块的使用者，只需要通过模块暴露的对象调用方法来实现对应的功能</span></span><br><span class="line"><span class="regexp">     --&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">     &lt;!-- &lt;script src="./my</span>Module1.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">     &lt;script src="</span>./myModule2.js<span class="string">"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line"><span class="string">     &lt;script&gt;</span></span><br><span class="line"><span class="string">                //暴露一种方法</span></span><br><span class="line"><span class="string">                // var fun = myModule()</span></span><br><span class="line"><span class="string">                // fun()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                //返回对象，暴露多种方法</span></span><br><span class="line"><span class="string">                // var module =myModule()</span></span><br><span class="line"><span class="string">                // module.doSomething()</span></span><br><span class="line"><span class="string">                // module.doOtherthing()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                module2.doSomething()</span></span><br><span class="line"><span class="string">                module2.doOtherthing()</span></span><br><span class="line"><span class="string">     &lt;/script&gt;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 函数高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：闭包的作用与生命周期</title>
      <link href="/2020/07/30/2020-07-29.3/"/>
      <url>/2020/07/30/2020-07-29.3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        作用：</span><br><span class="line">        <span class="number">1.</span>使用函数内部的变量在上执行完后，仍然存活在内存中（延长了局部变量的生命周期）</span><br><span class="line">        <span class="number">2.</span>让函数外部可以操作（读写)到函数内部的数据（变量/函数）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        缺点：</span><br><span class="line">        *函数执行完后，函数内的局部变量没有释放，占用内存时间会变长，容易造成内存泄漏</span><br><span class="line">        解决：</span><br><span class="line">        *能不用闭包就不用，用了要及时释放</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        问题：</span><br><span class="line">            <span class="number">1.</span>函数执行完后，函数内部声明的局部变量是否还存在？</span><br><span class="line">                *一般是不存在，存在于闭包中的变量才可能存在，看闭包是否成为垃圾对象</span><br><span class="line">            <span class="number">2.</span>在函数外部能直接访问函数内部的局部变量吗？</span><br><span class="line">                *不能，但我们能通过闭包让外部操作它</span><br><span class="line">     --&gt;</span><br><span class="line">     &lt;script&gt;</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="number">2</span></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                a++</span><br><span class="line">                <span class="built_in">console</span>.log(a)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">fn3</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                a--</span><br><span class="line">                <span class="built_in">console</span>.log(a)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> fn3</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">var</span> f = fn1()  <span class="comment">//闭包存不存在关键看有没有变量指向它，不让它成为垃圾对象</span></span><br><span class="line">         f()</span><br><span class="line">         f()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">     </span></span><br><span class="line"><span class="regexp">     &lt;!-- </span></span><br><span class="line"><span class="regexp">        生命周期：</span></span><br><span class="line"><span class="regexp">        1.产生：在嵌套内部函数定义执行完时就产生了（不是在调用）</span></span><br><span class="line"><span class="regexp">        2.死亡：子啊嵌套的内部函数成为垃圾对象时</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">     --&gt;</span></span><br><span class="line"><span class="regexp">     &lt;script&gt;</span></span><br><span class="line"><span class="regexp">         function fn1()&#123;</span></span><br><span class="line"><span class="regexp">             /</span><span class="regexp">/此时闭包就已经产生（函数提升，内部函数对象已经创建了）</span></span><br><span class="line"><span class="regexp">             var a =2</span></span><br><span class="line"><span class="regexp">             function fn2()&#123;</span></span><br><span class="line"><span class="regexp">                 a++</span></span><br><span class="line"><span class="regexp">                 console.log(a)</span></span><br><span class="line"><span class="regexp">             &#125;</span></span><br><span class="line"><span class="regexp">             return fn2</span></span><br><span class="line"><span class="regexp">         &#125;</span></span><br><span class="line"><span class="regexp">         var f = fn1()</span></span><br><span class="line"><span class="regexp">         f()  /</span><span class="regexp">/3</span></span><br><span class="line"><span class="regexp">         f()  /</span><span class="regexp">/4</span></span><br><span class="line"><span class="regexp">         f = null /</span><span class="regexp">/闭包死亡（包含闭包的函数对象成为垃圾对象）</span></span><br><span class="line"><span class="regexp">     &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 函数高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：理解闭包</title>
      <link href="/2020/07/30/2020-07-29.2/"/>
      <url>/2020/07/30/2020-07-29.2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        <span class="number">1.</span>如何产生闭包</span><br><span class="line">            *当一个嵌套的内部（子）函数引用了嵌套的外部（父）函数的变量时，就产生了闭包</span><br><span class="line">        <span class="number">2.</span>闭包到底是什么？</span><br><span class="line">            *使用Chrome调试查看</span><br><span class="line">            *理解一：闭包是嵌套的内部函数（绝大多数人）</span><br><span class="line">            *理解二：包含被引用变量（函数）的对象（极少数人）</span><br><span class="line">            *注意：闭包存在于嵌套的内部函数中</span><br><span class="line">        <span class="number">3.</span>产生闭包的条件</span><br><span class="line">            *函数嵌套</span><br><span class="line">            *内部函数引用了外部函数的数据（变量/函数）</span><br><span class="line"></span><br><span class="line">        <span class="number">4.</span>常见闭包</span><br><span class="line">            <span class="number">1.</span>将函数作为另一个函数的返回值</span><br><span class="line">            <span class="number">2.</span>将函数作为实参传递给另一个函数调用</span><br><span class="line"></span><br><span class="line">        <span class="number">5.</span>闭包的</span><br><span class="line">     --&gt;</span><br><span class="line"></span><br><span class="line">     &lt;script&gt;</span><br><span class="line">         <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">             <span class="keyword">var</span> a = <span class="number">2</span></span><br><span class="line">             <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                 <span class="built_in">console</span>.log(a)</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         fn1()</span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">     &lt;script&gt;</span></span><br><span class="line"><span class="regexp">         /</span>* 注意：闭包产生的条件</span><br><span class="line">            <span class="number">4.</span>常见闭包</span><br><span class="line">            <span class="number">1.</span>将函数作为另一个函数的返回值</span><br><span class="line">           </span><br><span class="line">         *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">         function fn1()&#123;</span></span><br><span class="line"><span class="regexp">             var  a = 2</span></span><br><span class="line"><span class="regexp">             function fn2()&#123;</span></span><br><span class="line"><span class="regexp">                 a++</span></span><br><span class="line"><span class="regexp">                 console.log(a)</span></span><br><span class="line"><span class="regexp">                 return a</span></span><br><span class="line"><span class="regexp">             &#125;</span></span><br><span class="line"><span class="regexp">             return fn2</span></span><br><span class="line"><span class="regexp">         &#125;</span></span><br><span class="line"><span class="regexp">         var f = fn1()  /</span><span class="regexp">/外部函数调用几次就产生几个闭包，跟内部函数调用次数没关系</span></span><br><span class="line"><span class="regexp">         f()  /</span><span class="regexp">/3</span></span><br><span class="line"><span class="regexp">         f()  /</span><span class="regexp">/4   问题：a没有被释放</span></span><br><span class="line"><span class="regexp">         var b=f()</span></span><br><span class="line"><span class="regexp">         console.log("b:"+ b)</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/   2.将函数作为实参传递给另一个函数调用</span></span><br><span class="line"><span class="regexp">        function showDelay(msg,time)&#123;</span></span><br><span class="line"><span class="regexp">            setTimeout(function()&#123;</span></span><br><span class="line"><span class="regexp">                alert(msg)</span></span><br><span class="line"><span class="regexp">            &#125;,time)</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        showDelay("atguigu",2000)</span></span><br><span class="line"><span class="regexp">     &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 函数高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：上下文与作用域、链与习题</title>
      <link href="/2020/07/30/2020-07-29.1/"/>
      <url>/2020/07/30/2020-07-29.1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        <span class="number">1</span>***作用域</span><br><span class="line">            <span class="number">1.</span>理解</span><br><span class="line">                *就是一块“地盘”，一个代码段所在的区域</span><br><span class="line">                *它是静态的（先对与上下文对象），在编写代码时就确定了</span><br><span class="line">            <span class="number">2.</span>分类</span><br><span class="line">                *全局作用域</span><br><span class="line">                *函数作用域</span><br><span class="line">                *没有块作用域（ES6有了）</span><br><span class="line">            <span class="number">3.</span>作用</span><br><span class="line">                *隔离变量，不同作用域下同名变量不会有冲突</span><br><span class="line"></span><br><span class="line">        <span class="number">2</span>***作用域与执行上下文（都是n+<span class="number">1</span>模式：n:函数，<span class="number">1</span>：<span class="built_in">window</span>/全局作用域）</span><br><span class="line">            <span class="number">1.</span>区别<span class="number">1</span>：</span><br><span class="line">                    *全局作用域之外，每个函数都会创建自己的作用域，作用域在函数定义时</span><br><span class="line">                     就已经确定了，而不是在函数调用时</span><br><span class="line">                    *全局执行上下文环境是在全局作用域确定之后，js代码马上执行之前创建</span><br><span class="line">                    *函数执行上下文环境是在调用函数时，函数体代码执行之前创建</span><br><span class="line">            <span class="number">2.</span>区别<span class="number">2</span>：</span><br><span class="line">                    *作用域是静态的，只要函数定义好了就一直存在，且不会再变化</span><br><span class="line">                    *上下文环境是动态的，调用函数时创建，函数调用完后就会被释放</span><br><span class="line">            <span class="number">3.</span>联系：</span><br><span class="line">                    *上下文环境（对象）是从属于所在作用域</span><br><span class="line">                    *全局上下文环境==》全局作用域</span><br><span class="line">                    *函数上下文环境==》对应的函数；作用域</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="number">3</span>***作用域链</span><br><span class="line">            <span class="number">1.</span>理解</span><br><span class="line">                *多个上下级关系的作用域形成的链，它的方向是从内到外</span><br><span class="line">                *查找变量时就是沿着作用域链来查找的</span><br><span class="line">            </span><br><span class="line">            <span class="number">2.</span>查找一个变量的查找规则</span><br><span class="line">                *在当前作用域下的执行上下文中查找对应的属性，如果有直接返回，否则进入外一层作用域</span><br><span class="line">                *在上一级作用域的执行上下文中查找对应的属性，如果有直接返回，否则再进入更外一层作用域</span><br><span class="line">                *同理执行相同操作，知道全局作用域，如果还找不到就会报错（找不到的异常）</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 面试题1</span></span><br><span class="line">            <span class="keyword">var</span> x = <span class="number">10</span>;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(x)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params">f</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> x =<span class="number">20</span></span><br><span class="line">                f();</span><br><span class="line">            &#125;</span><br><span class="line">            show(fn);<span class="comment">// 10 or 20?   10</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//面试题2</span></span><br><span class="line">                <span class="keyword">var</span> fun = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    <span class="built_in">console</span>.log(fun)</span><br><span class="line">                &#125;</span><br><span class="line">                fun()  <span class="comment">/*结果：function()&#123;</span></span><br><span class="line"><span class="comment">                    console.log(fun)</span></span><br><span class="line"><span class="comment">                &#125;*/</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> obj = &#123;</span><br><span class="line">                    fun2:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                        <span class="comment">// console.log(fun2)</span></span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="keyword">this</span>.fun2)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                obj.fun2()  <span class="comment">//报错，fun2 undefined，用console.log(this.fun2)则可以正常输出</span></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 函数高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：执行上下文栈+常见面试题</title>
      <link href="/2020/07/29/2020-07-28.6/"/>
      <url>/2020/07/29/2020-07-28.6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        <span class="number">1.</span>在全局代码执行前，JS引擎就会创建一个栈来存储管理所有的执行上下文对象</span><br><span class="line">        <span class="number">2.</span>在圆角执行上下文（<span class="built_in">window</span>）确定后，将其添加到栈中（压栈）</span><br><span class="line">        <span class="number">3.</span>在函数执行上下文创建后，将其添加到栈中</span><br><span class="line">        <span class="number">4.</span>在当前函数执行完后，将栈顶函数执行上下文对象（看成是对象）移出（出栈）</span><br><span class="line">        <span class="number">5.</span>当所有的代码执行完后，栈中只剩下<span class="built_in">window</span></span><br><span class="line">     --&gt;</span><br><span class="line"></span><br><span class="line">     &lt;script&gt;</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">var</span> a = <span class="number">10</span></span><br><span class="line">        <span class="keyword">var</span> bar = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> b = <span class="number">5</span></span><br><span class="line">            foo(x + b)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> foo = <span class="function"><span class="keyword">function</span> (<span class="params">y</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> c = <span class="number">6</span></span><br><span class="line">            <span class="built_in">console</span>.log( a + c + y)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        bar(<span class="number">10</span>)  </span><br><span class="line">        <span class="comment">/*    问题：上面执行上下文对象有几个？3个</span></span><br><span class="line"><span class="comment">          注意：只要在执行调用的时候才会添加函数执行上下文对象，执行完之后就出栈，最后只剩window执行上下文</span></span><br><span class="line"><span class="comment">                最开始时只有一个window执行上下文压栈，当开始执行代码并执行到调用函数</span></span><br><span class="line"><span class="comment">                时才会添加bar函数执行上下文对象进栈，然后执行函数，到22行代码时调用</span></span><br><span class="line"><span class="comment">                foo函数并添加进栈，所以有三个</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        */</span>     </span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">     &lt;script&gt;</span></span><br><span class="line"><span class="regexp">          console.log("------------------------------------")</span></span><br><span class="line"><span class="regexp">        console.log("gb:"+i);</span></span><br><span class="line"><span class="regexp">        var i = 1;</span></span><br><span class="line"><span class="regexp">        foo(1);</span></span><br><span class="line"><span class="regexp">        function foo(i)&#123;</span></span><br><span class="line"><span class="regexp">            if(i == 4)&#123;</span></span><br><span class="line"><span class="regexp">                return</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            console.log("fb:" + i);</span></span><br><span class="line"><span class="regexp">            foo( i + 1 );/</span><span class="regexp">/递归调用</span></span><br><span class="line"><span class="regexp">            console.log("fe:" + i);</span></span><br><span class="line"><span class="regexp">            </span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        console.log("ge:" + i) ;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span>* 问题<span class="number">1</span>：上面代码依次输出结果为：gb:<span class="literal">undefined</span></span><br><span class="line">                                       fb:<span class="number">1</span></span><br><span class="line">                                       fb:<span class="number">2</span></span><br><span class="line">                                       fb:<span class="number">3</span></span><br><span class="line">                                       fe:<span class="number">3</span></span><br><span class="line">                                       fe:<span class="number">2</span></span><br><span class="line">                                       fe:<span class="number">1</span></span><br><span class="line">                                       ge:<span class="number">1</span></span><br><span class="line">                                       </span><br><span class="line">            问题<span class="number">2</span>：整个过程中产生了几个执行上下文？<span class="number">5</span>个</span><br><span class="line">        *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">     &lt;/</span>script&gt;</span><br><span class="line"></span><br><span class="line">     &lt;script&gt;</span><br><span class="line">         <span class="built_in">console</span>.log(<span class="string">"***************"</span>)</span><br><span class="line">        <span class="comment">/*测试题1*/</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> a)<span class="comment">/*function，预编译时函数先提升，变量后提升，</span></span><br><span class="line"><span class="comment">                                且预编译时变量值都只为undefined，不会覆盖前面*/</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">1</span> ;</span><br><span class="line">        <span class="comment">//衍生</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">        <span class="keyword">var</span> a</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> a) <span class="comment">//function，若var a =1,则结果为：number</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*测试题2*/</span></span><br><span class="line">        <span class="keyword">if</span>(!(b <span class="keyword">in</span> <span class="built_in">window</span>))&#123;</span><br><span class="line">            <span class="keyword">var</span> b =<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(b)  <span class="comment">//undefined</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*测试题3*/</span></span><br><span class="line">        <span class="keyword">var</span> c = <span class="number">1</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">c</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(c)</span><br><span class="line">        &#125;</span><br><span class="line">        c(<span class="number">2</span>)  <span class="comment">//报错，如果c没有赋值，则答案为：2，赋值之后执行时直接跳过了93--95行代码</span></span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 函数高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：执行上下文</title>
      <link href="/2020/07/29/2020-07-28.5/"/>
      <url>/2020/07/29/2020-07-28.5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        <span class="number">1.</span>代码分类（位置）</span><br><span class="line">            *全局代码</span><br><span class="line">            *函数(局部)代码</span><br><span class="line"></span><br><span class="line">        <span class="number">2.</span>全局执行上下文（分三步）（变量提升和函数提升的原因）（一开始就创建了全局执行上下文）</span><br><span class="line">            *在执行全局代码前将<span class="built_in">window</span>确定为全局执行上下文</span><br><span class="line">            *对全局数据进行预处理（函数先提升，然后才是变量，且变量预编译时值为<span class="literal">undefined</span>）</span><br><span class="line">                *<span class="keyword">var</span>定义的全局变量==》<span class="literal">undefined</span>，添加为<span class="built_in">window</span>的属性</span><br><span class="line">                *<span class="function"><span class="keyword">function</span>声明的全局函数==》赋值（<span class="title">fun</span>），添加为<span class="title">window</span>的方法</span></span><br><span class="line"><span class="function">                *<span class="title">this</span>==&gt;赋值为<span class="title">window</span></span></span><br><span class="line"><span class="function">            *开始执行上下文</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">        3函数执行上下文（调用函数的时候才会产生函数执行上下文）</span></span><br><span class="line"><span class="function">            *在调用函数，准备执行函数体之前，创建对应的函数执行上下文（虚拟的，可看成一个对象，存在于栈中）</span></span><br><span class="line"><span class="function">            *对局部数据进行预处理</span></span><br><span class="line"><span class="function">                *形参变量==》赋值（实参）==》添加为函数执行上下文的属性</span></span><br><span class="line"><span class="function">                *<span class="title">arguments</span>（伪数组）==》赋值（实参列表），添加为执行上下文的属性</span></span><br><span class="line"><span class="function">                *<span class="title">var</span>定义的局部变量==》<span class="title">undefined</span>，添加为执行上下文的属性</span></span><br><span class="line"><span class="function">                *<span class="title">function</span>声明函数==》赋值（<span class="title">fun</span>），添加为执行上下文的属性</span></span><br><span class="line"><span class="function">                *<span class="title">this</span>==》赋值（调用函数的对象）</span></span><br><span class="line"><span class="function">            *开始执行函数体代码</span></span><br><span class="line"><span class="function">     --&gt;</span></span><br><span class="line"><span class="function">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="function">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 函数高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：变量提升与函数提升</title>
      <link href="/2020/07/28/2020-07-28.4/"/>
      <url>/2020/07/28/2020-07-28.4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        <span class="number">1.</span>变量声明提升</span><br><span class="line">            *通过<span class="keyword">var</span>定义（声明）的变量，在定义语句之前就可以访问</span><br><span class="line">            *但值为：<span class="literal">undefined</span></span><br><span class="line"></span><br><span class="line">        <span class="number">2.</span>函数声明提升</span><br><span class="line">            *通过<span class="function"><span class="keyword">function</span>声明的函数，在之前就可以调用</span></span><br><span class="line"><span class="function">            *值：函数定义（对象）</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">        3.问题：变量提升和函数提升如何产生</span></span><br><span class="line"><span class="function">            原因：</span></span><br><span class="line"><span class="function">                全局执行上下文（分三步）（变量提升和函数提升的原因）（一开始就创建了全局执行上下文）</span></span><br><span class="line"><span class="function">                *在执行全局代码前将<span class="title">window</span>确定为全局执行上下文</span></span><br><span class="line"><span class="function">                *对全局数据进行预处理</span></span><br><span class="line"><span class="function">                    *<span class="title">var</span>定义的全局变量==》<span class="title">undefined</span>，添加为<span class="title">window</span>的属性</span></span><br><span class="line"><span class="function">                    *<span class="title">function</span>声明的全局函数==》赋值（<span class="title">fun</span>），添加为<span class="title">window</span>的方法</span></span><br><span class="line"><span class="function">                    *<span class="title">this</span>==&gt;赋值为<span class="title">window</span></span></span><br><span class="line"><span class="function">                *开始执行上下文</span></span><br><span class="line"><span class="function">     --&gt;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">     &lt;<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="function">     //经典面试题——变量提升</span></span><br><span class="line"><span class="function">        <span class="title">var</span> <span class="title">a</span> = 3</span></span><br><span class="line"><span class="function">        <span class="title">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(a)  <span class="comment">//因为变量提升，所以能找到，但值为undefined</span></span><br><span class="line">            <span class="keyword">var</span> a =<span class="number">4</span></span><br><span class="line">        &#125;</span><br><span class="line">        fn()  <span class="comment">//undefined</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// var a = 3</span></span><br><span class="line">        <span class="comment">// function fn()&#123;</span></span><br><span class="line">        <span class="comment">//     var a =4</span></span><br><span class="line">        <span class="comment">//     console.log(a)</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// fn()  //4</span></span><br><span class="line">        <span class="built_in">console</span>.log(b)  <span class="comment">//undefined  变量提升</span></span><br><span class="line">        <span class="keyword">var</span> b = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="comment">//函数提升(要用声明的形式)</span></span><br><span class="line"></span><br><span class="line">     fn2()  <span class="comment">//fn2()   因为函数提升，所以可以在函数定义之前调用</span></span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="built_in">console</span>.log(<span class="string">"fn2()"</span>)</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  注意：</span></span><br><span class="line">    <span class="built_in">console</span>.log(fn3)  <span class="comment">//undefined</span></span><br><span class="line">    fn3()<span class="comment">//报错，这样是变量提升，不是函数提升</span></span><br><span class="line">    <span class="keyword">var</span> fn3 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="built_in">console</span>.log(<span class="string">"fn3()"</span>)</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">     </span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 函数高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：原型链测试题</title>
      <link href="/2020/07/28/2020-07-28.3/"/>
      <url>/2020/07/28/2020-07-28.3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 测试题1</span></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            A.prototype.n = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> b = <span class="keyword">new</span> A()</span><br><span class="line"></span><br><span class="line">            A.prototype=&#123;</span><br><span class="line">                n:<span class="number">2</span>,</span><br><span class="line">                m:<span class="number">3</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> c = <span class="keyword">new</span> A()</span><br><span class="line">            <span class="built_in">console</span>.log(b.n,b.m,c.n,c.m) <span class="comment">//1  undefined  2  3</span></span><br><span class="line"></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lanQing-Song/blogimages/%E6%B5%8B%E8%AF%95%E9%A2%981.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//测试题2</span></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">            <span class="built_in">Object</span>.prototype.a = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"a()"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="built_in">Function</span>.prototype.b = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"b()"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> f = <span class="keyword">new</span> F()</span><br><span class="line">            f.a()  <span class="comment">//a()</span></span><br><span class="line">            f.b()  <span class="comment">//undefined</span></span><br><span class="line">            F.a()  <span class="comment">//a()</span></span><br><span class="line">            F.b()  <span class="comment">//b()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lanQing-Song/blogimages/%E5%8E%9F%E5%9E%8B%E9%93%BE2.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 函数高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：原型链</title>
      <link href="/2020/07/28/2020-07-28.2/"/>
      <url>/2020/07/28/2020-07-28.2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        先理解：所有我们创建的函数或对象，本质就是一个实例</span><br><span class="line">                如：</span><br><span class="line">                    <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;&#125; === <span class="keyword">var</span> test = <span class="keyword">new</span> <span class="built_in">Function</span>()</span><br><span class="line">                    <span class="keyword">var</span> obj = &#123;&#125; === <span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>()  <span class="built_in">Object</span>是原型链的尽头</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">Function</span>和<span class="built_in">Object</span>这两个构造函数原来就已经存在</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="number">1.</span>原型链</span><br><span class="line">            *访问一个实例对象的属性时：</span><br><span class="line">                *先在自身属性中查找，找到就返回</span><br><span class="line">                *如果没有，就沿着__proto__这条链向上查找，找到就返回</span><br><span class="line">                *如果最终没找到，返回<span class="literal">undefined</span></span><br><span class="line">            *别名：隐式原型链(通过隐式原型链进行查找)</span><br><span class="line">            *作用：查找对象的属性（方法）</span><br><span class="line"></span><br><span class="line">        <span class="number">2.</span>构造函数、原型、实体对象的关系图<span class="number">1</span></span><br><span class="line">        <span class="number">3.</span>构造函数、原型、实体对象的关系图<span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ****总结：</span><br><span class="line"></span><br><span class="line">        特殊的：<span class="built_in">Object</span>是<span class="built_in">Function</span>的实例同时是原型链的尽头，而<span class="built_in">Function</span>是自身的实例，也就是说它既是构造函数也是实例对象（<span class="built_in">Function</span> = <span class="keyword">new</span> <span class="built_in">Function</span>）</span><br><span class="line">        <span class="number">1.</span>所有函数的显式原型指向的对象是默认的空object对象，但<span class="built_in">Object</span>除外（该对象是<span class="built_in">Object</span>的实例）</span><br><span class="line">        <span class="built_in">console</span>.log(Fn.prototype <span class="keyword">instanceof</span> <span class="built_in">Object</span>)  <span class="comment">//true</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype <span class="keyword">instanceof</span> <span class="built_in">Object</span>) <span class="comment">//false</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Function</span>.prototype <span class="keyword">instanceof</span> <span class="built_in">Object</span>)  <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">        <span class="number">2.</span>所有函数都是<span class="built_in">Function</span>的实例（包括他自身,也就是说<span class="built_in">Function</span>既是构造函数也是实例对象，同时说明</span><br><span class="line">            每个函数都有一个__proto__隐式原型）*<span class="regexp">/</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            证明Function既是构造函数也是实例对象：</span></span><br><span class="line"><span class="regexp">            console.log(Function.__proto__===Function.prototype)</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        3.Object的原型对象是原型链的尽头</span></span><br><span class="line"><span class="regexp">        console.log(Object.prototype.__proto__)/</span><span class="regexp">/null</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">     --&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">     &lt;script&gt;</span></span><br><span class="line"><span class="regexp">         function Fn()&#123;</span></span><br><span class="line"><span class="regexp">             this.test1 = function()&#123;</span></span><br><span class="line"><span class="regexp">                 console.log("test1()")</span></span><br><span class="line"><span class="regexp">             &#125;</span></span><br><span class="line"><span class="regexp">         &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">         Fn.prototype.test2 = function()&#123;</span></span><br><span class="line"><span class="regexp">             console.log("test2()")</span></span><br><span class="line"><span class="regexp">         &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">         var fn = new Fn()</span></span><br><span class="line"><span class="regexp">         fn.test1()  /</span><span class="regexp">/test1()</span></span><br><span class="line"><span class="regexp">         fn.test2()  /</span><span class="regexp">/test2()  证明会沿着隐式原型去显示原型找</span></span><br><span class="line"><span class="regexp">         console.log(fn.toString())  /</span><span class="regexp">/object Object</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/特殊的：Object原型是原型链的尽头（是Object原型对象，不是Object函数对象），Function是自身的实例，也就是说它既是构造函数也是实例对象</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/  1.函数的显式原型指向的对象是默认的空object实例对象（该对象是Object的实例）</span></span><br><span class="line"><span class="regexp">        console.log(Fn.prototype instanceof Object)  /</span><span class="regexp">/true</span></span><br><span class="line"><span class="regexp">        console.log(Object.prototype instanceof Object) /</span><span class="regexp">/false</span></span><br><span class="line"><span class="regexp">        console.log(Function.prototype instanceof Object)  /</span><span class="regexp">/true</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span>* <span class="number">2.</span>所有函数都是<span class="built_in">Function</span>的实例（包括他自身,也就是说<span class="built_in">Function</span>既是构造函数也是实例对象，同时说明</span><br><span class="line">               每个函数都有一个__proto__隐式原型）*<span class="regexp">/</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ 证明Function既是构造函数也是实例对象：</span></span><br><span class="line"><span class="regexp">            console.log(Function.__proto__===Function.prototype)</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/  3.Object的原型对象是原型链的尽头</span></span><br><span class="line"><span class="regexp">            console.log(Object.prototype.__proto__)/</span><span class="regexp">/null</span></span><br><span class="line"><span class="regexp">     &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><h2 id="2-构造函数、原型、实体对象的关系图1"><a href="#2-构造函数、原型、实体对象的关系图1" class="headerlink" title="2.构造函数、原型、实体对象的关系图1"></a>2.构造函数、原型、实体对象的关系图1</h2><p><img src="https://cdn.jsdelivr.net/gh/lanQing-Song/blogimages/%E5%8E%9F%E5%9E%8B%E9%93%BE.png" alt=""></p><h2 id="3-构造函数、原型、实体对象的关系图2"><a href="#3-构造函数、原型、实体对象的关系图2" class="headerlink" title="3.构造函数、原型、实体对象的关系图2"></a>3.构造函数、原型、实体对象的关系图2</h2><p><img src="https://cdn.jsdelivr.net/gh/lanQing-Song/blogimages/%E5%8E%9F%E5%9E%8B%E9%93%BE2.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 函数高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：原型</title>
      <link href="/2020/07/28/2020-07-28.1/"/>
      <url>/2020/07/28/2020-07-28.1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        <span class="number">1.</span>函数的prototype属性</span><br><span class="line">            *每个函数都有一个prototype属性和一个__proto__隐式原型属性，prototype默认指向一个object空对象（即称原型对象）</span><br><span class="line">            *每个原型对象又有一个<span class="keyword">constructor</span>属性，它指回函数对象（形成一个循环）</span><br><span class="line"></span><br><span class="line">        2.给原型对象添加属性（一般都是添加方法）</span><br><span class="line">            *作用：函数的所有实例对象自动拥有原型中的属性（方法）</span><br><span class="line">     --&gt;</span><br><span class="line"></span><br><span class="line">     &lt;script&gt;</span><br><span class="line"></span><br><span class="line">        //每个函数都有一个prototype属性，它默认指向一个object空对象（即称为：原型对象）</span><br><span class="line">        console.log(Date.prototype,typeof Date.prototype)</span><br><span class="line">        function Fun()&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(Fun.prototype)  <span class="comment">//默认指向一个Object空对象</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//原型对象中有一个属性constructor，它又指回函数对象</span></span><br><span class="line">        <span class="comment">//输出确认一下</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Date</span>.prototype.constructor===<span class="built_in">Date</span>) <span class="comment">//true</span></span><br><span class="line">        <span class="built_in">console</span>.log(Fun.prototype.constructor===Fun)  <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//给原型对象添加属性（一般添加方法）===》实例对象可以访问</span></span><br><span class="line">        Fun.prototype.test=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"test()"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> fun =<span class="keyword">new</span> Fun()</span><br><span class="line">        fun.test()  <span class="comment">//输出结果：test（）</span></span><br><span class="line"></span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lanQing-Song/blogimages/%E6%98%BE%E7%A4%BA%E5%8E%9F%E5%9E%8B%E5%92%8C%E9%9A%90%E5%BC%8F%E5%8E%9F%E5%9E%8B.png" alt="">))</p>]]></content>
      
      
      <categories>
          
          <category> 函数高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：函数之显式原型与隐式原型</title>
      <link href="/2020/07/27/2020-07-27.3/"/>
      <url>/2020/07/27/2020-07-27.3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        1.每个函数function都有一个prototype属性，即显式原型（属性）</span><br><span class="line">        2.每个实例对象都有一个__proto__属性，可称为隐式原型（属性）</span><br><span class="line">        3.对象的隐式原型的值与其对应的构造函数的显式原型的值相等   console.log(Fn.prototype&#x3D;&#x3D;&#x3D;fn.__proto__)&#x2F;&#x2F;true</span><br><span class="line">        4.内部结构图</span><br><span class="line">        </span><br><span class="line">        5.总结：</span><br><span class="line">            *函数的prototype属性：在定义函数时自动添加的，默认值是一个空object对象</span><br><span class="line">            *实例对象的__proto__属性：创建实例对象时自动添加的，默认值为默认构造函数的prototype值</span><br><span class="line">            *程序员能直接操作显式原型，但不能直接操作隐式原型（ES6之前）</span><br><span class="line">     --&gt;</span><br><span class="line">     &lt;script&gt;</span><br><span class="line">         function Fn()&#123;  &#x2F;&#x2F;内部本质：this.prototype&#x3D;&#123;&#125;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line">        &#x2F;&#x2F;1.每个函数function都有一个prototype属性，即显式原型</span><br><span class="line">        console.log(Fn.prototype)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;2.每个实例对象都有一个__proto__属性，可称为隐式原型</span><br><span class="line">        var fn&#x3D; new Fn()   &#x2F;&#x2F;内部本质:fn.__proto__&#x3D;Fn.prototype</span><br><span class="line">        console.log(fn.__proto__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;3.对象的隐式原型的值为其对应构造函数的显式原型的值</span><br><span class="line">        console.log(Fn.prototype&#x3D;&#x3D;&#x3D;fn.__proto__)&#x2F;&#x2F;true</span><br><span class="line"></span><br><span class="line">     &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/lanQing-Song/blogimages/%E6%98%BE%E7%A4%BA%E5%8E%9F%E5%9E%8B%E5%92%8C%E9%9A%90%E5%BC%8F%E5%8E%9F%E5%9E%8B.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 函数高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：函数原型</title>
      <link href="/2020/07/27/2020-07-27.2/"/>
      <url>/2020/07/27/2020-07-27.2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        <span class="number">1.</span>函数的prototype属性</span><br><span class="line">            *每个函数都有一个prototype属性，它默认指向一个object空对象（即称原型对象）</span><br><span class="line">            *每个原型对象又有一个<span class="keyword">constructor</span>属性，它指回函数对象（形成一个循环）</span><br><span class="line"></span><br><span class="line">        2.给原型对象添加属性（一般都是添加方法）</span><br><span class="line">            *作用：函数的所有实例对象自动拥有原型中的属性（方法）</span><br><span class="line">     --&gt;</span><br><span class="line"></span><br><span class="line">     &lt;script&gt;</span><br><span class="line"></span><br><span class="line">        //每个函数都有一个prototype属性，它默认指向一个object空对象（即称为：原型对象）</span><br><span class="line">        console.log(Date.prototype,typeof Date.prototype)</span><br><span class="line">        function Fun()&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(Fun.prototype)  <span class="comment">//默认指向一个Object空对象</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//原型对象中有一个属性constructor，它又指回函数对象</span></span><br><span class="line">        <span class="comment">//输出确认一下</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">Date</span>.prototype.constructor===<span class="built_in">Date</span>) <span class="comment">//true</span></span><br><span class="line">        <span class="built_in">console</span>.log(Fun.prototype.constructor===Fun)  <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//给原型对象添加属性（一般添加方法）===》实例对象可以访问</span></span><br><span class="line">        Fun.prototype.test=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"test()"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> fun =<span class="keyword">new</span> Fun()</span><br><span class="line">        fun.test()  <span class="comment">//输出结果：test（）</span></span><br><span class="line"></span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 函数高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：函数基础</title>
      <link href="/2020/07/27/2020-07-27.1/"/>
      <url>/2020/07/27/2020-07-27.1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        <span class="number">1.</span>什么是函数？</span><br><span class="line">            *实现特定的功能的n条语句的封装体</span><br><span class="line">            *只有函数是可以执行的，其他类型的数据不能执行</span><br><span class="line"></span><br><span class="line">        <span class="number">2.</span>为什么要用函数？</span><br><span class="line">            *提高代码服用</span><br><span class="line">            *便于阅读交流</span><br><span class="line"></span><br><span class="line">        <span class="number">3.</span>如何定义函数？</span><br><span class="line">            *函数声明</span><br><span class="line">            *表达式</span><br><span class="line"></span><br><span class="line">        <span class="number">4.</span>如何调用（执行函数）函数？</span><br><span class="line">            *test()：直接调用</span><br><span class="line">            *obj.test()：通过对象调用</span><br><span class="line">            *<span class="keyword">new</span> test():<span class="keyword">new</span> 调用</span><br><span class="line">            test.call/apply(obj):临时让test称为obj的方法调用</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="number">5.</span>什么函数是回调函数？</span><br><span class="line">            （<span class="number">1.</span>你定义的</span><br><span class="line">            （<span class="number">2.</span>你没有调用</span><br><span class="line">            （<span class="number">3.</span>但最终它执行了（在某个时刻或某个条件）</span><br><span class="line"></span><br><span class="line">        <span class="number">6.</span>常见的回调函数有哪些？</span><br><span class="line">            *dom事件回调函数   ==》发生事件的dom元素调用</span><br><span class="line">            *定时器回调函数    ==》<span class="built_in">window</span>调用</span><br><span class="line">            *Ajax请求回调函数</span><br><span class="line">            *生命周期回调函数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="number">7.</span>IIFE （全称：Immediately-Invoked <span class="built_in">Function</span> Expression</span><br><span class="line">            作用：</span><br><span class="line">                *隐藏实现</span><br><span class="line">                *不会污染外部（全局）命名空间</span><br><span class="line">                *用它开来编码js模块</span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">        <span class="number">8.</span><span class="keyword">this</span>是什么？</span><br><span class="line">            *任何函数本质上都是通过某个对象来调用的，如果没有直接指定就是<span class="built_in">window</span></span><br><span class="line">            *所有函数内部都有一个变量<span class="keyword">this</span></span><br><span class="line">            *它的值是调用函数的当前对象</span><br><span class="line"></span><br><span class="line">        <span class="number">9.</span>如何确定<span class="keyword">this</span>是谁？</span><br><span class="line">            *thes()  :<span class="built_in">window</span></span><br><span class="line">            *p.test() : p</span><br><span class="line">            *<span class="keyword">new</span> test(): 新创建的对象</span><br><span class="line">            *p.call(obj):   obj</span><br><span class="line">     --&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button id="btn"&gt;test回调函数&lt;/</span>button&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//回调函数</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">//dom回调函数</span></span><br><span class="line">        alert(<span class="keyword">this</span>.innerHTML)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定时器</span></span><br><span class="line">        <span class="comment">//超时定时器</span></span><br><span class="line">        <span class="comment">//循环定时器</span></span><br><span class="line"></span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">"到点了。"</span>);</span><br><span class="line">    &#125;,<span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//IIFE</span></span><br><span class="line"></span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">//匿名函数自调用，调用完a就被释放</span></span><br><span class="line">        <span class="keyword">var</span> a = <span class="number">3</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(a + <span class="number">3</span>);</span><br><span class="line">    &#125;)();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这样会生成一个全局变量</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">4</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line"></span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(++a);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">window</span>.$ = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">//向外暴露一个全局函数</span></span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                test: test</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)()</span><br><span class="line"></span><br><span class="line">    $().test()<span class="comment">//1.$是一个函数  2.$执行后返回一个对象</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//函数中的this问题</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">color</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            thsi.color = color;</span><br><span class="line">            thsi.getColor = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.color;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">this</span>.setColor = <span class="function"><span class="keyword">function</span>(<span class="params">color</span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">                <span class="keyword">this</span>.color= color;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Person(<span class="string">"red"</span>);  <span class="comment">//this是谁？  window</span></span><br><span class="line">        <span class="keyword">var</span> p = <span class="keyword">new</span> Person(<span class="string">"yellow"</span>);  <span class="comment">//thsi 是 p</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line">        p.setColor.call(obj,<span class="string">"black"</span>);   <span class="comment">//this 是obj</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> test = p.setColor;</span><br><span class="line">        thes();  <span class="comment">//this 是window</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">fun2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fun2();  <span class="comment">//this是window</span></span><br><span class="line"></span><br><span class="line">        fun1();</span><br><span class="line">        </span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础总结与深入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：对象</title>
      <link href="/2020/07/26/2020-07-26.5/"/>
      <url>/2020/07/26/2020-07-26.5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line"></span><br><span class="line">        <span class="number">1.</span>什么是对象？</span><br><span class="line">            *多个数据的封装体</span><br><span class="line">            *用来保存多个数据的容器</span><br><span class="line">            *一个对象代表现实中的一个事物</span><br><span class="line"></span><br><span class="line">        <span class="number">2.</span>为什么要用对象</span><br><span class="line">            *统一管理多个数据</span><br><span class="line">            </span><br><span class="line">        <span class="number">3.</span>对象的组成</span><br><span class="line">            *属性：属性由属性名(本质是字符串）和属性值(可以是任意类型）组成</span><br><span class="line">            *方法：一种特殊的属性（属性值为函数的叫方法）</span><br><span class="line">        </span><br><span class="line">        <span class="number">4.</span>如何访问对象内部数据</span><br><span class="line">            *实例.属性名    (编码简单，有时不能用）</span><br><span class="line">            *实例[<span class="string">"属性名"</span>]  （编码复杂，能通用）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="number">5.</span>什么时候必须使用[<span class="string">"属性名"</span>]的方式</span><br><span class="line">            <span class="number">1.</span>属性名包含特殊字符：-、空格</span><br><span class="line">            <span class="number">2.</span>属性名的值是个变量时（属性名不确定）</span><br><span class="line"></span><br><span class="line">     --&gt;</span><br><span class="line"></span><br><span class="line">     &lt;script&gt;</span><br><span class="line">         <span class="keyword">var</span> p = &#123;</span><br><span class="line">             <span class="string">"name"</span>:<span class="string">"Tom"</span>,</span><br><span class="line">             age:<span class="number">12</span>,</span><br><span class="line">             setName:<span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">                 <span class="keyword">this</span>.name = name;</span><br><span class="line">             &#125;,</span><br><span class="line">             setAge: <span class="function"><span class="keyword">function</span>(<span class="params">age</span>)</span>&#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">this</span>.age = age;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         p.setName(<span class="string">"Bob"</span>);</span><br><span class="line">         p[<span class="string">"setAge"</span>](<span class="number">23</span>);</span><br><span class="line">         <span class="built_in">console</span>.log(p.name,p[<span class="string">'age'</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         <span class="keyword">var</span> q = &#123;&#125;;</span><br><span class="line">         <span class="comment">//1.给q对象添加一个属性：content type： text/json 不能用</span></span><br><span class="line">         <span class="comment">//2.p.content-type = "text/json"  不能用</span></span><br><span class="line"></span><br><span class="line">         p[<span class="string">"content-type"</span>]=<span class="string">"text/json"</span>;   <span class="comment">//可以</span></span><br><span class="line">         <span class="built_in">console</span>.log(p[<span class="string">"content-type"</span>]);  <span class="comment">// 可以</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         <span class="comment">//2.属性名不确定</span></span><br><span class="line">         <span class="keyword">var</span> propName = <span class="string">"myAge"</span>;</span><br><span class="line">         <span class="keyword">var</span> value = <span class="number">18</span>;</span><br><span class="line">         <span class="comment">//p.propName =value;  //不能用</span></span><br><span class="line">         p[propName]=value;    <span class="comment">//可以</span></span><br><span class="line">         <span class="built_in">console</span>.log(p[propName]);  <span class="comment">//可以</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础总结与深入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：数据_变量_内存2+3</title>
      <link href="/2020/07/26/2020-07-26.4/"/>
      <url>/2020/07/26/2020-07-26.4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line"></span><br><span class="line">        问题<span class="number">1</span>：<span class="keyword">var</span> a =xxx,a内存中到底保存的是什么</span><br><span class="line">            *xxx是一个变量，保存的xxx的内存内容（可能是基本数据，也可能是地址值）</span><br><span class="line">            *xxx是基本数据，保存的就是这个数据</span><br><span class="line">            *xxx是一个对象，保存的就是对象的地址值</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">        问题<span class="number">2</span>：关于引用变量的赋值问题（可以画图理解）</span><br><span class="line">            *<span class="number">2</span>个引用变量指向同一个对象，通过一个变量修改内部数据，另一个变量输出的是修改后的数据</span><br><span class="line">            *<span class="number">2</span>个引用变量指向同一个对象，让其中一个引用变量指向另一个对象，另一引用变量依然指向前一个对象</span><br><span class="line"></span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指向了同一对象</span></span><br><span class="line">        <span class="keyword">var</span> obj1 = &#123;<span class="attr">name</span>:<span class="string">'Tom'</span>&#125;;</span><br><span class="line">        <span class="keyword">var</span> obj2 = obj1;</span><br><span class="line">        obj2.age = <span class="number">12</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(obj1.age);  <span class="comment">//12</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">            obj.name = <span class="string">'A'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fn(obj1);</span><br><span class="line">        <span class="built_in">console</span>.log(obj2.name);  <span class="comment">//A</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 又创建了另一对象</span></span><br><span class="line">        <span class="keyword">var</span> a = &#123;<span class="attr">age</span>:<span class="number">12</span>&#125;;</span><br><span class="line">        <span class="keyword">var</span> b = a;</span><br><span class="line">        a = &#123;<span class="attr">name</span>:<span class="string">'BoB'</span>,<span class="attr">age</span>:<span class="number">13</span>&#125;;</span><br><span class="line">        b.age = <span class="number">14</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(b.age,a.name,a.age);  <span class="comment">//14   "BoB"  13</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">            obj = &#123;<span class="attr">age</span>:<span class="number">15</span>&#125;</span><br><span class="line">            <span class="built_in">console</span>.log(obj.age)<span class="comment">//15</span></span><br><span class="line">        &#125;</span><br><span class="line">        fn2(a);<span class="comment">//这里只是将a的值拷贝一份给函数形参，a本身指向没变</span></span><br><span class="line">        </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> a);</span><br><span class="line">        <span class="built_in">console</span>.log(a.age,a.name); <span class="comment">// 依然是13,BoB,不是15，只是将a的值拷贝一份给函数形参，a本身指向没变</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">    </span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础总结与深入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：数据_变量_内存1</title>
      <link href="/2020/07/26/2020-07-26.3/"/>
      <url>/2020/07/26/2020-07-26.3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        <span class="number">1.</span>什么是数据？</span><br><span class="line">            *存储在内存中代表特定信息的‘东东’，本质上是<span class="number">0101.</span>。。。</span><br><span class="line">            *数据的特点：可传递，可运算</span><br><span class="line">            *一切皆数据</span><br><span class="line">            *内存中所有操作的目标：数据</span><br><span class="line">                *算术运算</span><br><span class="line">                *逻辑运算</span><br><span class="line">                *赋值</span><br><span class="line">                *运行函数</span><br><span class="line"></span><br><span class="line">        <span class="number">2.</span>什么是内存？</span><br><span class="line">            *内存条通电后产生的可储存数据的空间（临时的，永久的是硬盘，平时所说的内存是指内存条）</span><br><span class="line">            *内存产生和死亡：内存条（电路板）==&gt;通电==&gt;产生内存空间==&gt;存储数据==&gt;处理数据==&gt;</span><br><span class="line">                断电==&gt;内存空间和数据都消失</span><br><span class="line">            *一块小内存的两个数据（一般所说）</span><br><span class="line">                *内部存储的数据</span><br><span class="line">                *本身的地址值</span><br><span class="line">            *内存分类、</span><br><span class="line">                *栈：全局变量、局部变量</span><br><span class="line">                *堆：对象本身（注意：不是变量标识符（变量名），变量标识符都存在栈中）</span><br><span class="line"></span><br><span class="line">        <span class="number">3.</span>什么是变量？</span><br><span class="line">            *可变化的量，由变量名和变量值组成</span><br><span class="line">            *每个变量都对应一块小内存，变量名用来查找对应的内存，变量值就是内存中存储的数据</span><br><span class="line"></span><br><span class="line">        <span class="number">4.</span>内存，数据，变量三者之间的关系</span><br><span class="line">            *内存是用来存储数据的空间</span><br><span class="line">            *数据是内存空间中所储存的<span class="string">'东东'</span></span><br><span class="line">            *变量是内存的标识</span><br><span class="line"></span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> age = <span class="number">18</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(age);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> obj = &#123;<span class="attr">name</span>: <span class="string">'Tom'</span>&#125;;</span><br><span class="line">        <span class="built_in">console</span>.log(obj.name);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> obj =&#123;<span class="attr">name</span>:<span class="string">'Tom'</span>&#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> a =<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">var</span> b = a + <span class="number">2</span>;  <span class="comment">//将a拷贝一份给b</span></span><br><span class="line"></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础总结与深入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：基本数据类型02</title>
      <link href="/2020/07/26/2020-07-26.2/"/>
      <url>/2020/07/26/2020-07-26.2/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/lanQing-Song/blogimages/%E6%A0%88%E5%92%8C%E5%A0%86.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        <span class="number">1.</span><span class="literal">undefined</span>与<span class="literal">null</span>的区别？</span><br><span class="line">            *<span class="literal">undefined</span>表示定义了但未赋值</span><br><span class="line"></span><br><span class="line">            *<span class="literal">null</span>定义并赋值了，只是值为<span class="literal">null</span>（<span class="literal">null</span>就是个值）</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//1.undefined与null的区别？</span></span><br><span class="line">                <span class="keyword">var</span> a;</span><br><span class="line">                <span class="built_in">console</span>.log(a);  <span class="comment">//undefined</span></span><br><span class="line">                a = <span class="literal">null</span>;</span><br><span class="line">                consloe.log(a);  <span class="comment">//null;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="number">2.</span>什么时候给变量赋值为<span class="literal">null</span>？</span><br><span class="line">            *初始化时，表明将要赋值为对象</span><br><span class="line"></span><br><span class="line">            *结束时，让对象成为垃圾对象（被浏览器里的垃圾回收器回收）</span><br><span class="line"></span><br><span class="line">             <span class="comment">//起始</span></span><br><span class="line">                <span class="keyword">var</span> b =<span class="literal">null</span>;  <span class="comment">//初始值为null，表明将要赋值为对象</span></span><br><span class="line">                <span class="comment">//确定对象就赋值</span></span><br><span class="line">                b = [<span class="string">"joij"</span>,<span class="number">12</span>];</span><br><span class="line">                <span class="comment">//不用时最后释放掉</span></span><br><span class="line">                b = <span class="literal">null</span>;  <span class="comment">//让b指向的对象成为垃圾对象被回收，切断栈中变量b与堆中对象的联系</span></span><br><span class="line">                b = <span class="number">2</span>;  <span class="comment">//同样也切断了联系，让堆中对象成为垃圾被回收，但产生了垃圾数值2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="number">3.</span>严格区别变量类型与数据类型（了解，一般对象类型就当成引用类型，不会严格区分）</span><br><span class="line">            **数据类型</span><br><span class="line">                *基本类型</span><br><span class="line">                *对象类型</span><br><span class="line"></span><br><span class="line">            **变量类型（js中变量本身没有类型，都是<span class="keyword">var</span>来定义，判断类型</span><br><span class="line">                        得通过变量的值来判断，值：要么基本类型的数据，要么引用类型（地址）</span><br><span class="line"></span><br><span class="line">                *基本类型：变量在栈中保存的就是基本类型的数据</span><br><span class="line">                *引用类型：变量在栈中保存的就是堆中的地址，通过地址去堆中确定具体的对象类型</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="number">4.</span>简单理解构造函数与实例</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//    简单理解构造函数与对象</span></span><br><span class="line">                <span class="function"><span class="keyword">function</span> <span class="title">Person</span> (<span class="params">name ,age</span>)</span>&#123; <span class="comment">// 类型：构造函数</span></span><br><span class="line">                <span class="keyword">this</span>.naem = name,</span><br><span class="line">                <span class="keyword">this</span>.age = age</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> p = <span class="keyword">new</span> Person(<span class="string">"tom"</span>,<span class="number">12</span>);  <span class="comment">//根据构造函数创作实例对象，实际上p获得的是该对象的地址</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// Person("tom",12);也能把它当普通函数用，但不建议</span></span><br><span class="line"></span><br><span class="line">     --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line">        </span><br><span class="line">           &lt;script&gt;</span><br><span class="line">            <span class="comment">//    简单理解构造函数与对象</span></span><br><span class="line">                <span class="function"><span class="keyword">function</span> <span class="title">Person</span> (<span class="params">name ,age</span>)</span>&#123; <span class="comment">// 类型：构造函数</span></span><br><span class="line">                <span class="keyword">this</span>.naem = name,</span><br><span class="line">                <span class="keyword">this</span>.age = age</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> p = <span class="keyword">new</span> Person(<span class="string">"tom"</span>,<span class="number">12</span>);  <span class="comment">//根据构造函数创作实例对象，实际上p获得的是该对象的地址</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// Person("tom",12);也能把它当普通函数用，但不建议</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">            <span class="comment">//1.undefined与null的区别？</span></span><br><span class="line">                <span class="keyword">var</span> a;</span><br><span class="line">                <span class="built_in">console</span>.log(a);  <span class="comment">//undefined</span></span><br><span class="line">                a = <span class="literal">null</span>;</span><br><span class="line">                consloe.log(a);  <span class="comment">//null;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//2.什么时候给变量赋值为null？</span></span><br><span class="line">                <span class="comment">//起始</span></span><br><span class="line">                <span class="keyword">var</span> b =<span class="literal">null</span>;  <span class="comment">//初始值为null，表明将要赋值为对象</span></span><br><span class="line">                <span class="comment">//确定对象就赋值</span></span><br><span class="line">                b = [<span class="string">"joij"</span>,<span class="number">12</span>];</span><br><span class="line">                <span class="comment">//不用时最后释放掉</span></span><br><span class="line">                b = <span class="literal">null</span>;  <span class="comment">//让b指向的对象成为垃圾对象被回收，切断栈中变量b与堆中对象的联系</span></span><br><span class="line">                b = <span class="number">2</span>;  <span class="comment">//同样也切断了联系，让堆中对象成为垃圾被回收，但产生了垃圾数值2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">      </span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础总结与深入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS笔记：基本数据类型01</title>
      <link href="/2020/07/26/2020-07-26.1/"/>
      <url>/2020/07/26/2020-07-26.1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">        <span class="number">1.</span>分类</span><br><span class="line"></span><br><span class="line">           *  基本（值）类型</span><br><span class="line">                string：任意字符串</span><br><span class="line">                <span class="built_in">Number</span>：任意的数字</span><br><span class="line">                <span class="built_in">Boolean</span>：<span class="literal">true</span>、<span class="literal">false</span></span><br><span class="line">                <span class="literal">undefined</span>：<span class="literal">undefined</span></span><br><span class="line">                <span class="literal">null</span>：<span class="literal">null</span>   注意：<span class="keyword">typeof</span> <span class="literal">null</span>会返回<span class="string">"object"</span>,但其实<span class="literal">null</span>不是对象，是基本数据类型，</span><br><span class="line">                                    这是js语言本身的一个bug。其原理是不同的对象在底层都是用二进制</span><br><span class="line">                                    来表示的，在js中二进制前<span class="number">3</span>位是<span class="number">0</span>即判断是为对象，<span class="literal">null</span>的二进制表</span><br><span class="line">                                    示是全<span class="number">0</span>，即前三位都是<span class="number">0</span>，所以执行<span class="keyword">typeof</span>返回的是object，实际上<span class="literal">null</span></span><br><span class="line">                                    为基本数据类型。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           * 对象（引用)类型(本质就对象一类，<span class="function"><span class="keyword">function</span>对象和<span class="title">array</span>对象也是对象)</span></span><br><span class="line"><span class="function">                <span class="title">object</span>：任意对象</span></span><br><span class="line"><span class="function">                <span class="title">function</span>：一种特别的对象（特点：可以执行）</span></span><br><span class="line"><span class="function">                <span class="title">array</span>：一种特别的对象（特点：数值下标，内部数据是有序的）</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">        2.具体类型判断：</span></span><br><span class="line"><span class="function">            <span class="title">typeof</span>：</span></span><br><span class="line"><span class="function">                可以判断：<span class="title">undefined</span>、数值 、字符串、布尔值、<span class="title">function</span></span></span><br><span class="line"><span class="function">                不能判断：<span class="title">null</span>（结果会返回<span class="title">object</span>，实际上就是个基本数据类型：<span class="title">null</span>值）、<span class="title">array</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">            <span class="title">instanceof</span>:(<span class="params">instance:实例</span>)：</span></span><br><span class="line"><span class="function">                判断对象的具体类型（<span class="title">function</span>、<span class="title">array</span>等，而不是单纯的回复一个<span class="title">object</span>）</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">            ===/==（注意理解两者区别）：用===比较好</span></span><br><span class="line"><span class="function">                可以判断：<span class="title">undefined</span>、<span class="title">null</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">     --&gt;</span></span><br><span class="line"><span class="function">     &lt;<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="function">        //  1.基本</span></span><br><span class="line"><span class="function">        // <span class="title">typeof</span>返回数据类型的字符串表达(<span class="params">返回的就是一个字符串</span>)</span></span><br><span class="line"><span class="function">        <span class="title">var</span> <span class="title">a</span> ;</span></span><br><span class="line"><span class="function">        <span class="title">console</span>.<span class="title">log</span>(<span class="params">a,typeof a,typeof a===<span class="string">"undefined"</span></span>);  //<span class="title">undefined</span>  "<span class="title">undefined</span>"    <span class="title">true</span></span></span><br><span class="line"><span class="function">        <span class="title">console</span>.<span class="title">log</span>(<span class="params">undefined===<span class="string">"undefined"</span></span>);   //<span class="title">false</span></span></span><br><span class="line"><span class="function">        <span class="title">a</span> = 4;</span></span><br><span class="line"><span class="function">        <span class="title">console</span>.<span class="title">log</span>(<span class="params">typeof a===<span class="string">"number"</span></span>);   //<span class="title">true</span></span></span><br><span class="line"><span class="function">        <span class="title">a</span> = "<span class="title">atguigu</span>";</span></span><br><span class="line"><span class="function">        <span class="title">console</span>.<span class="title">log</span>(<span class="params">typeof a ===<span class="string">"string"</span></span>);  //<span class="title">true</span></span></span><br><span class="line"><span class="function">        <span class="title">a</span> = <span class="title">true</span>;</span></span><br><span class="line"><span class="function">        <span class="title">console</span>.<span class="title">log</span>(<span class="params">typeof a===<span class="string">"boolean"</span></span>);  //<span class="title">true</span></span></span><br><span class="line"><span class="function">        <span class="title">a</span> = <span class="title">null</span>;</span></span><br><span class="line"><span class="function">        <span class="title">console</span>.<span class="title">log</span>(<span class="params">typeof a, a=== null,typeof a===<span class="string">"object"</span></span>);   //"<span class="title">object</span>" <span class="title">true</span>  <span class="title">true</span></span></span><br><span class="line"><span class="function">        <span class="title">console</span>.<span class="title">log</span>(<span class="params"><span class="string">"-------------------------------------------------------"</span></span>);</span></span><br><span class="line"><span class="function">        </span></span><br><span class="line"><span class="function">        //2.对象</span></span><br><span class="line"><span class="function">        <span class="title">var</span> <span class="title">b1</span> = </span>&#123;</span><br><span class="line">            b2: [<span class="number">1</span>,<span class="string">"abc"</span>,<span class="built_in">console</span>.log],</span><br><span class="line">            b3: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"b3"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">"jojoij"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(b1 <span class="keyword">instanceof</span> <span class="built_in">Object</span>,b1 <span class="keyword">instanceof</span> <span class="built_in">Array</span>);   <span class="comment">// true    false</span></span><br><span class="line">        <span class="built_in">console</span>.log(b1.b2 <span class="keyword">instanceof</span> <span class="built_in">Array</span>,b1.b2 <span class="keyword">instanceof</span> <span class="built_in">Object</span>);  <span class="comment">//true   true</span></span><br><span class="line">        <span class="built_in">console</span>.log(b1.b3 <span class="keyword">instanceof</span> <span class="built_in">Function</span>,b1.b3 <span class="keyword">instanceof</span> <span class="built_in">Object</span>);    <span class="comment">//true   true</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> b1.b3==<span class="string">"function"</span>)   <span class="comment">//true</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span> b1.b2[<span class="number">2</span>]===<span class="string">"function"</span>);   <span class="comment">//true</span></span><br><span class="line">        </span><br><span class="line">        b1.b2[<span class="number">2</span>](<span class="number">4</span>);   <span class="comment">//4</span></span><br><span class="line">        <span class="built_in">console</span>.log(b1.b3()());  <span class="comment">//b3   "jojoij"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//  var obj = &#123;</span></span><br><span class="line">        <span class="comment">//      name:'Tom',</span></span><br><span class="line">        <span class="comment">//      age:12</span></span><br><span class="line">        <span class="comment">//  &#125;</span></span><br><span class="line">        <span class="comment">//  function test ()&#123;</span></span><br><span class="line">        <span class="comment">//      var a = 3</span></span><br><span class="line">        <span class="comment">//  &#125;</span></span><br><span class="line">     &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础总结与深入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好文收集：浅了解CDN</title>
      <link href="/2020/07/25/2020-07-25/"/>
      <url>/2020/07/25/2020-07-25/</url>
      
        <content type="html"><![CDATA[<h1 id="特别声明：本文来源于网络，收集于此主要是为了方便查看学习和记忆。"><a href="#特别声明：本文来源于网络，收集于此主要是为了方便查看学习和记忆。" class="headerlink" title="特别声明：本文来源于网络，收集于此主要是为了方便查看学习和记忆。"></a>特别声明：本文来源于网络，收集于此主要是为了方便查看学习和记忆。</h1><p><strong>点击可查看原创文章：</strong><a href="https://blog.csdn.net/zhenghongcs/article/details/104285577" target="_blank" rel="noopener">https://blog.csdn.net/zhenghongcs/article/details/104285577</a></p><h2 id="CDN概念"><a href="#CDN概念" class="headerlink" title="CDN概念"></a>CDN概念</h2><p>CDN全称叫做“Content Delivery Network”，中文叫<strong>内容分发网络</strong>。</p><p>实际上CDN这个概念是在1996年由美国麻省理工学院的一个研究小组为<strong>改善互联网的服务质量</strong>而提出的。那么它到底是怎么改善互联网服务质量的呢？</p><h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><p>我们知道，当我们使用域名访问某一个网站时，实际上就是将请求包（以Http请求为例）通过网络传输给某台服务器，比如访问“<a href="http://www.baidu.com”时：">www.baidu.com”时：</a></p><ol><li>首先解析出该域名所对应的IP地址(DNS域名解析)</li><li>然后将Http请求包通过网络路由到IP地址所对应的服务器</li></ol><blockquote><p>我们通常说“服务器的IP地址”，这其实不太准确，IP地址是和网卡绑定的，一个服务器可以有多个网卡，也就是可能有多个IP地址。</p></blockquote><p>我们先来看第一步：域名解析</p><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>解析域名分为两种：</p><ol><li>将一个域名解析为一个IP地址</li><li>将一个域名解析为另外一个域名</li></ol><p>其实解析思路不难，我们在域名服务商购买了一个域名之后，需要去映射一个IP地址，可以用Map来表示这个关系：<code>{域名：IP}</code>。</p><p>同时我们也可以给某个域名取一个别名，比如“<a href="http://www.baidu.com”取一个别名“test.baidu.com”，这种关系也可以用Map来表示：`{域名：别名}`。这里的别名专业一点叫做**CNAME**，相信大家对这个词有点眼熟，它就是这个意思。">www.baidu.com”取一个别名“test.baidu.com”，这种关系也可以用Map来表示：`{域名：别名}`。这里的别名专业一点叫做**CNAME**，相信大家对这个词有点眼熟，它就是这个意思。</a></p><p>而<strong>域名解析</strong>，实际上就是解析出指定域名所对应的IP地址，或者该域名的一个CNAME。</p><p>而域名解析是由DNS系统来负责的，DNS服务接受外部请求，从请求里提取域名，</p><ul><li>如果这个域名对应的是IP地址，则返回这个IP地址，</li><li>如果这个域名对应的是CNAME，则继续查找CNAME域名的IP地址，然后将该地址返回给请求发送者。</li></ul><p>请求发送者拿到IP地址之后，完成真正的请求调用。</p><p>实际上DNS系统是非常庞大的，这里不去多将，大家把它当作一个黑盒子，这个盒子的作用就是上文所描述的，这里用一个简单的图来表示一下。</p><p>没有CNAME的情况：<br><img src="https://cdn.jsdelivr.net/gh/lanQing-Song/blogimages/cdn1.png" alt=""></p><p>有CNAME的情况：<img src="https://cdn.jsdelivr.net/gh/lanQing-Song/blogimages/cdn2.png" alt=""></p><p><strong>特别注意：在有CNAME的情况下，我们可以发现，CNAME实际上在域名解析的过程中承担了中间人（或者说代理）的角色，这是CDN实现的关键。</strong></p><h3 id="CDN原理"><a href="#CDN原理" class="headerlink" title="CDN原理"></a>CDN原理</h3><p>首先<strong>CDN</strong>是为了<strong>改善互联网的服务质量</strong>的<strong>。</strong>通俗一点说其实就是提高访问速度。</p><p>假设百度网站现在只有一台服务器，现在有一个人在上海访问百度，如果该服务器也在上海，那么通常来说访问比较快，如果该服务器在拉萨，那么相对而言访问就比较慢了。那么这个问题的根本原因是网络传输是依赖于网线的，网线越长，那么时间肯定就越久。</p><p>那么怎么解决这个问题呢？其实思路很简单，<strong>百度在全国各地都部署一模一样的服务器就行了，专业一点叫冗余。</strong></p><p>思路很简单，但实现还是比较麻烦的，服务器上的资源分为两种：<strong>静态资源</strong>与<strong>动态资源</strong>。</p><ul><li>静态资源：这种资源通常是很少变动的，比如图片，视频，css，javascript等等</li><li>动态资源：这种资源不同用户不同时刻访问通常是不一样的，比如ftl，jsp等等。</li></ul><p>那么如果百度要在全国各地都部署服务器，如果说每个服务器上都有相同的动态资源，那么可能还需要配置相应的数据库，因为动态资源所记录的信息通常会存储在数据库中，那么这就涉及到了数据同步等等问题，这会导致成本很高，这种做法专业一点其实就是<strong>集群，</strong>而目前来说集群架构最多是<strong>三地五中心，</strong>不是说全国多地集群不可能，主要是成本太高。</p><blockquote><p>大家想了解三地五中心的，可以看<a href="https://mp.weixin.qq.com/s?__biz=MzI3MDI5MjI1Nw%3D%3D&idx=1&mid=2247483748&scene=21&sn=3da55fd7677f5fd91349a08b5f61a877#wechat_redirect" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/uGyGldbwmShDDPDau5pAPw</a>这篇文章，也是本人写的。</p></blockquote><p>那么有没有成本比较低的方式呢，有，就是在每个服务器上只部署静态资源，静态资源通常不涉及到数据库，所以成本也比较低，而且也能提高用户的访问速度。</p><p>到这里，介绍了CDN想要达到的目的，那么怎么达到这个目的呢?</p><p>现在如果要比较CDN系统，我们可以考虑两点：</p><ol><li>CDN系统中存储静态资源服务器的性能以及网速怎么样。</li><li>CDN系统中全国甚至全球范围内服务器节点的数量以及部署情况。</li></ol><p>第一点很好理解，第二点大家应该也能理解了，如果静态资源的服务器节点很多，能够让每个用户在访问这些静态资源时都不用“跑很远的路程”才能获取到，那么自然这是CDN系统的优点。</p><p>有公司看到了这种需求，所以现在其实有很多CDN供应商，比如阿里，腾讯等等都有自己的CDN服务。只要你自己的系统接入了这些大厂所提供的CDN服务，你把自己的静态资源传给CDN服务，那么这些静态资源将自动的分布到全世界各地去。</p><p>好，那么现在的问题是，用户在访问静态资源时也是通过域名来访问的，域名会被解析成<strong>某一个</strong>IP地址，关键的问题就是，<strong>DNS系统怎么在做域名解析时，解析出来一个离用户最近的一个IP地址呢</strong>。</p><p>普通的DNS系统是做不到的，需要一个特殊的DNS服务器，这个特殊DNS需要知道</p><ol><li>用户当前所在位置</li><li>还需要知道用户现在访问的这个域名对应哪些IP地址，以及这个IP地址分别在哪?</li></ol><p>对于第一个问题好解决，直接从用户请求里提取出用户的ip地址，比如这个ip地址被解析为北京电信、上海移动等等。</p><p>第二个问题由谁来解决，我们现在考虑的是CDN，CDN提供商肯定知道他们公司在哪些地方部署了机器以及它们的IP地址，所以这个问题只能有CDN提供商来解决，<strong>CDN提供商会提供这个特殊的DNS服务器，我们叫做 CDN专用DNS服务器</strong>。</p><p>这样的话，只要用户在使用某个域名访问静态资源时，如果用户直接配置自己电脑的<strong>DNS地址为CDN专用DNS服务器</strong>。那么自然解决了问题，但是我们需要考虑的时，我们不能要求世界上所有的用户都去修改自己电脑的DNS地址。所以这个时候就要利用DNS中的CNAME了。</p><p>用户使用某个域名来访问静态资源时（这个域名在阿里CDN服务中叫做“加速域名”），比如这个域名为“image.baidu.com”，它对应一个CNAME，叫做“cdn.ali.com”，那么普通DNS服务器（区别<strong>CDN专用DNS服务器</strong>）在解析“image.baidu.com”时，会先解析成“cdn.ali.com”，普通DNS服务器发现该域名对应的也是一个DNS服务器，那么会将域名解析工作转交给该DNS服务器，该DNS服务器就是<strong>CDN专用DNS服务器。CDN专用DNS服务器</strong>对“cdn.ali.com”进行解析，然后依据服务器上记录的所有CDN服务器地址信息，选出一个离用户最近的一个CDN服务器地址，并返回给用户，用户即可访问离自己最近的一台CDN服务器了。</p><p><img src="https://cdn.jsdelivr.net/gh/lanQing-Song/blogimages/cdn3.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> CDN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git常用的一些基础指令</title>
      <link href="/2020/07/23/2020-07-23/"/>
      <url>/2020/07/23/2020-07-23/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Git的安装"><a href="#1-Git的安装" class="headerlink" title="1.Git的安装"></a>1.Git的安装</h1><p>安装连接：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></p><p>一般按指示的步骤安装到自己想要的路劲上就行。</p><h1 id="2-Git的使用方式"><a href="#2-Git的使用方式" class="headerlink" title="2.Git的使用方式"></a>2.Git的使用方式</h1><ul><li>命令行方式</li><li>使用可视化的GUI方式</li></ul><p>此文使用命令行方式，理由：``</p><ul><li>命令行模式能够进行Git的所有操作，而GUI方式只能进行常用的Git操作。</li><li>GUI方式的Git软件太多，各有各的喜欢，也不一定都装了GUI的软件，但每个人基本都有命令行工具，如：Mac系统有Terminal（终端），Windows有CMD、powerShell等；</li></ul><h1 id="3-Git环境配置"><a href="#3-Git环境配置" class="headerlink" title="3.Git环境配置"></a>3.Git环境配置</h1><p>使用Git之前要先对其进行一些基本信息配置；</p><p>配置工作只需一次，以后升级时还会沿用现在的配置。如果需要，你随时可以用相同的方式修改已有的配置。</p><h2 id="3-1-用户信息"><a href="#3-1-用户信息" class="headerlink" title="3.1.用户信息"></a>3.1.用户信息</h2><p>第一个要配置的是你个人的用户名称和电子邮件地址。这两条配置很重要，每次 Git 提交时都会携带这两条信息，用于说明是谁提交了代码 ,每次输完命令后按回车执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;填用户名&quot;</span><br><span class="line">git config --global user.email 你的邮箱地址，没双引号</span><br></pre></td></tr></table></figure><h2 id="3-2-查看配置信息"><a href="#3-2-查看配置信息" class="headerlink" title="3.2.查看配置信息"></a>3.2.查看配置信息</h2><p>要检查已有的配置信息可以使用如下命令</p><p><code>git config --list</code></p><p><u><em>有时候会看到重复的变量名，那就说明它们来自不同的配置文件（比如 <code>/etc/gitconfig</code> 和 <code>~/.gitconfig</code>），不过最终 Git 实际采用的是最后一个</em></u></p><h1 id="4-基本操作"><a href="#4-基本操作" class="headerlink" title="4.基本操作"></a>4.基本操作</h1><p><strong>有两种方法创建Git本地仓库：</strong></p><p>1、在想要创建仓库的文件夹下右键选择Git Base Here调出命令窗口，执行以下命令：</p><p><code>git init</code></p><p>初始化后，当前目录下回出现一个名为.git的目录，Git 仓库的所有信息都包含在该目录中。</p><p>2、从已有的仓库上克隆，也可以是远程的仓库，命令如下：</p><p><code>git clone [url]</code></p><p>先复制地址，再点击鼠标右键就可以自动粘贴，示例如下：</p><p><code>git clone git@github.com:lanQing-Song/lanQing-Song.github.io.git</code></p><p><strong>注意：如果克隆的是私有仓库，可能弹出对话框让输入用户名和密码，输入要好克隆的仓库的用户名和密码即可</strong></p><h1 id="5-基本概念"><a href="#5-基本概念" class="headerlink" title="5.基本概念"></a>5.基本概念</h1><p>先来理解一下Git工作区、暂存区和版本库概念</p><ul><li><strong>工作区：</strong>就是你在电脑上能看到的目录</li><li><strong>仓库：</strong>工作区有有一个隐藏的目录<strong>.git</strong>,它不属于工作区，而是Git的仓库，它里面存放着Git参考的所有数据；</li><li><strong>暂存区：</strong>英文叫stage或index，一般存放在参考（<strong>.git目录</strong>）下的index文件中，所以有时我们也把暂存区叫做索引（index）。</li><li><strong>版本库：</strong>版本库是参考中用来存放Git版本（提交记录）的地方，下图展示了仓库、版本库、暂存区和工作区之间的关系:</li></ul><p><img src="https://cdn.jsdelivr.net/gh/lanQing-Song/blogimages/15.webp" alt=""></p><h1 id="6-提交版本"><a href="#6-提交版本" class="headerlink" title="6.提交版本"></a>6.提交版本</h1><p>要把更改添加到版本库，需要两步：</p><ol><li>用 <code>git add</code> 命令把更改添加到暂存区；</li><li>用 <code>git commit</code> 命令将暂存区中的所有内容提交到 版本库，生成新的版本节点；</li></ol><p>若想一次添加所有的文件，可以使用以下方式之一：</p><ul><li><code>git add .</code> ： 添加新文件(new)和被修改(modified)文件，不包括被删除(deleted)文件；在Shell里，后面的 <code>.</code> 代表当前目录， 所以相当于将当前目录传给了 <code>add</code> 命令；</li><li><code>git add *</code> ：添加所有非隐藏的的文件的变化；<code>*</code> 是 shell 语言中的通配符，能匹配所有非隐藏的文件 和 目录，所以相当于将匹配的到文件和目录都传给了 <code>add</code> 命令；</li><li><code>git add -A</code> ：添加所有变化；</li><li><code>git add -u</code> ： 添加被修改(modified)和 被删除(deleted)文件，不包括新文件(new)；</li><li>可以用 -m 参数后跟提交说明的方式，在一行命令中提交更新：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m “说明文字&quot;</span><br></pre></td></tr></table></figure><p>然后可以查看一下当前状态：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><h1 id="7-推送数据到远程仓库和从远程仓库拉取数据"><a href="#7-推送数据到远程仓库和从远程仓库拉取数据" class="headerlink" title="7.推送数据到远程仓库和从远程仓库拉取数据"></a>7.推送数据到远程仓库和从远程仓库拉取数据</h1><h2 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h2><p><strong>链接远程仓库</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin 仓库地址</span><br><span class="line">#或者</span><br><span class="line">git remote add origin_ssh 仓库地址</span><br></pre></td></tr></table></figure><p><strong>查看远程仓库</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p><strong>删除远程仓库</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br><span class="line">#或者</span><br><span class="line">git remote rm origin_ssh</span><br></pre></td></tr></table></figure><h2 id="7-1"><a href="#7-1" class="headerlink" title="7.1"></a>7.1</h2><p>通过 <code>push</code> 命令，可把本地仓库中的数据推送到远程仓库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure><p>此时，可以查看一下远程仓库中，看是否已经包含了我们的新提交；</p><h2 id="7-2"><a href="#7-2" class="headerlink" title="7.2"></a>7.2</h2><p>如果有其他人往远程远程仓库上推送了新的提交，我们可以执行以下命令来获取新的提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><p><strong>忽略某些文件</strong></p><p>有时候我们可能想忽略一些文件，比如：<code>node_mode</code>、<code>.idea</code> 等等，但是，在执行 <code>status</code> 或 <code>add</code> 命令时，总是显示这些文件，甚至一不小心就提交了这些文件；这时我们可以在工作区根目录下创建一个名为 <code>.gitignore</code> 的文件，在该文件中列出要忽略的文件模式；这样，Git 就不会在跟踪和显示这些文件了；</p><p>文件 .gitignore 的格式规范如下：</p><ul><li>所有空行或者以注释符号 ＃ 开头的行都会被 Git 忽略。</li><li>在一行的末尾添加注释，会使该行被Git忽略，所以注释只能独占一行，不能添加在行的末尾；</li><li>可以使用标准的 glob 模式匹配。</li><li>匹配模式最后跟反斜杠（/）说明要忽略的是目录。</li><li>要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。</li></ul><p>所谓的 glob 模式是指 shell 所使用的简化了的正则表达式。</p><p>.gitignore 文件的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 此为注释 – 将被 Git 忽略</span><br><span class="line"></span><br><span class="line"># 忽略所有 .a 结尾的文件</span><br><span class="line">*.a</span><br><span class="line"></span><br><span class="line"># 但 lib.a 除外</span><br><span class="line">!lib.a</span><br><span class="line"></span><br><span class="line"># 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir&#x2F;TODO</span><br><span class="line">&#x2F;TODO</span><br><span class="line"></span><br><span class="line"># 忽略 build&#x2F; 目录下的所有文件</span><br><span class="line">build&#x2F;</span><br><span class="line"></span><br><span class="line"># 会忽略 doc&#x2F;notes.txt 但不包括 doc&#x2F;server&#x2F;arch.txt</span><br><span class="line">doc&#x2F;*.txt</span><br></pre></td></tr></table></figure><h1 id="8-分支"><a href="#8-分支" class="headerlink" title="8.分支"></a>8.分支</h1><p>在创建仓库时，Git 会自动创建一个名叫 <code>master</code> 的默认分支；</p><h2 id="8-1查看分支"><a href="#8-1查看分支" class="headerlink" title="8.1查看分支"></a>8.1查看分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure><p>被*****标记的表示当前所在的分支</p><h2 id="8-2创建分支"><a href="#8-2创建分支" class="headerlink" title="8.2创建分支"></a>8.2创建分支</h2><p>创建一个名叫dev的分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch dev</span><br></pre></td></tr></table></figure><p>再查看分支，会发现多了一个叫dev的分支</p><h2 id="8-3切换分支"><a href="#8-3切换分支" class="headerlink" title="8.3切换分支"></a>8.3切换分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout dev</span><br></pre></td></tr></table></figure><p>表示切换到dev分支</p><h2 id="8-4创建和切换分支一步完成"><a href="#8-4创建和切换分支一步完成" class="headerlink" title="8.4创建和切换分支一步完成"></a>8.4创建和切换分支一步完成</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b bug</span><br></pre></td></tr></table></figure><p>可以通过<code>git branch</code>查看一下是否创建了一个叫bug的新分支并且切换到该分支</p><h2 id="8-5分支共用工作区"><a href="#8-5分支共用工作区" class="headerlink" title="8.5分支共用工作区"></a>8.5分支共用工作区</h2><p>1.在 bug 分支下新增一个 <code>file2.txt</code> 文件，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">b</span><br><span class="line">b</span><br><span class="line">b</span><br><span class="line">b</span><br><span class="line">b</span><br></pre></td></tr></table></figure><p>2.将该文件添加到暂存区，并提交：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add -A</span><br><span class="line">git commit -m &quot;版本2&quot;</span><br></pre></td></tr></table></figure><p>3.切换到master分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br></pre></td></tr></table></figure><p>再看下工作区的内容会饭洗，刚才创建的文件file2.txt没有了，因为master下没有没有file2.txt文件，它再bug分支下；</p><p>说明了：</p><ul><li>分支是共用工作区的；</li><li>切换分支时，Git会自动将工作区的内容切换到当前分支的内容；</li></ul><h2 id="8-6合并冲突"><a href="#8-6合并冲突" class="headerlink" title="8.6合并冲突"></a>8.6合并冲突</h2><p>为了给大家演示一下冲突，我们先制造一些冲突；</p><ol><li><p>切换到 bug 分支 <code>git checkout bug</code> ；</p></li><li><p>将 <code>file1.txt</code> 文件的第3行改成 <code>a4</code> ，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a</span><br><span class="line">a</span><br><span class="line">a4</span><br><span class="line">a</span><br><span class="line">a</span><br></pre></td></tr></table></figure></li><li><p>暂存并提交改动 <code>git commit -a -m &quot;版本4&quot;</code>；</p></li><li><p>将 master 分支的变更合并到 当前分支（bug分支）：<br>合并分支用 <code>merge</code> 命令，如下：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge master</span><br></pre></td></tr></table></figure><p>从输出中，我们可以看到，合并失败了，因为 <code>file1.txt</code> 文件冲突了；如果没有冲突，合并就自动完成，并会弹出文本编辑器让你输出此次合并的提交信息；</p><p>为什么 <code>file1.txt</code> 文件会冲突了呢？<br> 因为 我们在 master 和 bug 分支下都改了第3行的内容，所以冲突了；</p><p>什么情况下才会冲突？</p><p>两个分支修改了同一文件的同一位置（简单来说，就是修改的内容有交叉）就会导致合并时产生冲突，如果修改的是不同文件 或者 是同一文件的不同位置，也不会导致冲突；</p><h2 id="8-7查看冲突内容"><a href="#8-7查看冲突内容" class="headerlink" title="8.7查看冲突内容"></a>8.7查看冲突内容</h2><p>我们可以使用如下命令查看冲突的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure><p>输出中显示出了冲突的文件<code>file1.txt</code>，和冲突的内容，其中 <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code> 之上 和 <code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code> 之下的内容是共同的内容，非冲突的内容； <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>  和 <code>=======</code> 之间是当前分支中冲突的内容， <code>=======</code> 和 <code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code> 之间是其它分支中冲突的内容；</p><h2 id="8-8解决冲突"><a href="#8-8解决冲突" class="headerlink" title="8.8解决冲突"></a>8.8解决冲突</h2><p>由于语义的复杂性，Git 目前还不会帮我们自动解决冲突，我们需要自己来解决；</p><p><strong>如果此时我们想终止合并，可以使用如下命令：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge --abort</span><br></pre></td></tr></table></figure><p><strong>如果我们要继续合并，需要先解决冲突，解决冲突的方法如下：</strong></p><ol><li>根据需要决定如何保留和更改冲突的内容；</li><li>移除冲突的标记文行 <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>、<code>=======</code>、<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>；</li><li>使用 <code>add</code> 命令将冲突标记为已解决 <code>git add file1.txt</code> 或者 直接标识所有 <code>git add .</code></li><li>提交变更 <code>git commit</code>；</li></ol><p>这会弹出文本编辑器让你输出此次合并的提交信息，里面默认有表达合并的操作的提交信息，使用默认的即可；</p><p>当冲突解决了并提交后，合并操作也就完成了；此时查看一下整个仓库的版本历史：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --all --graph</span><br></pre></td></tr></table></figure><h2 id="8-9删除分支"><a href="#8-9删除分支" class="headerlink" title="8.9删除分支"></a>8.9删除分支</h2><p>如果我们想删除一个分支（比如dev分支，我们可以使用一下命令）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d dev</span><br></pre></td></tr></table></figure><h1 id="9-获取帮助"><a href="#9-获取帮助" class="headerlink" title="9.获取帮助"></a>9.获取帮助</h1><p>想了解Git的格式工具该怎么使用，可以阅读他们的使用帮助，方法有三个：</p><ul><li><code>$ git help [命令]</code></li><li><code>$ git [命令] --help</code></li><li><code>$ man git</code></li></ul><p>比如，要学习 config 命令可以怎么用，运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git help config</span><br></pre></td></tr></table></figure><p>帮助文档采用BNF语法格式描述规范描述命令行的语法，BNF语法格式的元字符及其含义如下：<br> <code>[ ]</code>：可选内容；<br> <code>&lt; &gt;</code>：必须给出内容；<br> <code>{ }</code>：可重复0至无数次的内容；<br> <code>a|b|c</code>：多选一；<br> <code>…</code>：可以有多个；</p><p><em>备注：关于BNF的详细内容可阅读参考《<a href="https://www.jianshu.com/p/15efcb0c06c8" target="_blank" rel="noopener">语法格式描述规范BNF和ABNF</a>》</em></p><p>本文参考于<a href="https://www.jianshu.com/p/fd40460ffb37" target="_blank" rel="noopener">Git基础教程</a>，更多详细Git指令教程可阅读<a href="https://www.jianshu.com/p/769ee164f65b" target="_blank" rel="noopener">Git命令手册</a></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/07/19/hello-world/"/>
      <url>/2020/07/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><!-- 各种提示标签标签 --><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><div class="note default">            <p>default 提示块标籤</p>          </div><div class="note primary no-icon">            <p>primary 提示块标籤</p>          </div><div class="note success">            <p>success 提示块标籤</p>          </div><div class="note info">            <p>info 提示块标籤</p>          </div><div class="note warning">            <p>warning 提示块标籤</p>          </div><div class="note danger">            <p>danger 提示块标籤</p>          </div><!-- 图库显示 --><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png'>  <figcaption>  <div class="gallery-group-name">壁紙</div>  <p>收藏的一些壁紙</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg'>  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>關於漫威的圖片</p>  <a href='/Gallery/marvel'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg'>  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>關於OH MY GIRL的圖片</p>  <a href='/Gallery/ohmygirl'></a>  </figcaption>  </figure>  </div><!-- 能自动调整位置的图片插入模式 --><div class="justified-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg" alt=""></p>          </div><!-- 点击按钮查看答案--><p>哪個英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">因為西裝褲(C裝酷)</span></span></p><p>門裏站着一個人? <span class="hide-inline"><button type="button" class="hide-button button--animated" style="">Click  </button><span class="hide-content">閃</span></span><br>content: 文本內容</p><p>display: 按鈕顯示的文字(可選)</p><p>bg: 按鈕的背景顏色(可選)</p><p>color: 按鈕文字的顏色(可選)</p><!-- 选择显示内容 --><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><!-- Button按钮的使用方法 --><a class="btn-beautify button--animated [color] [style] [layout] [position] [size]" href="/%5Burl%5D"   title="[text]"><i class="[icon] fa-fw"></i><span>[text]</span></a><p>[url]         : 鏈接<br>[text]        : 按鈕文字<br>[icon]        : [可選] 圖標<br>[color]       : [可選] 按鈕背景顔色(默認style時）<br>                      按鈕字體和邊框顔色(outline時)<br>                      default/blue/pink/red/purple/orange/green<br>[style]       : [可選] 按鈕樣式 默認實心<br>                      outline/留空<br>[layout]      : [可選] 按鈕佈局 默認為line<br>                      block/留空<br>[position]    : [可選] 按鈕位置 前提是設置了layout為block 默認為左邊<br>                      center/right/留空<br>[size]        : [可選] 按鈕大小<br>                      larger/留空</p><!-- 示例1 --><a class="btn-beautify button--animated larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated blue larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated pink larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated red larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated purple larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated orange larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated green larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><!-- 示例2 --><div class="btn-center"><a class="btn-beautify button--animated outline larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline blue larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline pink larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline red larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline purple larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline orange larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated outline green larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a></div><!-- 示例3 --><a class="btn-beautify button--animated block" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated block center larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a><a class="btn-beautify button--animated block right outline larger" href="http://www.jerryc.me"   title="JerryC"><i class="far fa-hand-point-right fa-fw"></i><span>JerryC</span></a>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
