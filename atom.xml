<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>R_song☛Blog</title>
  
  <subtitle>!!!∑(ﾟДﾟノ)ノ</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-11-14T05:37:56.413Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>R_song</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>狗子</title>
    <link href="http://yoursite.com/2020/11/14/2020-11-14-%E6%97%A5%E5%B8%B8/"/>
    <id>http://yoursite.com/2020/11/14/2020-11-14-%E6%97%A5%E5%B8%B8/</id>
    <published>2020-11-14T03:47:02.165Z</published>
    <updated>2020-11-14T05:37:56.413Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这阵子突然想起养过的狗子，还真是怀念，估计现在都已经长成大狗了，有点遗憾。从小到现在还真养过几次狗，可惜家里不同意，都没成。🐕永远是最靠谱的伙伴。</p><p class="gallery" data-height="220"><img data-src="https://tva4.sinaimg.cn/mw690/0085IK0fgy1gkomxv2imnj32o03k0137.jpg" alt="狗子 (1)" /><br /><img data-src="https://tvax3.sinaimg.cn/mw690/0085IK0fgy1gkok0r40avj32o03k0qbe.jpg" alt="IMG_20200111_110020_BURST1 (1)" /></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="日常随笔" scheme="http://yoursite.com/categories/diary/"/>
    
    
      <category term="狗子" scheme="http://yoursite.com/tags/%E7%8B%97%E5%AD%90/"/>
    
  </entry>
  
  <entry>
    <title>主题测试</title>
    <link href="http://yoursite.com/2020/11/09/test/"/>
    <id>http://yoursite.com/2020/11/09/test/</id>
    <published>2020-11-09T13:11:04.526Z</published>
    <updated>2020-11-12T12:57:45.530Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="测试一下"><a class="anchor" href="#测试一下">#</a> 测试一下</h1><p>囧囧唧唧哦</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="测试" scheme="http://yoursite.com/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="测试" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>nodejs异步封装——回调函数</title>
    <link href="http://yoursite.com/2020/10/18/2020-10-18.1/"/>
    <id>http://yoursite.com/2020/10/18/2020-10-18.1/</id>
    <published>2020-10-18T10:29:27.820Z</published>
    <updated>2020-11-08T09:17:22.367Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码描述</p><a id="more"></a><figure class="highlight javascript"><figcaption data-lang="javascript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">/**</pre></td></tr><tr><td data-num="2"></td><td><pre> * 简化版</pre></td></tr><tr><td data-num="3"></td><td><pre> */</span></pre></td></tr><tr><td data-num="4"></td><td><pre>如果想要获取一个函数中异步操作返回的结果，则必须通过回调函数来获取（定时器是异步操作的）</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">*</span>常用的异步操作</pre></td></tr><tr><td data-num="6"></td><td><pre> <span class="token operator">*</span>  setTimeout</pre></td></tr><tr><td data-num="7"></td><td><pre> <span class="token operator">*</span>  readFile</pre></td></tr><tr><td data-num="8"></td><td><pre> <span class="token operator">*</span>  writeFile</pre></td></tr><tr><td data-num="9"></td><td><pre> <span class="token operator">*</span>  ajax等</pre></td></tr><tr><td data-num="10"></td><td><pre> <span class="token operator">*</span>  这种情况一定要通过回调函数来获取异步操作结果</pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span>y</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'aaa'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">'hello'</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">return</span> x <span class="token operator">+</span> y  <span class="token comment">// 无法返回到外部，所以只能通过回调函数返回，见下面例子</span></pre></td></tr><tr><td data-num="18"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'bbb'</span><span class="token punctuation">)</span> <span class="token comment">// 函数会执行完 console.log ('aaa') 后就执行 console.log ('bbb')，然后函数就就结束了，</span></pre></td></tr><tr><td data-num="21"></td><td><pre>  <span class="token comment">// 返回默认的 undefined，不会去等待执行中间的定时器，最后才会去调用定时器 console.log (a)</span></pre></td></tr><tr><td data-num="22"></td><td><pre>  </pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// 执行结果为：  aaa bbb undefined hello 因为定时器是异步的，所以不会先执行，</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token comment">// 哪怕将调用时间改为 0，也会先执行后面代码，再执行异步函数</span></pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token operator">*</span></pre></td></tr><tr><td data-num="30"></td><td><pre> <span class="token operator">*</span> </pre></td></tr><tr><td data-num="31"></td><td><pre> <span class="token operator">*</span> 理解回调函数的意义：</pre></td></tr><tr><td data-num="32"></td><td><pre> <span class="token operator">*</span>    可能新手可能会有的疑问：即使加了回调函数，异步操作还是照样异步操作，依然不会改变执行顺序，所以如果我们要对</pre></td></tr><tr><td data-num="33"></td><td><pre> <span class="token operator">*</span>                          异步操作的返回结果做处理的话，直接在异步函数里做处理就好了，有必要传到回调函数里再做处理吗？</pre></td></tr><tr><td data-num="34"></td><td><pre> <span class="token operator">*</span>    答疑：诚如上述所说，不用回调函数我们也能对异步操作结果进行处理，但是这样就达不到模块化封装函数的意义了，如果不用</pre></td></tr><tr><td data-num="35"></td><td><pre> <span class="token operator">*</span>          回调函数，直接在异步函数中处理要需要返回的结果，那么会使得整个函数十分臃肿，杂乱，可读性不高，不好维护，效率不行，</pre></td></tr><tr><td data-num="36"></td><td><pre> <span class="token operator">*</span>          所以要用回调函数的方式将异步函数结果返回到外部再进行处理，达到高内聚低耦合的模块编程的目的。</pre></td></tr><tr><td data-num="37"></td><td><pre> <span class="token operator">*</span>                        </pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="40"></td><td><pre></pre></td></tr><tr><td data-num="41"></td><td><pre>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>    <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token string">'hello'</span></pre></td></tr><tr><td data-num="43"></td><td><pre>    <span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="44"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>如果想要获取一个函数中异步操作的结果，则必须通过回调函数来获取（定时器是异步操作的）</pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre></pre></td></tr><tr><td data-num="52"></td><td><pre></pre></td></tr><tr><td data-num="53"></td><td><pre></pre></td></tr><tr><td data-num="54"></td><td><pre>原文件</pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>  <span class="token keyword">var</span> <span class="token function-variable function">callback</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="57"></td><td><pre></pre></td></tr><tr><td data-num="58"></td><td><pre>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>    <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token string">'hello'</span></pre></td></tr><tr><td data-num="60"></td><td><pre>    <span class="token keyword">return</span> data</pre></td></tr><tr><td data-num="61"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="62"></td><td><pre></pre></td></tr><tr><td data-num="63"></td><td><pre>  <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token string">'默认数据'</span></pre></td></tr><tr><td data-num="64"></td><td><pre>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>    data <span class="token operator">=</span> <span class="token string">'hello'</span></pre></td></tr><tr><td data-num="66"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="67"></td><td><pre>  <span class="token keyword">return</span> data</pre></td></tr><tr><td data-num="68"></td><td><pre></pre></td></tr><tr><td data-num="69"></td><td><pre>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>    <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token string">'hello'</span></pre></td></tr><tr><td data-num="71"></td><td><pre>    <span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="72"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="73"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="74"></td><td><pre></pre></td></tr><tr><td data-num="75"></td><td><pre><span class="token comment">// 调用 fn ，得到内部的 data</span></pre></td></tr><tr><td data-num="76"></td><td><pre><span class="token comment">// console.log(fn())</span></pre></td></tr><tr><td data-num="77"></td><td><pre></pre></td></tr><tr><td data-num="78"></td><td><pre><span class="token comment">// 如果需要获取一个函数中异步操作的结果，则必须通过回调函数来获取</span></pre></td></tr><tr><td data-num="79"></td><td><pre><span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="80"></td><td><pre>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="81"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="82"></td><td><pre></pre></td></tr><tr><td data-num="83"></td><td><pre></pre></td></tr><tr><td data-num="84"></td><td><pre><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="85"></td><td><pre>  <span class="token comment">// var callback = function (data) &#123; console.log(data) &#125;</span></pre></td></tr><tr><td data-num="86"></td><td><pre></pre></td></tr><tr><td data-num="87"></td><td><pre>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="88"></td><td><pre>    <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token string">'hello'</span></pre></td></tr><tr><td data-num="89"></td><td><pre>    <span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="90"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="91"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="92"></td><td><pre></pre></td></tr><tr><td data-num="93"></td><td><pre><span class="token comment">// 如果需要获取一个函数中异步操作的结果，则必须通过回调函数来获取</span></pre></td></tr><tr><td data-num="94"></td><td><pre><span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="95"></td><td><pre>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="96"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="97"></td><td><pre></pre></td></tr><tr><td data-num="98"></td><td><pre>$<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'dsadsadsa?foo=bar'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="99"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="100"></td><td><pre></pre></td></tr><tr><td data-num="101"></td><td><pre>$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="102"></td><td><pre>  url<span class="token operator">:</span> <span class="token string">'dsadsa'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="103"></td><td><pre>  type<span class="token operator">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="104"></td><td><pre>  data<span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="105"></td><td><pre>    foo<span class="token operator">:</span> <span class="token string">'bar'</span></pre></td></tr><tr><td data-num="106"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="107"></td><td><pre>  <span class="token comment">// 使用者只负责传递，封装这需要去调用</span></pre></td></tr><tr><td data-num="108"></td><td><pre>  <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="109"></td><td><pre>    </pre></td></tr><tr><td data-num="110"></td><td><pre>  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="111"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="112"></td><td><pre></pre></td></tr><tr><td data-num="113"></td><td><pre><span class="token keyword">function</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="114"></td><td><pre>  options<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="115"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码描述&lt;/p&gt;
    
    </summary>
    
    
      <category term="nodejs" scheme="http://yoursite.com/categories/nodejs/"/>
    
    
      <category term="nodejs异步封装" scheme="http://yoursite.com/tags/nodejs%E5%BC%82%E6%AD%A5%E5%B0%81%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>阿里图标-symbolweb应用</title>
    <link href="http://yoursite.com/2020/08/20/2020-08-20.1/"/>
    <id>http://yoursite.com/2020/08/20/2020-08-20.1/</id>
    <published>2020-08-20T03:32:32.534Z</published>
    <updated>2020-11-08T09:31:46.115Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><h2 id="symbol引用"><a class="anchor" href="#symbol引用">#</a> symbol 引用</h2><p>这是一种全新的使用方式，应该说这才是未来的主流，也是平台目前推荐的用法。相关介绍可以参考这篇<span class="exturl" data-url="aHR0cHM6Ly93d3cuaWNvbmZvbnQuY24vaGVscC9kZXRhaWw/c3BtPWEzMTN4Ljc3ODEwNjkuMTk5ODkxMDQxOS4xNyZhbXA7aGVscHR5cGU9Y29kZQ==">文章</span> 这种用法其实是做了一个 svg 的集合，与上面两种相比具有如下特点：</p><ul><li>支持多色图标了，不再受单色限制。</li><li>通过一些技巧，支持像字体那样，通过 <code>font-size</code> , <code>color</code>  来调整样式。</li><li>兼容性较差，支持 ie9+, 及现代浏览器。</li><li>浏览器渲染 svg 的性能一般，还不如 png。</li></ul><p>使用步骤如下：</p><h3 id="第一步拷贝项目下面生成的symbol代码并引入如"><a class="anchor" href="#第一步拷贝项目下面生成的symbol代码并引入如">#</a> 第一步：拷贝项目下面生成的 symbol 代码并引入，如：</h3><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"//at.alicdn.com/t/font_1924059_pf56q7god8h.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr></table></figure><h3 id="第二步加入通用css代码引入一次就行"><a class="anchor" href="#第二步加入通用css代码引入一次就行">#</a> 第二步：加入通用 css 代码（引入一次就行）：</h3><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>style type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token punctuation">.</span>icon <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>       width<span class="token operator">:</span> <span class="token number">1</span>em<span class="token punctuation">;</span> height<span class="token operator">:</span> <span class="token number">1</span>em<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>       vertical<span class="token operator">-</span>align<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">0.15</span>em<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>       fill<span class="token operator">:</span> currentColor<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>       overflow<span class="token operator">:</span> hidden<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span></pre></td></tr></table></figure><h3 id="第三步挑选相应图标并获取类名应用于页面"><a class="anchor" href="#第三步挑选相应图标并获取类名应用于页面">#</a> 第三步：挑选相应图标并获取类名，应用于页面：</h3><figure class="highlight js"><figcaption data-lang="JavaScript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>svg <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"icon"</span> aria<span class="token operator">-</span>hidden<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token operator">&lt;</span>use xlink<span class="token operator">:</span>href<span class="token operator">=</span><span class="token string">"#icon-xxx"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>use<span class="token operator">></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>svg<span class="token operator">></span></pre></td></tr></table></figure><p><strong>如：</strong></p><figure class="highlight javascript"><figcaption data-lang="javascript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>svg <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"icon"</span> aria<span class="token operator">-</span>hidden<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre>   <span class="token operator">&lt;</span>use xlink<span class="token operator">:</span>href<span class="token operator">=</span><span class="token string">"#icon-zhifeiji1"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>use<span class="token operator">></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>svg<span class="token operator">></span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="Iconfont" scheme="http://yoursite.com/categories/Iconfont/"/>
    
    
      <category term="Iconfont" scheme="http://yoursite.com/tags/Iconfont/"/>
    
  </entry>
  
  <entry>
    <title>数据结构：队列</title>
    <link href="http://yoursite.com/2020/08/18/2020-08-18.2/"/>
    <id>http://yoursite.com/2020/08/18/2020-08-18.2/</id>
    <published>2020-08-18T13:32:52.536Z</published>
    <updated>2020-11-08T09:27:01.182Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><figure class="highlight c"><figcaption data-lang="c"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span> </span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string.h></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">//#ifndef SEQQUEUE_H</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">//#define SEQQUEUE_H</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token expression">MAX_SIZE <span class="token number">1024</span></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment">// 顺序队列数组结构 </span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment">//typedef 的作用：使声明变量时可以直接 SeqQueue seq1; 使 SeqQueue 相当于 struct SEQQUEUE </span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">SEQQUEUE</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">[</span>MAX_SIZE<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">int</span> size<span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token punctuation">&#125;</span>SeqQueue<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token comment">// 初始化</span></pre></td></tr><tr><td data-num="17"></td><td><pre>SeqQueue<span class="token operator">*</span> <span class="token function">Init_SeqQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>SeqQueue<span class="token operator">*</span> queue <span class="token operator">=</span> <span class="token punctuation">(</span>SeqQueue<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>SeqQueue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>MAX_SIZE<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre>queue<span class="token operator">-></span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre>queue<span class="token operator">-></span>size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">return</span> queue<span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token comment">// 入队</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token keyword">void</span> <span class="token function">Push_SeqQueue</span><span class="token punctuation">(</span>SeqQueue<span class="token operator">*</span> queue<span class="token punctuation">,</span><span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token comment">// 数组左边当做对头</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span>queue <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token keyword">return</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token punctuation">&#125;</span> </pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span>data <span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token keyword">return</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span>queue<span class="token operator">-></span>size <span class="token operator">==</span> MAX_SIZE<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token keyword">return</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>queue<span class="token operator">-></span>data<span class="token punctuation">[</span>queue<span class="token operator">-></span>size<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>queue<span class="token operator">-></span>size<span class="token operator">++</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token comment">// 返回对头元素</span></pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">Front_SeqQueue</span><span class="token punctuation">(</span>SeqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span>queue <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span>queue<span class="token operator">-></span>size <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="52"></td><td><pre><span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="54"></td><td><pre><span class="token keyword">return</span> queue<span class="token operator">-></span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token punctuation">&#125;</span> <span class="token punctuation">;</span></pre></td></tr><tr><td data-num="56"></td><td><pre></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token comment">// 出队</span></pre></td></tr><tr><td data-num="58"></td><td><pre><span class="token keyword">void</span> <span class="token function">Pop_SeqQueue</span><span class="token punctuation">(</span>SeqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="59"></td><td><pre></pre></td></tr><tr><td data-num="60"></td><td><pre></pre></td></tr><tr><td data-num="61"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span>queue <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="62"></td><td><pre><span class="token keyword">return</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="63"></td><td><pre><span class="token punctuation">&#125;</span> </pre></td></tr><tr><td data-num="64"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span>queue<span class="token operator">-></span>size<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="65"></td><td><pre><span class="token keyword">return</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="66"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="67"></td><td><pre><span class="token comment">// 需要移动元素</span></pre></td></tr><tr><td data-num="68"></td><td><pre><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>queue<span class="token operator">-></span>size<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>queue<span class="token operator">-></span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> queue<span class="token operator">-></span>data<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="70"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>queue<span class="token operator">-></span>size<span class="token operator">--</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="72"></td><td><pre></pre></td></tr><tr><td data-num="73"></td><td><pre><span class="token punctuation">&#125;</span> <span class="token punctuation">;</span></pre></td></tr><tr><td data-num="74"></td><td><pre></pre></td></tr><tr><td data-num="75"></td><td><pre><span class="token comment">// 返回队尾元素</span></pre></td></tr><tr><td data-num="76"></td><td><pre><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">Back_SeqQueue</span><span class="token punctuation">(</span>SeqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="77"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span>queue<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="78"></td><td><pre><span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="79"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="80"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span>queue<span class="token operator">-></span>size <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="81"></td><td><pre><span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="82"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="83"></td><td><pre></pre></td></tr><tr><td data-num="84"></td><td><pre><span class="token keyword">return</span> queue<span class="token operator">-></span>data<span class="token punctuation">[</span>queue<span class="token operator">-></span>size<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="85"></td><td><pre><span class="token punctuation">&#125;</span> <span class="token punctuation">;</span></pre></td></tr><tr><td data-num="86"></td><td><pre></pre></td></tr><tr><td data-num="87"></td><td><pre></pre></td></tr><tr><td data-num="88"></td><td><pre><span class="token comment">// 返回大小</span></pre></td></tr><tr><td data-num="89"></td><td><pre><span class="token keyword">int</span> <span class="token function">Size_SeqQueue</span><span class="token punctuation">(</span>SeqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="90"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span>queue <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="91"></td><td><pre><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="92"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="93"></td><td><pre><span class="token keyword">return</span> queue<span class="token operator">-></span>size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="94"></td><td><pre><span class="token punctuation">&#125;</span> <span class="token punctuation">;</span></pre></td></tr><tr><td data-num="95"></td><td><pre></pre></td></tr><tr><td data-num="96"></td><td><pre><span class="token comment">// 清空队列</span></pre></td></tr><tr><td data-num="97"></td><td><pre><span class="token keyword">void</span> <span class="token function">Clear_SeqQueue</span><span class="token punctuation">(</span>SeqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="98"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span>queue <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="99"></td><td><pre><span class="token keyword">return</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="100"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="101"></td><td><pre>queue<span class="token operator">-></span>size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="102"></td><td><pre></pre></td></tr><tr><td data-num="103"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="104"></td><td><pre></pre></td></tr><tr><td data-num="105"></td><td><pre><span class="token comment">// 销毁队列</span></pre></td></tr><tr><td data-num="106"></td><td><pre><span class="token keyword">void</span> <span class="token function">FreeSpace_SeqQueue</span><span class="token punctuation">(</span>SeqQueue<span class="token operator">*</span> queue<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="107"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span>queue <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="108"></td><td><pre><span class="token keyword">return</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="109"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="110"></td><td><pre><span class="token function">free</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="111"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="112"></td><td><pre> </pre></td></tr><tr><td data-num="113"></td><td><pre> </pre></td></tr><tr><td data-num="114"></td><td><pre><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">PERSON</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="115"></td><td><pre><span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="116"></td><td><pre><span class="token keyword">int</span> age<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="117"></td><td><pre><span class="token punctuation">&#125;</span>Person<span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="118"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="119"></td><td><pre></pre></td></tr><tr><td data-num="120"></td><td><pre><span class="token comment">// 创建队列</span></pre></td></tr><tr><td data-num="121"></td><td><pre>SeqQueue<span class="token operator">*</span> queue <span class="token operator">=</span> <span class="token function">Init_SeqQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="122"></td><td><pre></pre></td></tr><tr><td data-num="123"></td><td><pre><span class="token comment">// 创建数据</span></pre></td></tr><tr><td data-num="124"></td><td><pre> Person p1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"aaa"</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="125"></td><td><pre> Person p2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"bbb"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="126"></td><td><pre> Person p3 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"ccc"</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="127"></td><td><pre> Person p4 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"ddd"</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="128"></td><td><pre> Person p5 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"eee"</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="129"></td><td><pre> </pre></td></tr><tr><td data-num="130"></td><td><pre> <span class="token comment">// 数据入队列</span></pre></td></tr><tr><td data-num="131"></td><td><pre> <span class="token function">Push_SeqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span><span class="token operator">&amp;</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="132"></td><td><pre> <span class="token function">Push_SeqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span><span class="token operator">&amp;</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="133"></td><td><pre> <span class="token function">Push_SeqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span><span class="token operator">&amp;</span>p3<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="134"></td><td><pre> <span class="token function">Push_SeqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span><span class="token operator">&amp;</span>p4<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="135"></td><td><pre> <span class="token function">Push_SeqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span><span class="token operator">&amp;</span>p5<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="136"></td><td><pre> </pre></td></tr><tr><td data-num="137"></td><td><pre> </pre></td></tr><tr><td data-num="138"></td><td><pre> <span class="token comment">// 输出队尾元素</span></pre></td></tr><tr><td data-num="139"></td><td><pre> Person<span class="token operator">*</span> backPerson <span class="token operator">=</span> <span class="token punctuation">(</span>Person<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">Back_SeqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="140"></td><td><pre> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Name:%s Age:%d\n"</span><span class="token punctuation">,</span>backPerson<span class="token operator">-></span>name<span class="token punctuation">,</span>backPerson<span class="token operator">-></span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="141"></td><td><pre> </pre></td></tr><tr><td data-num="142"></td><td><pre> <span class="token comment">// 输出</span></pre></td></tr><tr><td data-num="143"></td><td><pre> <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">Size_SeqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="144"></td><td><pre> <span class="token comment">// 取出队头元素 </span></pre></td></tr><tr><td data-num="145"></td><td><pre> Person<span class="token operator">*</span> p <span class="token operator">=</span> <span class="token punctuation">(</span>Person<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">Front_SeqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="146"></td><td><pre> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Name:%s Age:%d\n"</span><span class="token punctuation">,</span>p<span class="token operator">-></span>name<span class="token punctuation">,</span>p<span class="token operator">-></span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="147"></td><td><pre> <span class="token comment">// 从队头弹出元素</span></pre></td></tr><tr><td data-num="148"></td><td><pre><span class="token function">Pop_SeqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="149"></td><td><pre> <span class="token punctuation">&#125;</span> </pre></td></tr><tr><td data-num="150"></td><td><pre> </pre></td></tr><tr><td data-num="151"></td><td><pre></pre></td></tr><tr><td data-num="152"></td><td><pre><span class="token function">FreeSpace_SeqQueue</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="153"></td><td><pre></pre></td></tr><tr><td data-num="154"></td><td><pre> </pre></td></tr><tr><td data-num="155"></td><td><pre> </pre></td></tr><tr><td data-num="156"></td><td><pre> </pre></td></tr><tr><td data-num="157"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="队列" scheme="http://yoursite.com/tags/%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>C语言笔记：.和-&gt;的区别和typedef使用</title>
    <link href="http://yoursite.com/2020/08/18/2020-08-18.1/"/>
    <id>http://yoursite.com/2020/08/18/2020-08-18.1/</id>
    <published>2020-08-18T11:15:12.789Z</published>
    <updated>2020-11-12T16:01:55.831Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><h1 id="使用结构体时常用到的运算符与箭头运算符-的区别"><a class="anchor" href="#使用结构体时常用到的运算符与箭头运算符-的区别">#</a> 使用结构体时常用到的。运算符与箭头运算符 -&gt; 的区别</h1><h2 id="点运算符左边是一个结构体-左边是一个结构体指针"><a class="anchor" href="#点运算符左边是一个结构体-左边是一个结构体指针">#</a> 点运算符（.）左边是一个结构体，-&gt; 左边是一个结构体指针</h2><p><strong>例如：</strong></p><figure class="highlight c"><figcaption data-lang="c"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">PERSON</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">int</span> age<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span>Per<span class="token punctuation">,</span>Person<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">// 因为有 typedef，于是在声明变量的时候就可：Per stu1; 或者：Person stu2;(Per 和 Person 同时为 Student 的别名)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">// 否则只能用 struct PERSON 变量名；来声明</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment">//b->age=17 === (*b).age = 17; 为了使用方便和直观，c 语言允许用 b->age 代替 (*b).age</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    </pre></td></tr><tr><td data-num="11"></td><td><pre>Per a<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"Jack"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>Person<span class="token operator">*</span> b<span class="token operator">=</span><span class="token operator">&amp;</span>a<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"a:%s,%d\n"</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span>name<span class="token punctuation">,</span>a<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//Jack 20</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment">// 巨坑：注意这里 a.name="jack", 和 b->name="Jack" 等都是不可以的，</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token comment">// 不能单独给字符串数组赋值，可以在定义的时候就赋值，或者用</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token comment">//strcpy (数组名，“...”) 方法赋值 </span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment">//b->name = "Bob"; 报错 </span></pre></td></tr><tr><td data-num="18"></td><td><pre>b<span class="token operator">-></span>age <span class="token operator">=</span> <span class="token number">17</span><span class="token punctuation">;</span>     <span class="token comment">//(*b).age = 17;</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"a:%s,%d\nb:%s,%d"</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span>name<span class="token punctuation">,</span>a<span class="token punctuation">.</span>age<span class="token punctuation">,</span>b<span class="token operator">-></span>name<span class="token punctuation">,</span>b<span class="token operator">-></span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Jack 17  Jack  17</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="C程序设计" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="-&gt; 结构体指针" scheme="http://yoursite.com/tags/%E7%BB%93%E6%9E%84%E4%BD%93%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>C语言笔记：函数指针(函数传递)</title>
    <link href="http://yoursite.com/2020/08/15/2020-08-15.2/"/>
    <id>http://yoursite.com/2020/08/15/2020-08-15.2/</id>
    <published>2020-08-15T06:14:10.150Z</published>
    <updated>2020-11-12T16:01:36.394Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><p><strong>重要理解：</strong></p><figure class="highlight c"><figcaption data-lang="c"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">// 函数声明 </span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">double</span> <span class="token function">getAverage</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>arr<span class="token punctuation">,</span><span class="token keyword">int</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">double</span> <span class="token function">getAverage2</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>arr<span class="token punctuation">,</span><span class="token keyword">int</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">//int *intt;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment">//int num = 4;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment">//intt = &amp;num</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token comment">//intt 是地址，*intt 是值 </span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token comment">// 千万注意：arr 是地址，*arr 和 arr [i] 是值 </span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">int</span> balance<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">double</span> avg<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>avg <span class="token operator">=</span> <span class="token function">getAverage</span><span class="token punctuation">(</span>balance<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token comment">//avg = getAverage2(balance,5);</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%f"</span><span class="token punctuation">,</span>avg<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>balance<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//1 2 3 4</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token punctuation">&#125;</span> </pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token comment">// 函数 1 </span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">double</span> <span class="token function">getAverage</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>arr<span class="token punctuation">,</span><span class="token keyword">int</span> size<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token keyword">int</span> i<span class="token punctuation">,</span>sum <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token keyword">double</span> avg<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>size<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token punctuation">&#123;</span><span class="token comment">// 不可 * arr [i],* 取值符，取值符与地址搭配得到值，arr 是个地址值，所以 * arr 可以，但 arr [i] 是个数值，所以不行</span></pre></td></tr><tr><td data-num="32"></td><td><pre>sum <span class="token operator">+=</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 千万注意：arr 是地址，*arr 和 arr [i] 是值</span></pre></td></tr><tr><td data-num="33"></td><td><pre>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token comment">//printf("%d\n",arr[i]);</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>avg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>sum<span class="token operator">/</span>size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token keyword">return</span> avg<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="39"></td><td><pre></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token comment">// 函数 2 </span></pre></td></tr><tr><td data-num="41"></td><td><pre><span class="token keyword">double</span> <span class="token function">getAverage2</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>arr<span class="token punctuation">,</span><span class="token keyword">int</span> size<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="43"></td><td><pre><span class="token keyword">int</span> i<span class="token punctuation">,</span>sum <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token keyword">double</span> avg<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>size<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token punctuation">&#123;</span><span class="token comment">// 不可 * arr [i],* 取值符，取值符与地址搭配得到值，arr 是个地址值，所以 * arr 可以，但 arr [i] 是个数值，所以不行</span></pre></td></tr><tr><td data-num="47"></td><td><pre>sum <span class="token operator">+=</span><span class="token operator">*</span>arr<span class="token punctuation">;</span><span class="token comment">// 千万注意：arr 是地址，*arr 和 arr [i] 是值</span></pre></td></tr><tr><td data-num="48"></td><td><pre>arr<span class="token operator">++</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>avg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>sum<span class="token operator">/</span>size<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token keyword">return</span> avg<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="52"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p><strong>结构体值传递：</strong></p><figure class="highlight c"><figcaption data-lang="c"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">// 定义 Dog 结构体</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">struct</span> <span class="token class-name">Dog</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">int</span> age<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">double</span> weight<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token comment">// 函数声明 </span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">char</span><span class="token operator">*</span> <span class="token function">say</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Dog</span> dog<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token comment">//say 函数定义，返回字符串，信息中包含所有成员值 </span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token keyword">char</span><span class="token operator">*</span> <span class="token function">say</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Dog</span> dog<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token comment">// 为防止局部变量被销毁，要用 static 修饰</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token keyword">static</span> <span class="token keyword">char</span> info<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>dog<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"小花"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token function">sprintf</span><span class="token punctuation">(</span>info<span class="token punctuation">,</span><span class="token string">"name=%s age=%d weight=%.2f"</span><span class="token punctuation">,</span>dog<span class="token punctuation">.</span>name<span class="token punctuation">,</span>dog<span class="token punctuation">.</span>age<span class="token punctuation">,</span>dog<span class="token punctuation">.</span>weight<span class="token punctuation">)</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token keyword">return</span> info<span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="24"></td><td><pre> </pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token punctuation">&#125;</span> </pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token comment">// 定义结构体</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token keyword">struct</span> <span class="token class-name">Dog</span> dog<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token keyword">char</span><span class="token operator">*</span> info <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>dog<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"小黄"</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="32"></td><td><pre>dog<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>dog<span class="token punctuation">.</span>weight <span class="token operator">=</span> <span class="token number">3.4</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>info <span class="token operator">=</span> <span class="token function">say</span><span class="token punctuation">(</span>dog<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 结构体变量默认是值传递</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n小狗信息=%s"</span><span class="token punctuation">,</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n main 小狗名字=%s"</span><span class="token punctuation">,</span>dog<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p><strong>传递结构体指针：</strong></p><figure class="highlight c"><figcaption data-lang="c"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string.h></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">/*</pre></td></tr><tr><td data-num="4"></td><td><pre>1. 一个景区根据有人的年龄收取不同价格的门票</pre></td></tr><tr><td data-num="5"></td><td><pre>2. 请编写有人结构体（Visitor），根据不同年龄收费不同</pre></td></tr><tr><td data-num="6"></td><td><pre>3. 规则：年龄 > 20 门票 20 元，其余免费</pre></td></tr><tr><td data-num="7"></td><td><pre>4. 可以循环从控制台输入名字和年龄，打印门票收费情况，如果名字输入 n，则退出程序</pre></td></tr><tr><td data-num="8"></td><td><pre> </pre></td></tr><tr><td data-num="9"></td><td><pre>*/</span> </pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token comment">// 定义结构体</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">struct</span> <span class="token class-name">Visitor</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">char</span> name<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">int</span> age<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">double</span> pay<span class="token punctuation">;</span> <span class="token comment">// 应付票价 </span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token comment">// 编写函数处理数据</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token comment">// 说明：结构体是值传递，会赋值一份传递过去，效率较低</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token comment">// 为了提高效率，直接传递指针</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token keyword">void</span> <span class="token function">ticket</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">Visitor</span><span class="token operator">*</span> visitor<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token comment">// 注意：visitor 是结构体地址，*visitor 才是值 </span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>visitor<span class="token punctuation">)</span><span class="token punctuation">.</span>age<span class="token operator">>=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token punctuation">(</span><span class="token operator">*</span>visitor<span class="token punctuation">)</span><span class="token punctuation">.</span>pay <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token punctuation">(</span><span class="token operator">*</span>visitor<span class="token punctuation">)</span><span class="token punctuation">.</span>pay <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token punctuation">&#125;</span> </pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token comment">// 创建结构体变量</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token keyword">struct</span> <span class="token class-name">Visitor</span> visitor<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token comment">// 循环输入名字和年龄</span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n注意：姓名输入n则退出程序"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n请输入游客名字："</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span>visitor<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre></pre></td></tr><tr><td data-num="41"></td><td><pre><span class="token comment">// 判断如果名字输入为 n 就退出，strcmp ("n",visitor.name) 比较相等的话会返回 0 </span></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">strcmp</span><span class="token punctuation">(</span><span class="token string">"n"</span><span class="token punctuation">,</span>visitor<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="43"></td><td><pre><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n退出程序"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="46"></td><td><pre> </pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n请输入游客年龄："</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>visitor<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre> </pre></td></tr><tr><td data-num="50"></td><td><pre> <span class="token comment">// 调用函数 ticket 函数</span></pre></td></tr><tr><td data-num="51"></td><td><pre> <span class="token function">ticket</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>visitor<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="52"></td><td><pre> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n姓名：%s 年龄：%d  票价：%f"</span><span class="token punctuation">,</span>visitor<span class="token punctuation">.</span>name<span class="token punctuation">,</span>visitor<span class="token punctuation">.</span>age<span class="token punctuation">,</span>visitor<span class="token punctuation">.</span>pay<span class="token punctuation">)</span><span class="token punctuation">;</span> </pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token punctuation">&#125;</span> </pre></td></tr><tr><td data-num="54"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="C程序设计" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="函数指针" scheme="http://yoursite.com/tags/%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>C语言笔记：字符串指针输出疑解</title>
    <link href="http://yoursite.com/2020/08/15/2020-08-15.1/"/>
    <id>http://yoursite.com/2020/08/15/2020-08-15.1/</id>
    <published>2020-08-15T06:04:14.825Z</published>
    <updated>2020-11-08T09:27:17.318Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><p><img data-src="https://cdn.jsdelivr.net/gh/lanQing-Song/blogimages/QQ%E6%88%AA%E5%9B%BE20200810214422.png" alt="" /></p><p>又如：</p><figure class="highlight c"><figcaption data-lang="c"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 字符串赋值给指针变量时，是将字符串的首个字符地址赋给</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">char</span><span class="token operator">*</span> string <span class="token operator">=</span> <span class="token string">"i am a student"</span><span class="token punctuation">;</span><span class="token comment">// 或 char* string; string = "i am a student"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s\n"</span><span class="token punctuation">,</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 理解：为什么不是 * string？</span></pre></td></tr></table></figure><p><strong>解答：</strong></p><p>% s 是输出字符串时所用的格式符，在输出项中给出字符指针变量名 string，** 则系统会输出 string 所指向的字符串第一个字符，然后自动使 string+1，使之指向下一个字符，再输出该字符...... 如此直到遇到字符串结束标志‘\0’为止。** 注意：再内存中，字符串最后被自动加了 '\0'。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="http://yoursite.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="字符串指针" scheme="http://yoursite.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>CSS笔记：常用知识点</title>
    <link href="http://yoursite.com/2020/08/07/2020-08-07.3/"/>
    <id>http://yoursite.com/2020/08/07/2020-08-07.3/</id>
    <published>2020-08-07T14:10:38.626Z</published>
    <updated>2020-11-12T15:54:33.207Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><p>参考文章：<span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC82ODQ0OTAzOTYyNTI5NzU5MjM5">https://juejin.im/post/6844903962529759239</span></p><h1 id="一-元素水平居中的方案"><a class="anchor" href="#一-元素水平居中的方案">#</a> 一、元素水平居中的方案</h1><h2 id="1-对于行内元素text-aligncenter"><a class="anchor" href="#1-对于行内元素text-aligncenter">#</a> 1、对于<strong>行内元素</strong>： <code>text-align:center;</code></h2><h2 id="2-对于确定宽度的块级元素"><a class="anchor" href="#2-对于确定宽度的块级元素">#</a> 2、对于确定宽度的块级元素：</h2><ul><li>(1)) 用 width 和 margin 实现： <code>margin:0  auto;</code></li><li>(2) 子绝父相，再给子元素 <code>left:50%;margin-left:-自身宽度一半</code></li></ul><h2 id="3-对于宽度无知的块级元素"><a class="anchor" href="#3-对于宽度无知的块级元素">#</a> 3、对于宽度无知的块级元素</h2><ul><li>(1)) 将该块级元素 <code>display:table;margin:0 auto;</code></li><li>(2)) 将子元素 <code>display:inline-block;</code> , 再给父元素添加 <code>text-align:center</code></li><li>(3) 子绝父相，再给子元素来 <code>left:50%;  transform:translateX(-50%)(移动自身50%)</code></li><li>(4) 给父元素 <code>display:flex;  justify-content:center</code> , 子元素自然居中</li></ul><h1 id="二-垂直居中"><a class="anchor" href="#二-垂直居中">#</a> 二、垂直居中</h1><ul><li>(1) 父元素高度不写死，自接给个上下内边距让子元素居中</li><li>(2) 父子都已确定高度，再子绝父相，再给子元素 <code>top:50%;transform：translateX(-50%)</code>  注意父元素高度要确定，不然子元素绝对定位脱离文档流，导致父元素高度坍塌</li><li>(3) 给父元素 <code>display:flex; </code> , 子元素 <code>margin：auto（水平垂直居中）margin：auto 0(垂直居中)</code></li><li>(4) table 标签内的 td 标签里的内容默认垂直居中，缺点是子元素会占满整个父元素。</li><li>(5) 将 div 改造成表单，给父元素添加 <code>display:table</code>  子元素 <code>display:table-cell  vertical-align:middle</code> , 这样子元素的内容物就会垂直居中，缺点是子元素会占满整个父元素。</li></ul><h1 id="三-选择器分类"><a class="anchor" href="#三-选择器分类">#</a> 三、选择器分类</h1><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token important">!important</span>>行内样式>ID选择器>类、伪类、属性>元素、伪元素>继承>通配符</pre></td></tr></table></figure><h2 id="通配符选择器"><a class="anchor" href="#通配符选择器">#</a> 通配符选择器</h2><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token selector">*</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token property">margin</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token property">padding</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="标签元素选择器"><a class="anchor" href="#标签元素选择器">#</a> 标签（元素）选择器</h2><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token selector">p</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="类选择器"><a class="anchor" href="#类选择器">#</a> 类选择器</h2><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token selector">.warning</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="id选择器"><a class="anchor" href="#id选择器">#</a> ID 选择器</h2><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token selector">#warning</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="属性选择器"><a class="anchor" href="#属性选择器">#</a> 属性选择器</h2><blockquote><p>例子</p><table><thead><tr><th>a[src^=&quot;https&quot;]</th><th>选择其 src 属性值以 &quot;https&quot; 开头的每个 <a> 元素。</th></tr></thead><tbody><tr><td>[target]</td><td>选择带有 target 属性所有元素。</td></tr></tbody></table></blockquote><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">foo</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc efj<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abcefj<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>efjabc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><ul><li>[attribute（属性）]</li></ul><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token selector">//选择所有带有foo属性的标签</pre></td></tr><tr><td data-num="2"></td><td><pre>[foo]</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><ul><li>[attribute=value]</li></ul><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token selector">//选择foo=abc的标签</pre></td></tr><tr><td data-num="2"></td><td><pre>[foo=value]</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><ul><li>[attribute~=value]</li></ul><blockquote><p>选择 attribute 属性包含单词 value 的所有元素。</p></blockquote><ul><li>[attribute^=value]</li></ul><blockquote><p>选择其 attribute 属性值以 value 开头的所有元素</p></blockquote><ul><li>[attribute$=value]</li></ul><blockquote><p>选择 attribute 属性值以 value 结束的所有元素</p></blockquote><ul><li>[attribute*=value]</li></ul><blockquote><p>选择其 attribute 属性包含 value 子串的每个元素</p></blockquote><ul><li>[attribute|=value]</li></ul><blockquote><p>选择 attribute 属性值以 value 开头的所有元素</p></blockquote><h2 id="文档结构选择器"><a class="anchor" href="#文档结构选择器">#</a> 文档结构选择器</h2><table><thead><tr><th><a href="https://www.w3school.com.cn/cssref/selector_element_comma.asp"><em>element</em>,<em>element</em></a> 并集选择器</th><th>div,p</th><th>选择所有 <div> 元素和所有 <p> 元素。</th><th>1</th></tr></thead><tbody><tr><td><a href="https://www.w3school.com.cn/cssref/selector_element_element.asp"><em>element</em> <em>element</em></a> 后代选择器</td><td>div p</td><td>选择 <div> 元素内部的所有 <p> 元素。</td><td>1</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/selector_element_gt.asp"><em>element</em>&gt;<em>element</em></a> 子代选择器</td><td>div&gt;p</td><td>选择父元素为 <div> 元素的所有 <p> 元素。</td><td>2</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/selector_element_plus.asp"><em>element</em>+<em>element</em></a> 相邻兄弟选择器</td><td>div+p</td><td>选择紧接在 <div> 元素之后的所有 <p> 元素。</td><td>2</td></tr></tbody></table><h2 id="伪类选择器"><a class="anchor" href="#伪类选择器">#</a> 伪类选择器</h2><ul><li>：root 文档根元素伪类</li></ul><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token selector">:root</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><ul><li>:nth-child (n) 孩子选择器</li><li>:nth-of-type (n) 同类型的第 n 个选择器</li><li>element:fitst-child</li></ul><blockquote><p>选择属于父元素 element 的第一个子元素。 等同 :nth-child (1)</p></blockquote><ul><li><p>element:last-of-type</p></li><li><p>element:only-child</p></li></ul><blockquote><p>选择了父元素 element 唯一的子元素</p></blockquote><p>示例：</p><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token selector">&lt;div></pre></td></tr><tr><td data-num="2"></td><td><pre>    &lt;h1>h1&lt;/h1></pre></td></tr><tr><td data-num="3"></td><td><pre>    &lt;p>p1&lt;/p></pre></td></tr><tr><td data-num="4"></td><td><pre>    &lt;p>p2&lt;/p></pre></td></tr><tr><td data-num="5"></td><td><pre>    &lt;p>p3&lt;/p></pre></td></tr><tr><td data-num="6"></td><td><pre>&lt;/div></pre></td></tr><tr><td data-num="7"></td><td><pre>&lt;div></pre></td></tr><tr><td data-num="8"></td><td><pre>    &lt;h1>h2&lt;/h1>  //变红</pre></td></tr><tr><td data-num="9"></td><td><pre>&lt;/div></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre> div :only-child</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre> <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><ul><li>:empty 没有子元素包括文本节点</li><li>:nth-last-child (n) 倒数第 n 个子元素</li><li>element:nth-last-of-type (n) 同类型的倒数第 n 个子元素</li><li>element:only-of-type 父元素里唯一同类型子元素</li></ul><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token selector">&lt;!DOCTYPE html></pre></td></tr><tr><td data-num="2"></td><td><pre>&lt;html></pre></td></tr><tr><td data-num="3"></td><td><pre>&lt;head></pre></td></tr><tr><td data-num="4"></td><td><pre>&lt;style> </pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>div h1:only-of-type</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>&lt;/style></pre></td></tr><tr><td data-num="11"></td><td><pre>&lt;/head></pre></td></tr><tr><td data-num="12"></td><td><pre>&lt;body></pre></td></tr><tr><td data-num="13"></td><td><pre>&lt;div></pre></td></tr><tr><td data-num="14"></td><td><pre>    &lt;h1>h1&lt;/h1></pre></td></tr><tr><td data-num="15"></td><td><pre>    &lt;p>p1&lt;/p></pre></td></tr><tr><td data-num="16"></td><td><pre>    &lt;p>p2&lt;/p></pre></td></tr><tr><td data-num="17"></td><td><pre>    &lt;p>p3&lt;/p></pre></td></tr><tr><td data-num="18"></td><td><pre>    &lt;h1>h1&lt;/h1></pre></td></tr><tr><td data-num="19"></td><td><pre>&lt;/div></pre></td></tr><tr><td data-num="20"></td><td><pre>&lt;div></pre></td></tr><tr><td data-num="21"></td><td><pre>    &lt;h1>h2&lt;/h1>  //被选中</pre></td></tr><tr><td data-num="22"></td><td><pre>&lt;/div></pre></td></tr><tr><td data-num="23"></td><td><pre>&lt;/body></pre></td></tr><tr><td data-num="24"></td><td><pre>&lt;/html></pre></td></tr></table></figure><ul><li>a:active 链接正在被点击</li><li>a:hover 鼠标指针位于其上的链接</li><li>a:visited 被访问过的链接</li><li>:focus  用于选取获得焦点的元素</li><li>:enabled/:disabled 选择每个启用的 input 元素 / 选择每个禁用的 input 元素</li><li>:checked 选择每个被选择的 input 元素。自定义开关可以用这个实现</li><li>:not (selector) 选择分 selector 元素的每个元素（反向选择）</li></ul><h2 id="伪元素选择器"><a class="anchor" href="#伪元素选择器">#</a> 伪元素选择器</h2><ul><li>element:first-line</li></ul><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token selector">&lt;!DOCTYPE html></pre></td></tr><tr><td data-num="2"></td><td><pre>&lt;html></pre></td></tr><tr><td data-num="3"></td><td><pre>&lt;head></pre></td></tr><tr><td data-num="4"></td><td><pre>&lt;style></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>p:first-line</span><span class="token punctuation">&#123;</span>  //第一行文字发生改变</pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token property">background-color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>&lt;/style></pre></td></tr><tr><td data-num="11"></td><td><pre>&lt;/head></pre></td></tr><tr><td data-num="12"></td><td><pre>&lt;body></pre></td></tr><tr><td data-num="13"></td><td><pre>&lt;h1>WWF's Mission Statement&lt;/h1></pre></td></tr><tr><td data-num="14"></td><td><pre>&lt;p>To stop the degradation of the planet<span class="token string">'s natural environment and to build a future in which humans live in harmony with nature, by; conserving the world'</span>s biological diversity<span class="token punctuation">,</span> ensuring that the use of renewable natural resources is sustainable<span class="token punctuation">,</span> and promoting the reduction of pollution and wasteful consumption.&lt;/p></pre></td></tr><tr><td data-num="15"></td><td><pre>&lt;/body></pre></td></tr><tr><td data-num="16"></td><td><pre>&lt;/html></pre></td></tr></table></figure><ul><li>element:fitst-letter</li></ul><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token selector">&lt;!DOCTYPE html></pre></td></tr><tr><td data-num="2"></td><td><pre>&lt;html></pre></td></tr><tr><td data-num="3"></td><td><pre>&lt;head></pre></td></tr><tr><td data-num="4"></td><td><pre>&lt;style></pre></td></tr><tr><td data-num="5"></td><td><pre>h1:first-letter</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token property">color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>&lt;/style></pre></td></tr><tr><td data-num="9"></td><td><pre>&lt;/head></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>&lt;body></pre></td></tr><tr><td data-num="12"></td><td><pre>&lt;h1>WWF's Mission Statement&lt;/h1>   //第一个字发生改变</pre></td></tr><tr><td data-num="13"></td><td><pre>&lt;/body></pre></td></tr><tr><td data-num="14"></td><td><pre>&lt;/html></pre></td></tr></table></figure><ul><li>element:before  在元素的内容前面插入内容</li></ul><figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token selector">h1:before</span> </pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token property">content</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>smiley.gif<span class="token punctuation">)</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><ul><li><p>element:after  在元素的内容后面插入内容</p></li><li><p>:selector  选择被用户选取的元素部分</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="CSS" scheme="http://yoursite.com/categories/css/"/>
    
    
      <category term="CSS常用知识点" scheme="http://yoursite.com/tags/CSS%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>JS笔记：原生轮播图move函数</title>
    <link href="http://yoursite.com/2020/08/07/2020-08-07.2/"/>
    <id>http://yoursite.com/2020/08/07/2020-08-07.2/</id>
    <published>2020-08-07T13:25:15.382Z</published>
    <updated>2020-11-12T15:53:49.172Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><figure class="highlight javascript"><figcaption data-lang="javascript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">/*</pre></td></tr><tr><td data-num="2"></td><td><pre>        参数：</pre></td></tr><tr><td data-num="3"></td><td><pre>            obj：要移动的对象</pre></td></tr><tr><td data-num="4"></td><td><pre>            attr: 样式，如：left right top 等等</pre></td></tr><tr><td data-num="5"></td><td><pre>            target：目标位置</pre></td></tr><tr><td data-num="6"></td><td><pre>            speed：每次移动的距离</pre></td></tr><tr><td data-num="7"></td><td><pre>            itemtime: 定时器调用的间隔时间</pre></td></tr><tr><td data-num="8"></td><td><pre>            callback: 回调函数，使其无线可能，在动画执行完毕后执行   (可传可不传)</pre></td></tr><tr><td data-num="9"></td><td><pre>            如：move (obj,left,target,speed,function ()&#123;</pre></td></tr><tr><td data-num="10"></td><td><pre>                move (obj,right,target,speed,function ()&#123;</pre></td></tr><tr><td data-num="11"></td><td><pre>                    move (obj,right,target,speed)</pre></td></tr><tr><td data-num="12"></td><td><pre>                &#125;)</pre></td></tr><tr><td data-num="13"></td><td><pre>            &#125;)</pre></td></tr><tr><td data-num="14"></td><td><pre>    */</span> </pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">function</span> <span class="token function">move</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span>attr<span class="token punctuation">,</span>target<span class="token punctuation">,</span>speed<span class="token punctuation">,</span>itemtime<span class="token punctuation">,</span>callback</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token comment">// 注意点：如果定时器关闭前又被打开，定时器效果会叠加，所以每次打开要关闭之前的定时器</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token function">clearInterval</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>intervalId<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token comment">// 获取对象当前的位置</span></pre></td></tr><tr><td data-num="21"></td><td><pre>         <span class="token keyword">var</span> current <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token function">getStyle</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span>attr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>         <span class="token comment">// 根据当前对象的位置与目标位置来判断要向左还是向右移动</span></pre></td></tr><tr><td data-num="24"></td><td><pre>         <span class="token keyword">if</span><span class="token punctuation">(</span>current<span class="token operator">></span>target<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token comment">// 向左</span></pre></td></tr><tr><td data-num="25"></td><td><pre>             speed <span class="token operator">=</span> <span class="token operator">-</span>speed<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>         <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token comment">//  开启私人（防止多人时冲突）定时器，使对象移动</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        obj<span class="token punctuation">.</span>intervalId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>            <span class="token comment">// 获取当前元素的有效位置</span></pre></td></tr><tr><td data-num="31"></td><td><pre>            <span class="token keyword">var</span> oldValue <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token function">getStyle</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span>attr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token comment">// 在旧值的基础上加上每次移动的距离</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token keyword">var</span> newValue <span class="token operator">=</span> oldValue <span class="token operator">+</span> speed</pre></td></tr><tr><td data-num="35"></td><td><pre></pre></td></tr><tr><td data-num="36"></td><td><pre>            <span class="token comment">// 判断元素移动的方向和防止元素移动的距离超出目标距离</span></pre></td></tr><tr><td data-num="37"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>speed<span class="token operator">&lt;</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> newValue<span class="token operator">&lt;</span>target<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>speed<span class="token operator">></span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> newValue<span class="token operator">></span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                newValue <span class="token operator">=</span> target<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="40"></td><td><pre></pre></td></tr><tr><td data-num="41"></td><td><pre>            <span class="token comment">// 将新值赋给元素</span></pre></td></tr><tr><td data-num="42"></td><td><pre>            obj<span class="token punctuation">.</span>style<span class="token punctuation">[</span>attr<span class="token punctuation">]</span> <span class="token operator">=</span> newValue <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre></pre></td></tr><tr><td data-num="44"></td><td><pre>            <span class="token comment">// 到达目标关闭定时器</span></pre></td></tr><tr><td data-num="45"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span>newValue <span class="token operator">===</span> target<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                </pre></td></tr><tr><td data-num="47"></td><td><pre>                <span class="token function">clearInterval</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>intervalId<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre></pre></td></tr><tr><td data-num="49"></td><td><pre>                <span class="token comment">// 关键：动画执行完毕之后执行回调函数 (可无限套娃) ,&amp;&amp; 作用：参数给不给这个回调函数都没关系</span></pre></td></tr><tr><td data-num="50"></td><td><pre>                callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> itemtime<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="54"></td><td><pre></pre></td></tr><tr><td data-num="55"></td><td><pre>    </pre></td></tr><tr><td data-num="56"></td><td><pre>    <span class="token comment">// 读取元素当前（浏览器中显示的）样式的方法（关键）</span></pre></td></tr><tr><td data-num="57"></td><td><pre>    <span class="token comment">// 注意：getComputerStyle () 和 currentStyle 获取到的样式都是只读的，不能修改</span></pre></td></tr><tr><td data-num="58"></td><td><pre>    <span class="token comment">//      如果想修改，要通过 style 属性</span></pre></td></tr><tr><td data-num="59"></td><td><pre>    <span class="token comment">/*</pre></td></tr><tr><td data-num="60"></td><td><pre>        可以使用 getComputerStyle (参数 1，参数 2)，方法，这个方法是 window 的，可以直接使用</pre></td></tr><tr><td data-num="61"></td><td><pre>        参数 1：要获取样式的元素</pre></td></tr><tr><td data-num="62"></td><td><pre>        参数 2：可以传递一个伪元素，一般都传 null</pre></td></tr><tr><td data-num="63"></td><td><pre>        ** 该方法会返回一个对象，对象中封装了当前元素对应的样式</pre></td></tr><tr><td data-num="64"></td><td><pre>            可以通过对象。样式名来读取样式</pre></td></tr><tr><td data-num="65"></td><td><pre>            如果获取的样式没有设置，则会返回该样式在浏览器中显示的真实值，而不是返回一个 auto</pre></td></tr><tr><td data-num="66"></td><td><pre>            比如：没有设置 width 样式，则返回浏览器中真实的 width 宽度，而不是 auto</pre></td></tr><tr><td data-num="67"></td><td><pre>    */</span></pre></td></tr><tr><td data-num="68"></td><td><pre>    <span class="token keyword">function</span> <span class="token function">getStyle</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span>name</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">// 注意：为兼容 IE8，此处 window 不能省，使 getComputerStyle 变成一个属性，而不是变量</span></pre></td></tr><tr><td data-num="69"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>getComputedStyle<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>            <span class="token comment">// 正常浏览器的方式，都具有 getComputerStyle () 方法，getComputerStyle () 是 window 的方法，可以直接使用</span></pre></td></tr><tr><td data-num="71"></td><td><pre>            <span class="token comment">// 注意此处不能 return getComputedStyle (obj,null).name, 这样的话 name 会写死，获取到样式名，而不是样式</span></pre></td></tr><tr><td data-num="72"></td><td><pre>            <span class="token keyword">return</span> <span class="token function">getComputedStyle</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>            <span class="token comment">// 兼容 IE8 的方式，IE8 没有 getComputerStyle () 方法，IE 浏览器有 currentStyle 属性可以使用</span></pre></td></tr><tr><td data-num="75"></td><td><pre>            <span class="token keyword">return</span> obj<span class="token punctuation">.</span>currentStyle<span class="token punctuation">[</span>name<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="76"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/javascript/"/>
    
    
      <category term="move工具函数" scheme="http://yoursite.com/tags/move%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>JS笔记：原生轮播图</title>
    <link href="http://yoursite.com/2020/08/07/2020-08-07.1/"/>
    <id>http://yoursite.com/2020/08/07/2020-08-07.1/</id>
    <published>2020-08-07T13:22:38.387Z</published>
    <updated>2020-11-12T15:53:37.547Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><figure class="highlight javascript"><figcaption data-lang="javascript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token operator">&lt;</span>style<span class="token operator">></span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token operator">*</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            padding<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            margin<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        #outdiv<span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            width<span class="token operator">:</span> <span class="token number">600</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            height<span class="token operator">:</span> <span class="token number">400</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>            padding<span class="token operator">:</span> <span class="token number">10</span>px <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>            background<span class="token operator">-</span>color<span class="token operator">:</span> aquamarine<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            margin<span class="token operator">:</span> <span class="token number">50</span>px auto<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            position<span class="token operator">:</span> relative<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            overflow<span class="token operator">:</span> hidden<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token comment">/* 要明确左右移动的是整个 imglist，而不是 li */</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        #imglist<span class="token punctuation">&#123;</span>   </pre></td></tr><tr><td data-num="23"></td><td><pre>            list<span class="token operator">-</span>style<span class="token operator">:</span> none<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            <span class="token comment">/* 设置图片列表的总宽度 */</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            width<span class="token operator">:</span> <span class="token number">3000</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            height<span class="token operator">:</span> <span class="token number">400</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>            <span class="token comment">/* 要移动 left 值，要先开动定位 */</span></pre></td></tr><tr><td data-num="28"></td><td><pre>            position<span class="token operator">:</span> absolute<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>            left<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        #imglist li<span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token comment">/* 给个浮动，让图片列表横过来 */</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            float<span class="token operator">:</span> left<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>        #pointlist<span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>            <span class="token comment">/* 同样是决定定位，后面的覆盖前面的 */</span></pre></td></tr><tr><td data-num="38"></td><td><pre>            position<span class="token operator">:</span> absolute<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>            <span class="token comment">/* 根据图片的增减，此处需要动态设置小圆点的居中 ((图片的宽度 - pointlist 的宽度)/2) */</span></pre></td></tr><tr><td data-num="40"></td><td><pre>            <span class="token comment">/* left: 235.25px; */</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            bottom<span class="token operator">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>        #pointlist a<span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>            width<span class="token operator">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>            height<span class="token operator">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>            margin<span class="token operator">:</span> <span class="token number">0</span> <span class="token number">5</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>            float<span class="token operator">:</span> left<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>            background<span class="token operator">-</span>color<span class="token operator">:</span> red<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>            opacity<span class="token operator">:</span> <span class="token number">.7</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>        <span class="token comment">/* 设置鼠标移入小圆点的效果 */</span></pre></td></tr><tr><td data-num="52"></td><td><pre>        #pointlist a<span class="token operator">:</span>hover<span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>            background<span class="token operator">-</span>color<span class="token operator">:</span> black<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>    <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span></pre></td></tr><tr><td data-num="56"></td><td><pre>    <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"./animation.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="57"></td><td><pre></pre></td></tr><tr><td data-num="58"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="59"></td><td><pre><span class="token operator">&lt;</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="60"></td><td><pre>    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"outdiv"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="61"></td><td><pre>        <span class="token operator">&lt;</span>ul id<span class="token operator">=</span><span class="token string">"imglist"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="62"></td><td><pre>            <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"./img/1.jpg"</span> alt<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="63"></td><td><pre>            <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"./img/2.jpg"</span> alt<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="64"></td><td><pre>            <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"./img/3.jpg"</span> alt<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="65"></td><td><pre>            <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"./img/4.jpg"</span> alt<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="66"></td><td><pre>            <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"./img/5.jpg"</span> alt<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="67"></td><td><pre>            <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"./img/1.jpg"</span> alt<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="68"></td><td><pre></pre></td></tr><tr><td data-num="69"></td><td><pre>        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span></pre></td></tr><tr><td data-num="70"></td><td><pre>        <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"pointlist"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="71"></td><td><pre>            <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span></pre></td></tr><tr><td data-num="72"></td><td><pre>            <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span></pre></td></tr><tr><td data-num="73"></td><td><pre>            <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span></pre></td></tr><tr><td data-num="74"></td><td><pre>            <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span></pre></td></tr><tr><td data-num="75"></td><td><pre>            <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span></pre></td></tr><tr><td data-num="76"></td><td><pre>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></pre></td></tr><tr><td data-num="77"></td><td><pre>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></pre></td></tr><tr><td data-num="78"></td><td><pre><span class="token operator">&lt;</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="79"></td><td><pre>    window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="80"></td><td><pre>        <span class="token comment">/*</pre></td></tr><tr><td data-num="81"></td><td><pre>            思路：</pre></td></tr><tr><td data-num="82"></td><td><pre>                1. 第一部分：完成轮播图的部署，包括切换小圆点的部署               </pre></td></tr><tr><td data-num="83"></td><td><pre>                    注意点：</pre></td></tr><tr><td data-num="84"></td><td><pre>                        1）. 要可以动态的增加或减少图片的数目，使 imglist 可以自动调整宽度</pre></td></tr><tr><td data-num="85"></td><td><pre>                        2）. 对应的要可以动态的增加或小圆点的数目，使其自动居中</pre></td></tr><tr><td data-num="86"></td><td><pre></pre></td></tr><tr><td data-num="87"></td><td><pre>                2. 第二部分：手动切换轮播图，点击对应的小圆点，切换到对应的图片</pre></td></tr><tr><td data-num="88"></td><td><pre></pre></td></tr><tr><td data-num="89"></td><td><pre>                3. 第三部分：开启自动轮播定时器</pre></td></tr><tr><td data-num="90"></td><td><pre>        */</span></pre></td></tr><tr><td data-num="91"></td><td><pre></pre></td></tr><tr><td data-num="92"></td><td><pre>        <span class="token comment">/* 第一部分 */</span></pre></td></tr><tr><td data-num="93"></td><td><pre>        <span class="token comment">// 动态设置 imglist 的宽度</span></pre></td></tr><tr><td data-num="94"></td><td><pre>        <span class="token keyword">var</span> imglist <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'imglist'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="95"></td><td><pre>        <span class="token keyword">var</span> liunmber<span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="96"></td><td><pre>        <span class="token comment">// 注意：imglist.style. 只能读取和设置内联样式    </span></pre></td></tr><tr><td data-num="97"></td><td><pre>        imglist<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> liunmber<span class="token punctuation">.</span>length <span class="token operator">*</span> <span class="token number">600</span> <span class="token operator">+</span> <span class="token string">'px'</span></pre></td></tr><tr><td data-num="98"></td><td><pre></pre></td></tr><tr><td data-num="99"></td><td><pre>        <span class="token comment">// 动态设置小圆点 pointlist 居中</span></pre></td></tr><tr><td data-num="100"></td><td><pre>        <span class="token keyword">var</span> outdiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'outdiv'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="101"></td><td><pre>        <span class="token keyword">var</span> pointlist <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'pointlist'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="102"></td><td><pre>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>outdiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="103"></td><td><pre>        pointlist<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token punctuation">(</span>outdiv<span class="token punctuation">.</span>offsetWidth<span class="token operator">-</span>pointlist<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token string">'px'</span></pre></td></tr><tr><td data-num="104"></td><td><pre>        </pre></td></tr><tr><td data-num="105"></td><td><pre></pre></td></tr><tr><td data-num="106"></td><td><pre>        <span class="token comment">/* 第二部分 */</span></pre></td></tr><tr><td data-num="107"></td><td><pre>        <span class="token comment">// 设置默认选中的小圆点</span></pre></td></tr><tr><td data-num="108"></td><td><pre>        <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="109"></td><td><pre>        <span class="token keyword">var</span> Alla <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="110"></td><td><pre>        Alla<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">'black'</span></pre></td></tr><tr><td data-num="111"></td><td><pre></pre></td></tr><tr><td data-num="112"></td><td><pre>        <span class="token comment">// 设置一个定时器使它平滑的切换</span></pre></td></tr><tr><td data-num="113"></td><td><pre>        <span class="token keyword">var</span> AllTime <span class="token operator">=</span> <span class="token number">400</span><span class="token punctuation">;</span> <span class="token comment">// 每张照片移动的时间</span></pre></td></tr><tr><td data-num="114"></td><td><pre>        <span class="token keyword">var</span> itemtime <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">// 每小段的间隔时间</span></pre></td></tr><tr><td data-num="115"></td><td><pre>        <span class="token keyword">var</span> itemwidth <span class="token operator">=</span> <span class="token number">600</span><span class="token operator">/</span><span class="token punctuation">(</span>AllTime<span class="token operator">/</span>itemtime<span class="token punctuation">)</span> <span class="token comment">// 每张图分成的小段距离</span></pre></td></tr><tr><td data-num="116"></td><td><pre></pre></td></tr><tr><td data-num="117"></td><td><pre>        <span class="token comment">// 遍历小圆点，绑定点击事件，并点击后切换图片</span></pre></td></tr><tr><td data-num="118"></td><td><pre>        <span class="token comment">// 注意：for 循环先遍历并每个 a 都绑定了事件</span></pre></td></tr><tr><td data-num="119"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>Alla<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="120"></td><td><pre>            Alla<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>num <span class="token operator">=</span> i</pre></td></tr><tr><td data-num="121"></td><td><pre>            Alla<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="122"></td><td><pre></pre></td></tr><tr><td data-num="123"></td><td><pre>                <span class="token comment">// 当进行手动操作时关闭自动定时器</span></pre></td></tr><tr><td data-num="124"></td><td><pre>                <span class="token function">clearInterval</span><span class="token punctuation">(</span>setintervalid<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="125"></td><td><pre></pre></td></tr><tr><td data-num="126"></td><td><pre>                <span class="token comment">// 注意此处用 this 不是用 Alla [i].num</span></pre></td></tr><tr><td data-num="127"></td><td><pre>                <span class="token comment">// alert(this.num)</span></pre></td></tr><tr><td data-num="128"></td><td><pre>                index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>num</pre></td></tr><tr><td data-num="129"></td><td><pre>                Alla<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor<span class="token operator">=</span> <span class="token string">'black'</span></pre></td></tr><tr><td data-num="130"></td><td><pre></pre></td></tr><tr><td data-num="131"></td><td><pre>                <span class="token comment">// 调用小圆点颜色切换函数 (此处有产生闭包)</span></pre></td></tr><tr><td data-num="132"></td><td><pre>                <span class="token function">pointqh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="133"></td><td><pre></pre></td></tr><tr><td data-num="134"></td><td><pre>                <span class="token comment">// 切换图片</span></pre></td></tr><tr><td data-num="135"></td><td><pre>               <span class="token comment">/* 第一张图片：0 *600</pre></td></tr><tr><td data-num="136"></td><td><pre>                第二张图片：-1 * 600</pre></td></tr><tr><td data-num="137"></td><td><pre>                第三张图片：-2 * 600</pre></td></tr><tr><td data-num="138"></td><td><pre>                。。。*/</span></pre></td></tr><tr><td data-num="139"></td><td><pre>                <span class="token comment">// 点击切换图片</span></pre></td></tr><tr><td data-num="140"></td><td><pre>                <span class="token function">move</span><span class="token punctuation">(</span>imglist<span class="token punctuation">,</span><span class="token string">'left'</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">600</span><span class="token operator">*</span>index<span class="token punctuation">,</span>itemwidth<span class="token punctuation">,</span>itemtime<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="141"></td><td><pre>                    <span class="token comment">// 手动切换完成后又开启自动定时器</span></pre></td></tr><tr><td data-num="142"></td><td><pre>                    <span class="token function">autoqh</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="143"></td><td><pre>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="144"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="145"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="146"></td><td><pre></pre></td></tr><tr><td data-num="147"></td><td><pre>        <span class="token comment">// 点击后小圆点的颜色改变</span></pre></td></tr><tr><td data-num="148"></td><td><pre>        <span class="token keyword">function</span> <span class="token function">pointqh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="149"></td><td><pre>            <span class="token comment">// 当切换到第六张图片时，将小圆点切换到第一个</span></pre></td></tr><tr><td data-num="150"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">>=</span> liunmber<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="151"></td><td><pre>                index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="152"></td><td><pre>                <span class="token comment">// 将图片切换回第一张</span></pre></td></tr><tr><td data-num="153"></td><td><pre>                imglist<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="154"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="155"></td><td><pre>            <span class="token comment">// 先遍历将小圆点的颜色都变成红色</span></pre></td></tr><tr><td data-num="156"></td><td><pre>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>Alla<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="157"></td><td><pre>            <span class="token comment">/* 此处需注意：由于内联样式优先级较高，所以点击之后 backgroundColor = 'red'，</pre></td></tr><tr><td data-num="158"></td><td><pre>                会时 hover 失效，所以这里 red 不能要，但默认样式有设成红色，所以 ok*/</span></pre></td></tr><tr><td data-num="159"></td><td><pre>            </pre></td></tr><tr><td data-num="160"></td><td><pre>                Alla<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">''</span></pre></td></tr><tr><td data-num="161"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="162"></td><td><pre></pre></td></tr><tr><td data-num="163"></td><td><pre>            <span class="token comment">// 使用了外部函数变量 index，产生闭包</span></pre></td></tr><tr><td data-num="164"></td><td><pre>            Alla<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">'black'</span></pre></td></tr><tr><td data-num="165"></td><td><pre></pre></td></tr><tr><td data-num="166"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="167"></td><td><pre></pre></td></tr><tr><td data-num="168"></td><td><pre></pre></td></tr><tr><td data-num="169"></td><td><pre>        <span class="token comment">/* 第三部分 */</span></pre></td></tr><tr><td data-num="170"></td><td><pre>        <span class="token comment">// 启动自动切换功能</span></pre></td></tr><tr><td data-num="171"></td><td><pre>        <span class="token function">autoqh</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="172"></td><td><pre></pre></td></tr><tr><td data-num="173"></td><td><pre>        <span class="token comment">// 定义成全局定时器，方便其他函数进行关闭开启的操作</span></pre></td></tr><tr><td data-num="174"></td><td><pre>        <span class="token keyword">var</span> setintervalid<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="175"></td><td><pre></pre></td></tr><tr><td data-num="176"></td><td><pre>        <span class="token keyword">function</span> <span class="token function">autoqh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="177"></td><td><pre>            <span class="token comment">// 开启定时器</span></pre></td></tr><tr><td data-num="178"></td><td><pre>            setintervalid <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="179"></td><td><pre>                </pre></td></tr><tr><td data-num="180"></td><td><pre>                <span class="token comment">//index 自增</span></pre></td></tr><tr><td data-num="181"></td><td><pre>                index<span class="token operator">++</span></pre></td></tr><tr><td data-num="182"></td><td><pre>                <span class="token comment">// 调用 move 函数</span></pre></td></tr><tr><td data-num="183"></td><td><pre>                <span class="token function">move</span><span class="token punctuation">(</span>imglist<span class="token punctuation">,</span><span class="token string">'left'</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">600</span><span class="token operator">*</span>index<span class="token punctuation">,</span>itemwidth<span class="token punctuation">,</span>itemtime<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="184"></td><td><pre>                    <span class="token comment">// 图片移动的同时切换小圆点</span></pre></td></tr><tr><td data-num="185"></td><td><pre>                    <span class="token function">pointqh</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="186"></td><td><pre>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="187"></td><td><pre>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span>    </pre></td></tr><tr><td data-num="188"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="189"></td><td><pre></pre></td></tr><tr><td data-num="190"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="191"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="192"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="193"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/javascript/"/>
    
    
      <category term="原生轮播图" scheme="http://yoursite.com/tags/%E5%8E%9F%E7%94%9F%E8%BD%AE%E6%92%AD%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>jQuery笔记：练习:点击回到顶部</title>
    <link href="http://yoursite.com/2020/08/05/2020-08-05.9/"/>
    <id>http://yoursite.com/2020/08/05/2020-08-05.9/</id>
    <published>2020-08-05T13:04:47.923Z</published>
    <updated>2020-11-12T15:52:17.846Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><figure class="highlight javascript"><figcaption data-lang="javascript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">&lt;</span>html<span class="token operator">></span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">&lt;</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token operator">&lt;</span>title<span class="token operator">></span><span class="token number">03</span>_回到顶部<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span></pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token operator">&lt;</span>style<span class="token operator">></span></pre></td></tr><tr><td data-num="8"></td><td><pre>    #to_top <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      width<span class="token operator">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>      height<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>      font<span class="token operator">:</span> <span class="token number">14</span>px<span class="token operator">/</span><span class="token number">20</span>px arial<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>      text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      background<span class="token operator">:</span> #<span class="token number">06</span>c<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>      position<span class="token operator">:</span> fixed<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>      cursor<span class="token operator">:</span> pointer<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>      color<span class="token operator">:</span> #fff<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>      left<span class="token operator">:</span> <span class="token number">1050</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>      top<span class="token operator">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>  <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token operator">&lt;</span>body style<span class="token operator">=</span><span class="token string">"height: 2000px;"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"to_top"</span><span class="token operator">></span>返回顶部<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"jquery-1.10.1.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="28"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#to_top'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token comment">// 瞬间回到顶部</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token comment">// $('html,body').scrollTop(0)</span></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token comment">// 平滑回到顶部</span></pre></td></tr><tr><td data-num="33"></td><td><pre>      <span class="token comment">// 测出总距离</span></pre></td></tr><tr><td data-num="34"></td><td><pre>      <span class="token keyword">var</span> $page <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'html,body'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="35"></td><td><pre>      <span class="token keyword">var</span> distance <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'html'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="36"></td><td><pre>      </pre></td></tr><tr><td data-num="37"></td><td><pre>      <span class="token comment">// 设置回到顶部所需的总时间</span></pre></td></tr><tr><td data-num="38"></td><td><pre>      <span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token number">500</span></pre></td></tr><tr><td data-num="39"></td><td><pre></pre></td></tr><tr><td data-num="40"></td><td><pre>      <span class="token comment">// 间隔时间</span></pre></td></tr><tr><td data-num="41"></td><td><pre>      <span class="token keyword">var</span> intervalTime <span class="token operator">=</span> <span class="token number">10</span></pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>      <span class="token comment">// 每小段的距离</span></pre></td></tr><tr><td data-num="44"></td><td><pre>      <span class="token keyword">var</span> itemDistance <span class="token operator">=</span> distance<span class="token operator">/</span><span class="token punctuation">(</span>time<span class="token operator">/</span>intervalTime<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="45"></td><td><pre></pre></td></tr><tr><td data-num="46"></td><td><pre>      <span class="token comment">// 使用循环定时器不断滚动</span></pre></td></tr><tr><td data-num="47"></td><td><pre>      <span class="token keyword">var</span> intervalId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>        distance <span class="token operator">-=</span> itemDistance</pre></td></tr><tr><td data-num="49"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>distance<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>          distance <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment">// 修正</span></pre></td></tr><tr><td data-num="51"></td><td><pre>          <span class="token function">clearInterval</span><span class="token punctuation">(</span>intervalId<span class="token punctuation">)</span>  <span class="token comment">// 关闭定时器 </span></pre></td></tr><tr><td data-num="52"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>        $page<span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span>distance<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="54"></td><td><pre>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>intervalTime<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="55"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="jQuery" scheme="http://yoursite.com/categories/jQuery/"/>
    
    
      <category term="jQuery笔记" scheme="http://yoursite.com/tags/jQuery%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>jQuery笔记：练习:多Tab点击切换</title>
    <link href="http://yoursite.com/2020/08/05/2020-08-05.8/"/>
    <id>http://yoursite.com/2020/08/05/2020-08-05.8/</id>
    <published>2020-08-05T13:03:31.965Z</published>
    <updated>2020-11-12T15:52:51.925Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><figure class="highlight javascript"><figcaption data-lang="javascript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token operator">&lt;</span>title<span class="token operator">></span><span class="token number">02</span>_多Tab点击切换<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token operator">&lt;</span>style<span class="token operator">></span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token operator">*</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>      margin<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      padding<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre>    #tab li <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      float<span class="token operator">:</span> left<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>      list<span class="token operator">-</span>style<span class="token operator">:</span> none<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>      width<span class="token operator">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>      height<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>      line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>      cursor<span class="token operator">:</span> pointer<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      text<span class="token operator">-</span>align<span class="token operator">:</span> center<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>    #container <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>      position<span class="token operator">:</span> relative<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre>    #content1<span class="token punctuation">,</span> #content2<span class="token punctuation">,</span> #content3 <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>      width<span class="token operator">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>      height<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>      padding<span class="token operator">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>      position<span class="token operator">:</span> absolute<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>      top<span class="token operator">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>      left<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre>    #tab1<span class="token punctuation">,</span> #content1 <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>      background<span class="token operator">-</span>color<span class="token operator">:</span> #ffcc00<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre>    #tab2<span class="token punctuation">,</span> #content2 <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>      background<span class="token operator">-</span>color<span class="token operator">:</span> #ff00cc<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>    #tab3<span class="token punctuation">,</span> #content3 <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>      background<span class="token operator">-</span>color<span class="token operator">:</span> #<span class="token number">00</span>ccff<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>  <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span></pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token operator">&lt;</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token operator">&lt;</span>h2<span class="token operator">></span>多Tab点击切换<span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span></pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token operator">&lt;</span>ul id<span class="token operator">=</span><span class="token string">"tab"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="52"></td><td><pre>  <span class="token operator">&lt;</span>li id<span class="token operator">=</span><span class="token string">"tab1"</span> value<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">></span><span class="token number">10</span>元套餐<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="53"></td><td><pre>  <span class="token operator">&lt;</span>li id<span class="token operator">=</span><span class="token string">"tab2"</span> value<span class="token operator">=</span><span class="token string">"2"</span><span class="token operator">></span><span class="token number">30</span>元套餐<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="54"></td><td><pre>  <span class="token operator">&lt;</span>li id<span class="token operator">=</span><span class="token string">"tab3"</span> value<span class="token operator">=</span><span class="token string">"3"</span><span class="token operator">></span><span class="token number">50</span>元包月<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span></pre></td></tr><tr><td data-num="56"></td><td><pre></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="58"></td><td><pre>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"content1"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="59"></td><td><pre>    <span class="token number">10</span>元套餐详情：<span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>每月套餐内拨打<span class="token number">100</span>分钟，超出部分<span class="token number">2</span>毛<span class="token operator">/</span>分钟</pre></td></tr><tr><td data-num="60"></td><td><pre>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></pre></td></tr><tr><td data-num="61"></td><td><pre>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"content2"</span> style<span class="token operator">=</span><span class="token string">"display: none"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="62"></td><td><pre>    <span class="token number">30</span>元套餐详情：<span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>每月套餐内拨打<span class="token number">300</span>分钟，超出部分<span class="token number">1.5</span>毛<span class="token operator">/</span>分钟</pre></td></tr><tr><td data-num="63"></td><td><pre>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></pre></td></tr><tr><td data-num="64"></td><td><pre>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"content3"</span> style<span class="token operator">=</span><span class="token string">"display: none"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="65"></td><td><pre>    <span class="token number">50</span>元包月详情：<span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span>每月无限量随心打</pre></td></tr><tr><td data-num="66"></td><td><pre>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></pre></td></tr><tr><td data-num="67"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></pre></td></tr><tr><td data-num="68"></td><td><pre></pre></td></tr><tr><td data-num="69"></td><td><pre></pre></td></tr><tr><td data-num="70"></td><td><pre><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"jquery-1.10.1.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="71"></td><td><pre><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="72"></td><td><pre></pre></td></tr><tr><td data-num="73"></td><td><pre></pre></td></tr><tr><td data-num="74"></td><td><pre></pre></td></tr><tr><td data-num="75"></td><td><pre>  <span class="token keyword">var</span> $contents <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#container>div'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="76"></td><td><pre>  <span class="token comment">// 方式 1：</span></pre></td></tr><tr><td data-num="77"></td><td><pre>  <span class="token comment">//// 给 3 个 li 加监听</span></pre></td></tr><tr><td data-num="78"></td><td><pre>  <span class="token comment">// $('#tab>li').click (function ()&#123; // 隐式遍历</span></pre></td></tr><tr><td data-num="79"></td><td><pre>  <span class="token comment">//   // 隐藏所有内容 div</span></pre></td></tr><tr><td data-num="80"></td><td><pre>  <span class="token comment">//   $contents.css('display','none')</span></pre></td></tr><tr><td data-num="81"></td><td><pre>  <span class="token comment">//   // 显示对应的内容 div</span></pre></td></tr><tr><td data-num="82"></td><td><pre>  <span class="token comment">//   // 得到当前点击的 li 在兄弟中下标</span></pre></td></tr><tr><td data-num="83"></td><td><pre>  <span class="token comment">//   var index = $(this).index()</span></pre></td></tr><tr><td data-num="84"></td><td><pre>  <span class="token comment">//   // 找到对应内容 div，并显示方式 1：</span></pre></td></tr><tr><td data-num="85"></td><td><pre>  <span class="token comment">//   $contents[index].style.display = 'block'</span></pre></td></tr><tr><td data-num="86"></td><td><pre>  <span class="token comment">//   // 找到对应内容 div，并显示方式 2:</span></pre></td></tr><tr><td data-num="87"></td><td><pre>  <span class="token comment">//   // $($contents[index]).css('display','block')</span></pre></td></tr><tr><td data-num="88"></td><td><pre></pre></td></tr><tr><td data-num="89"></td><td><pre></pre></td></tr><tr><td data-num="90"></td><td><pre>  <span class="token comment">// &#125;)</span></pre></td></tr><tr><td data-num="91"></td><td><pre></pre></td></tr><tr><td data-num="92"></td><td><pre><span class="token comment">// 更好的方式 2：</span></pre></td></tr><tr><td data-num="93"></td><td><pre>  <span class="token keyword">var</span> currIndex  <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// 当前显示内容 div 的下标</span></pre></td></tr><tr><td data-num="94"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#tab>li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token comment">// 隐式遍历</span></pre></td></tr><tr><td data-num="95"></td><td><pre>    <span class="token comment">// 点击时，隐藏当前已经显示的内容 div</span></pre></td></tr><tr><td data-num="96"></td><td><pre>    $contents<span class="token punctuation">[</span>currIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span></pre></td></tr><tr><td data-num="97"></td><td><pre>    <span class="token comment">// 显示被点击的 div 内容</span></pre></td></tr><tr><td data-num="98"></td><td><pre>      <span class="token comment">// 得到被点击的 div 下包</span></pre></td></tr><tr><td data-num="99"></td><td><pre>    <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="100"></td><td><pre>    <span class="token comment">// 找到被点击 div 并显示</span></pre></td></tr><tr><td data-num="101"></td><td><pre>    $contents<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span></pre></td></tr><tr><td data-num="102"></td><td><pre></pre></td></tr><tr><td data-num="103"></td><td><pre>    <span class="token comment">// 更新当前的下标</span></pre></td></tr><tr><td data-num="104"></td><td><pre>    currIndex <span class="token operator">=</span> index</pre></td></tr><tr><td data-num="105"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="106"></td><td><pre></pre></td></tr><tr><td data-num="107"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="108"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="109"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="jQuery" scheme="http://yoursite.com/categories/jQuery/"/>
    
    
      <category term="jQuery笔记" scheme="http://yoursite.com/tags/jQuery%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>jQuery笔记：练习:添加删除记录</title>
    <link href="http://yoursite.com/2020/08/05/2020-08-05.7/"/>
    <id>http://yoursite.com/2020/08/05/2020-08-05.7/</id>
    <published>2020-08-05T13:00:20.823Z</published>
    <updated>2020-11-12T16:06:02.468Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><figure class="highlight javascript"><figcaption data-lang="javascript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> <span class="token constant">HTML</span> <span class="token constant">PUBLIC</span> <span class="token string">"-//W3C//DTD HTML 4.01//EN"</span> <span class="token string">"http://www.w3.org/TR/html4/strict.dtd"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">&lt;</span>html<span class="token operator">></span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">&lt;</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">"Content-Type"</span> content<span class="token operator">=</span><span class="token string">"text/html; charset=UTF-8"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token operator">&lt;</span>title<span class="token operator">></span>添加删除记录练习<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span></pre></td></tr><tr><td data-num="7"></td><td><pre>  <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> type<span class="token operator">=</span><span class="token string">"text/css"</span> href<span class="token operator">=</span><span class="token string">"css.css"</span><span class="token operator">/</span><span class="token operator">></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token operator">&lt;</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token operator">&lt;</span>table id<span class="token operator">=</span><span class="token string">"employeeTable"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="12"></td><td><pre>  <span class="token operator">&lt;</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token operator">&lt;</span>th<span class="token operator">></span>Name<span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">></span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token operator">&lt;</span>th<span class="token operator">></span>Email<span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">></span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token operator">&lt;</span>th<span class="token operator">></span>Salary<span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">></span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token operator">&lt;</span>th<span class="token operator">></span><span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>th<span class="token operator">></span></pre></td></tr><tr><td data-num="17"></td><td><pre>  <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="18"></td><td><pre>  <span class="token operator">&lt;</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token operator">&lt;</span>td<span class="token operator">></span>Tom<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token operator">&lt;</span>td<span class="token operator">></span>tom@tom<span class="token punctuation">.</span>com<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token number">5000</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"deleteEmp?id=001"</span><span class="token operator">></span>Delete<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="23"></td><td><pre>  <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="24"></td><td><pre>  <span class="token operator">&lt;</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token operator">&lt;</span>td<span class="token operator">></span>Jerry<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token operator">&lt;</span>td<span class="token operator">></span>jerry@sohu<span class="token punctuation">.</span>com<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token number">8000</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"deleteEmp?id=002"</span><span class="token operator">></span>Delete<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="29"></td><td><pre>  <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="30"></td><td><pre>  <span class="token operator">&lt;</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token operator">&lt;</span>td<span class="token operator">></span>Bob<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token operator">&lt;</span>td<span class="token operator">></span>bob@tom<span class="token punctuation">.</span>com<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token number">10000</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"deleteEmp?id=003"</span><span class="token operator">></span>Delete<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="35"></td><td><pre>  <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="36"></td><td><pre></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">></span></pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"formDiv"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="40"></td><td><pre></pre></td></tr><tr><td data-num="41"></td><td><pre>  <span class="token operator">&lt;</span>h4<span class="token operator">></span>添加新员工<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span></pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>  <span class="token operator">&lt;</span>table<span class="token operator">></span></pre></td></tr><tr><td data-num="44"></td><td><pre>    <span class="token operator">&lt;</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="45"></td><td><pre>      <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"word"</span><span class="token operator">></span>name<span class="token operator">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="46"></td><td><pre>      <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"inp"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"empName"</span> id<span class="token operator">=</span><span class="token string">"empName"</span><span class="token operator">/</span><span class="token operator">></span></pre></td></tr><tr><td data-num="48"></td><td><pre>      <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="49"></td><td><pre>    <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="50"></td><td><pre>    <span class="token operator">&lt;</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="51"></td><td><pre>      <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"word"</span><span class="token operator">></span>email<span class="token operator">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="52"></td><td><pre>      <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"inp"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="53"></td><td><pre>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"email"</span> id<span class="token operator">=</span><span class="token string">"email"</span><span class="token operator">/</span><span class="token operator">></span></pre></td></tr><tr><td data-num="54"></td><td><pre>      <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="55"></td><td><pre>    <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="56"></td><td><pre>    <span class="token operator">&lt;</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="57"></td><td><pre>      <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"word"</span><span class="token operator">></span>salary<span class="token operator">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="58"></td><td><pre>      <span class="token operator">&lt;</span>td <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"inp"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="59"></td><td><pre>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"salary"</span> id<span class="token operator">=</span><span class="token string">"salary"</span><span class="token operator">/</span><span class="token operator">></span></pre></td></tr><tr><td data-num="60"></td><td><pre>      <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="61"></td><td><pre>    <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="62"></td><td><pre>    <span class="token operator">&lt;</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="63"></td><td><pre>      <span class="token operator">&lt;</span>td colspan<span class="token operator">=</span><span class="token string">"2"</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="64"></td><td><pre>        <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"addEmpButton"</span> value<span class="token operator">=</span><span class="token string">"abc"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="65"></td><td><pre>          Submit</pre></td></tr><tr><td data-num="66"></td><td><pre>        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span></pre></td></tr><tr><td data-num="67"></td><td><pre>      <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span></pre></td></tr><tr><td data-num="68"></td><td><pre>    <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span></pre></td></tr><tr><td data-num="69"></td><td><pre>  <span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">></span></pre></td></tr><tr><td data-num="70"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></pre></td></tr><tr><td data-num="71"></td><td><pre></pre></td></tr><tr><td data-num="72"></td><td><pre><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"jquery-1.10.1.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="73"></td><td><pre><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="74"></td><td><pre>  <span class="token comment">/*</pre></td></tr><tr><td data-num="75"></td><td><pre>  1. 添加</pre></td></tr><tr><td data-num="76"></td><td><pre>  2. 删除</pre></td></tr><tr><td data-num="77"></td><td><pre>   */</span></pre></td></tr><tr><td data-num="78"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#addEmpButton'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>    <span class="token comment">//1. 收集输入的数据</span></pre></td></tr><tr><td data-num="80"></td><td><pre>    <span class="token keyword">var</span> $empName <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#empName'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="81"></td><td><pre>    <span class="token keyword">var</span> $email <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#email'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="82"></td><td><pre>    <span class="token keyword">var</span> $salary <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#salary'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="83"></td><td><pre>    <span class="token keyword">var</span> empName <span class="token operator">=</span> $empName<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="84"></td><td><pre>    <span class="token keyword">var</span> email <span class="token operator">=</span> $email<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="85"></td><td><pre>    <span class="token keyword">var</span> salary <span class="token operator">=</span> $salary<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="86"></td><td><pre></pre></td></tr><tr><td data-num="87"></td><td><pre>    <span class="token comment">//2. 生成对应的 & lt;tr > 标签结构，并插入 #employeeTable 的 tbody 中</span></pre></td></tr><tr><td data-num="88"></td><td><pre>    <span class="token comment">/*</pre></td></tr><tr><td data-num="89"></td><td><pre>     &lt;tr></pre></td></tr><tr><td data-num="90"></td><td><pre>       &lt;td>Bob&lt;/td></pre></td></tr><tr><td data-num="91"></td><td><pre>       &lt;td>bob@tom.com&lt;/td></pre></td></tr><tr><td data-num="92"></td><td><pre>       &lt;td>10000&lt;/td></pre></td></tr><tr><td data-num="93"></td><td><pre>       &lt;td>&lt;a href="deleteEmp?id=003">Delete&lt;/a>&lt;/td></pre></td></tr><tr><td data-num="94"></td><td><pre>     &lt;/tr></pre></td></tr><tr><td data-num="95"></td><td><pre>     */</span></pre></td></tr><tr><td data-num="96"></td><td><pre>    <span class="token keyword">var</span> $xxx <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;tr>&lt;/tr>'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="97"></td><td><pre>      <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'&lt;td>'</span><span class="token operator">+</span>empName<span class="token operator">+</span><span class="token string">'&lt;/td>'</span><span class="token punctuation">)</span> <span class="token comment">// 拼串</span></pre></td></tr><tr><td data-num="98"></td><td><pre>      <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'&lt;td>'</span><span class="token operator">+</span>email<span class="token operator">+</span><span class="token string">'&lt;/td>'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="99"></td><td><pre>      <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'&lt;td>'</span><span class="token operator">+</span>salary<span class="token operator">+</span><span class="token string">'&lt;/td>'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="100"></td><td><pre>      <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'&lt;td>&lt;a href="deleteEmp?id="'</span><span class="token operator">+</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'>Delete&lt;/a>&lt;/td>'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="101"></td><td><pre>      <span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">'#employeeTable>tbody'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="102"></td><td><pre>      <span class="token comment">// .find('a')</span></pre></td></tr><tr><td data-num="103"></td><td><pre>      <span class="token comment">// .click(clickDelete)</span></pre></td></tr><tr><td data-num="104"></td><td><pre></pre></td></tr><tr><td data-num="105"></td><td><pre>    <span class="token comment">//3. 清除输入</span></pre></td></tr><tr><td data-num="106"></td><td><pre>    $empName<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="107"></td><td><pre>    $email<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="108"></td><td><pre>    $salary<span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="109"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="110"></td><td><pre></pre></td></tr><tr><td data-num="111"></td><td><pre>  <span class="token comment">// 给所有删除链接绑定点击监听</span></pre></td></tr><tr><td data-num="112"></td><td><pre>  <span class="token comment">// $('#employeeTable a').click(clickDelete)</span></pre></td></tr><tr><td data-num="113"></td><td><pre></pre></td></tr><tr><td data-num="114"></td><td><pre>  <span class="token comment">// 通过 table 实现对所有 a 的 click 事件委托</span></pre></td></tr><tr><td data-num="115"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#employeeTable'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delegate</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'click'</span><span class="token punctuation">,</span> clickDelete<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="116"></td><td><pre></pre></td></tr><tr><td data-num="117"></td><td><pre>  <span class="token comment">/*</pre></td></tr><tr><td data-num="118"></td><td><pre>  点击删除的回调函数</pre></td></tr><tr><td data-num="119"></td><td><pre>   */</span></pre></td></tr><tr><td data-num="120"></td><td><pre>  <span class="token keyword">function</span> <span class="token function">clickDelete</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="121"></td><td><pre>    <span class="token keyword">var</span> $tr <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="122"></td><td><pre>    <span class="token keyword">var</span> name <span class="token operator">=</span> $tr<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">':first'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="123"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">'确定删除'</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">'吗?'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="124"></td><td><pre>      $tr<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="125"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="126"></td><td><pre></pre></td></tr><tr><td data-num="127"></td><td><pre>    <span class="token keyword">return</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="128"></td><td><pre>  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="129"></td><td><pre>  </pre></td></tr><tr><td data-num="130"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="131"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="132"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="jQuery" scheme="http://yoursite.com/categories/jQuery/"/>
    
    
      <category term="jQuery笔记" scheme="http://yoursite.com/tags/jQuery%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>jQuery笔记：练习：爱好选择器</title>
    <link href="http://yoursite.com/2020/08/05/2020-08-05.6/"/>
    <id>http://yoursite.com/2020/08/05/2020-08-05.6/</id>
    <published>2020-08-05T12:58:50.190Z</published>
    <updated>2020-11-12T16:00:03.336Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><figure class="highlight javascript"><figcaption data-lang="javascript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html <span class="token constant">PUBLIC</span> <span class="token string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="token string">"http://www.w3.org/TR/html4/loose.dtd"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">&lt;</span>html<span class="token operator">></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string">"Content-Type"</span> content<span class="token operator">=</span><span class="token string">"text/html; charset=UTF-8"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token operator">&lt;</span>title<span class="token operator">></span>全选练习<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">&lt;</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token operator">&lt;</span>form<span class="token operator">></span></pre></td></tr><tr><td data-num="10"></td><td><pre>  你爱好的运动是？<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"checkbox"</span> id<span class="token operator">=</span><span class="token string">"checkedAllBox"</span><span class="token operator">/</span><span class="token operator">></span>全选<span class="token operator">/</span>全不选</pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre>  <span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span></pre></td></tr><tr><td data-num="13"></td><td><pre>  <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"checkbox"</span> name<span class="token operator">=</span><span class="token string">"items"</span> value<span class="token operator">=</span><span class="token string">"足球"</span><span class="token operator">/</span><span class="token operator">></span>足球</pre></td></tr><tr><td data-num="14"></td><td><pre>  <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"checkbox"</span> name<span class="token operator">=</span><span class="token string">"items"</span> value<span class="token operator">=</span><span class="token string">"篮球"</span><span class="token operator">/</span><span class="token operator">></span>篮球</pre></td></tr><tr><td data-num="15"></td><td><pre>  <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"checkbox"</span> name<span class="token operator">=</span><span class="token string">"items"</span> value<span class="token operator">=</span><span class="token string">"羽毛球"</span><span class="token operator">/</span><span class="token operator">></span>羽毛球</pre></td></tr><tr><td data-num="16"></td><td><pre>  <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"checkbox"</span> name<span class="token operator">=</span><span class="token string">"items"</span> value<span class="token operator">=</span><span class="token string">"乒乓球"</span><span class="token operator">/</span><span class="token operator">></span>乒乓球</pre></td></tr><tr><td data-num="17"></td><td><pre>  <span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">></span></pre></td></tr><tr><td data-num="18"></td><td><pre>  <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"button"</span> id<span class="token operator">=</span><span class="token string">"checkedAllBtn"</span> value<span class="token operator">=</span><span class="token string">"全　选"</span><span class="token operator">/</span><span class="token operator">></span></pre></td></tr><tr><td data-num="19"></td><td><pre>  <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"button"</span> id<span class="token operator">=</span><span class="token string">"checkedNoBtn"</span> value<span class="token operator">=</span><span class="token string">"全不选"</span><span class="token operator">/</span><span class="token operator">></span></pre></td></tr><tr><td data-num="20"></td><td><pre>  <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"button"</span> id<span class="token operator">=</span><span class="token string">"checkedRevBtn"</span> value<span class="token operator">=</span><span class="token string">"反　选"</span><span class="token operator">/</span><span class="token operator">></span></pre></td></tr><tr><td data-num="21"></td><td><pre>  <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"button"</span> id<span class="token operator">=</span><span class="token string">"sendBtn"</span> value<span class="token operator">=</span><span class="token string">"提　交"</span><span class="token operator">/</span><span class="token operator">></span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"jquery-1.10.1.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="26"></td><td><pre>  <span class="token comment">/*</pre></td></tr><tr><td data-num="27"></td><td><pre>   功能说明:</pre></td></tr><tr><td data-num="28"></td><td><pre>   1. 点击 ' 全选 ': 选中所有爱好</pre></td></tr><tr><td data-num="29"></td><td><pre>   2. 点击 ' 全不选 ': 所有爱好都不勾选</pre></td></tr><tr><td data-num="30"></td><td><pre>   3. 点击 ' 反选 ': 改变所有爱好的勾选状态</pre></td></tr><tr><td data-num="31"></td><td><pre>   4. 点击 ' 提交 ': 提示所有勾选的爱好</pre></td></tr><tr><td data-num="32"></td><td><pre>   5. 点击 ' 全选 / 全不选 ': 选中所有爱好，或者全不选中</pre></td></tr><tr><td data-num="33"></td><td><pre>   6. 点击某个爱好时，必要时更新 ' 全选 / 全不选 ' 的选中状态</pre></td></tr><tr><td data-num="34"></td><td><pre>   */</span></pre></td></tr><tr><td data-num="35"></td><td><pre>  <span class="token keyword">var</span> $checkedAllBox <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#checkedAllBox'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="36"></td><td><pre>  <span class="token keyword">var</span> $items <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">':checkbox[name=items]'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="37"></td><td><pre></pre></td></tr><tr><td data-num="38"></td><td><pre>  <span class="token comment">// 1. 点击 ' 全选 ': 选中所有爱好</span></pre></td></tr><tr><td data-num="39"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#checkedAllBtn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>    $items<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">'checked'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    $checkedAllBox<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">'checked'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="42"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="43"></td><td><pre></pre></td></tr><tr><td data-num="44"></td><td><pre>  <span class="token comment">// 2. 点击 ' 全不选 ': 所有爱好都不勾选</span></pre></td></tr><tr><td data-num="45"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#checkedNoBtn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>    $items<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">'checked'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="47"></td><td><pre>    $checkedAllBox<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">'checked'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="48"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="49"></td><td><pre></pre></td></tr><tr><td data-num="50"></td><td><pre>  <span class="token comment">// 3. 点击 ' 反选 ': 改变所有爱好的勾选状态</span></pre></td></tr><tr><td data-num="51"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#checkedRevBtn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>    $items<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>      <span class="token keyword">this</span><span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>checked</pre></td></tr><tr><td data-num="54"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="55"></td><td><pre>    $checkedAllBox<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">'checked'</span><span class="token punctuation">,</span> $items<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">':not(:checked)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="56"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="57"></td><td><pre></pre></td></tr><tr><td data-num="58"></td><td><pre>  <span class="token comment">//4. 点击 ' 提交 ': 提示所有勾选的爱好</span></pre></td></tr><tr><td data-num="59"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#sendBtn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>    $items<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">':checked'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="62"></td><td><pre>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="63"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="64"></td><td><pre></pre></td></tr><tr><td data-num="65"></td><td><pre>  <span class="token comment">// 5. 点击 ' 全选 / 全不选 ': 选中所有爱好，或者全不选中</span></pre></td></tr><tr><td data-num="66"></td><td><pre>  $checkedAllBox<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>    $items<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">'checked'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>checked<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="68"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="69"></td><td><pre></pre></td></tr><tr><td data-num="70"></td><td><pre>  <span class="token comment">// 6. 点击某个爱好时，必要时更新 ' 全选 / 全不选 ' 的选中状态</span></pre></td></tr><tr><td data-num="71"></td><td><pre>  $items<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>    $checkedAllBox<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">'checked'</span><span class="token punctuation">,</span> $items<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">':not(:checked)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="73"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="74"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="75"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="76"></td><td><pre></pre></td></tr><tr><td data-num="77"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="jQuery" scheme="http://yoursite.com/categories/jQuery/"/>
    
    
      <category term="jQuery笔记" scheme="http://yoursite.com/tags/jQuery%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>jQuery笔记：两个事件的区别</title>
    <link href="http://yoursite.com/2020/08/05/2020-08-05.5/"/>
    <id>http://yoursite.com/2020/08/05/2020-08-05.5/</id>
    <published>2020-08-05T12:55:32.346Z</published>
    <updated>2020-11-12T15:59:58.881Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><figure class="highlight javascript"><figcaption data-lang="javascript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">&lt;</span>html<span class="token operator">></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">&lt;</span>title<span class="token operator">></span><span class="token number">19</span>_事件切换<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">&lt;</span>style type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">*</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>margin<span class="token operator">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">.</span>div1 <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>position<span class="token operator">:</span> absolute<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>width<span class="token operator">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>height<span class="token operator">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>top<span class="token operator">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>left<span class="token operator">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>background<span class="token operator">:</span> olive<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">.</span>div2 <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>position<span class="token operator">:</span> absolute<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>width<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>height<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>top<span class="token operator">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>background<span class="token operator">:</span> red<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token punctuation">.</span>div3 <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>position<span class="token operator">:</span> absolute<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>width<span class="token operator">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>height<span class="token operator">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>top<span class="token operator">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>left<span class="token operator">:</span> <span class="token number">230</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>background<span class="token operator">:</span> olive<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token punctuation">.</span>div4 <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>position<span class="token operator">:</span> absolute<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>width<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>height<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>top<span class="token operator">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>background<span class="token operator">:</span> yellow<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="41"></td><td><pre></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token punctuation">.</span>divText<span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>position<span class="token operator">:</span> absolute<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>top<span class="token operator">:</span> <span class="token number">330</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>left<span class="token operator">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="47"></td><td><pre></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token operator">&lt;</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"divText"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="52"></td><td><pre>区分鼠标的事件</pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></pre></td></tr><tr><td data-num="54"></td><td><pre></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"div1"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="56"></td><td><pre>div1<span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">.</span></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"div2"</span><span class="token operator">></span>div2<span class="token operator">...</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></pre></td></tr><tr><td data-num="58"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></pre></td></tr><tr><td data-num="59"></td><td><pre></pre></td></tr><tr><td data-num="60"></td><td><pre><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"div3"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="61"></td><td><pre>div3<span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">.</span></pre></td></tr><tr><td data-num="62"></td><td><pre><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"div4"</span><span class="token operator">></span>div4<span class="token operator">...</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></pre></td></tr><tr><td data-num="63"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></pre></td></tr><tr><td data-num="64"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="65"></td><td><pre>区别：mouseover与mouseenter</pre></td></tr><tr><td data-num="66"></td><td><pre><span class="token operator">*</span>mouseover：在移入子元素时也会触发，对应mouseout</pre></td></tr><tr><td data-num="67"></td><td><pre><span class="token operator">*</span>mouseenter：只在移入当前元素时才触发，对应mouseleave</pre></td></tr><tr><td data-num="68"></td><td><pre><span class="token function">hover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">使用的就是mouseenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">和mouseleave</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="69"></td><td><pre><span class="token function">区别：on</span><span class="token punctuation">(</span><span class="token string">'eventName'</span><span class="token punctuation">,</span>fun<span class="token punctuation">)</span><span class="token function">与eventName</span><span class="token punctuation">(</span>fun<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="70"></td><td><pre><span class="token operator">*</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'eventName'</span><span class="token punctuation">,</span>fun<span class="token punctuation">)</span><span class="token operator">:</span>通用，但编码麻烦</pre></td></tr><tr><td data-num="71"></td><td><pre><span class="token operator">*</span><span class="token function">eventName</span><span class="token punctuation">(</span>fun<span class="token punctuation">)</span><span class="token operator">:</span>编码简单，但有的事件没有对应的方法</pre></td></tr><tr><td data-num="72"></td><td><pre><span class="token operator">--</span><span class="token operator">></span></pre></td></tr><tr><td data-num="73"></td><td><pre><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"js/jquery-1.10.1.js"</span> type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="74"></td><td><pre><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="75"></td><td><pre><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.div1'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="76"></td><td><pre><span class="token punctuation">.</span><span class="token function">mouseover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'mouseover 进入'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="78"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="79"></td><td><pre><span class="token punctuation">.</span><span class="token function">mouseout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="80"></td><td><pre>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'mouseout 离开'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="81"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="82"></td><td><pre></pre></td></tr><tr><td data-num="83"></td><td><pre><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'div3'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="84"></td><td><pre><span class="token punctuation">.</span><span class="token function">mouseenter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="85"></td><td><pre>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'mouseenter 进入'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="86"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="87"></td><td><pre><span class="token punctuation">.</span><span class="token function">mouseleave</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="88"></td><td><pre>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'mouseleave 离开'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="89"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="90"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="91"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="92"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="jQuery" scheme="http://yoursite.com/categories/jQuery/"/>
    
    
      <category term="jQuery笔记" scheme="http://yoursite.com/tags/jQuery%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>jQuery笔记：文档_增删改</title>
    <link href="http://yoursite.com/2020/08/05/2020-08-05.4/"/>
    <id>http://yoursite.com/2020/08/05/2020-08-05.4/</id>
    <published>2020-08-05T12:50:49.813Z</published>
    <updated>2020-11-13T03:13:43.578Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><figure class="highlight javascript"><figcaption data-lang="javascript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">&lt;</span>html<span class="token operator">></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token operator">&lt;</span>title<span class="token operator">></span><span class="token number">17</span>_文档_增删改<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">&lt;</span>style type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="8"></td><td><pre>  <span class="token operator">*</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    margin<span class="token operator">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre>  <span class="token punctuation">.</span>div1 <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    position<span class="token operator">:</span> absolute<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    width<span class="token operator">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    height<span class="token operator">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    top<span class="token operator">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    left<span class="token operator">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    background<span class="token operator">:</span> blue<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre>  <span class="token punctuation">.</span>div2 <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    position<span class="token operator">:</span> absolute<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    width<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    height<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token comment">/*top: 50px;*/</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    background<span class="token operator">:</span> red<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre>  <span class="token punctuation">.</span>div3 <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    position<span class="token operator">:</span> absolute<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    top<span class="token operator">:</span> <span class="token number">250</span>px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>  <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span></pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token operator">&lt;</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token operator">&lt;</span>ul id<span class="token operator">=</span><span class="token string">"ul1"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="37"></td><td><pre>  <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token constant">AAAAA</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre>  <span class="token operator">&lt;</span>li title<span class="token operator">=</span><span class="token string">"hello"</span><span class="token operator">></span><span class="token constant">BBBBB</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="40"></td><td><pre>  <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"box"</span><span class="token operator">></span><span class="token constant">CCCCC</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="41"></td><td><pre></pre></td></tr><tr><td data-num="42"></td><td><pre>  <span class="token operator">&lt;</span>li title<span class="token operator">=</span><span class="token string">"hello"</span><span class="token operator">></span><span class="token constant">DDDDDD</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="43"></td><td><pre>  <span class="token operator">&lt;</span>li title<span class="token operator">=</span><span class="token string">"two"</span><span class="token operator">></span><span class="token constant">EEEEE</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="44"></td><td><pre>  <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token constant">FFFFF</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="45"></td><td><pre></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span></pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token operator">&lt;</span>br<span class="token operator">></span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token operator">&lt;</span>br<span class="token operator">></span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token operator">&lt;</span>ul id<span class="token operator">=</span><span class="token string">"ul2"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="50"></td><td><pre>  <span class="token operator">&lt;</span>li<span class="token operator">></span>aaa<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="51"></td><td><pre>  <span class="token operator">&lt;</span>li title<span class="token operator">=</span><span class="token string">"hello"</span><span class="token operator">></span>bbb<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="52"></td><td><pre>  <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"box"</span><span class="token operator">></span>ccc<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="53"></td><td><pre>  <span class="token operator">&lt;</span>li title<span class="token operator">=</span><span class="token string">"hello"</span><span class="token operator">></span>ddd<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="54"></td><td><pre>  <span class="token operator">&lt;</span>li title<span class="token operator">=</span><span class="token string">"two"</span><span class="token operator">></span>eee<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span></pre></td></tr><tr><td data-num="56"></td><td><pre></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="58"></td><td><pre><span class="token number">1.</span> 添加<span class="token operator">/</span>替换元素</pre></td></tr><tr><td data-num="59"></td><td><pre>  <span class="token operator">*</span> <span class="token function">append</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>向当前匹配的所有元素内部的最后插入指定内容</pre></td></tr><tr><td data-num="60"></td><td><pre>    </pre></td></tr><tr><td data-num="61"></td><td><pre>  <span class="token operator">*</span> <span class="token function">prepend</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>向当前匹配的所有元素内部的最前面插入指定内容</pre></td></tr><tr><td data-num="62"></td><td><pre>    </pre></td></tr><tr><td data-num="63"></td><td><pre>  <span class="token operator">*</span> <span class="token function">before</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span> 将指定内容插入到当前所有匹配元素的前面</pre></td></tr><tr><td data-num="64"></td><td><pre>   </pre></td></tr><tr><td data-num="65"></td><td><pre>  <span class="token operator">*</span> <span class="token function">after</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>将指定内容插入到当前所有匹配元素的后面替换节点</pre></td></tr><tr><td data-num="66"></td><td><pre>    </pre></td></tr><tr><td data-num="67"></td><td><pre>  <span class="token operator">*</span> <span class="token function">replaceWith</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>用指定内容替换所有匹配的标签删除节点</pre></td></tr><tr><td data-num="68"></td><td><pre>    </pre></td></tr><tr><td data-num="69"></td><td><pre><span class="token number">2.</span> 删除元素</pre></td></tr><tr><td data-num="70"></td><td><pre>  <span class="token operator">*</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>删除所有匹配元素的子元素</pre></td></tr><tr><td data-num="71"></td><td><pre>    </pre></td></tr><tr><td data-num="72"></td><td><pre>  <span class="token operator">*</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>删除所有匹配的元素</pre></td></tr><tr><td data-num="73"></td><td><pre>    </pre></td></tr><tr><td data-num="74"></td><td><pre><span class="token operator">--</span><span class="token operator">></span></pre></td></tr><tr><td data-num="75"></td><td><pre><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"js/jquery-1.10.1.js"</span> type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="76"></td><td><pre><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="77"></td><td><pre>  <span class="token comment">/*</pre></td></tr><tr><td data-num="78"></td><td><pre>   需求:</pre></td></tr><tr><td data-num="79"></td><td><pre>   1. 向 id 为 ul1 的 ul 下添加一个 span (最后)</pre></td></tr><tr><td data-num="80"></td><td><pre>   2. 向 id 为 ul1 的 ul 下添加一个 span (最前)</pre></td></tr><tr><td data-num="81"></td><td><pre>   3. 在 id 为 ul1 的 ul 下的 li (title 为 hello) 的前面添加 span</pre></td></tr><tr><td data-num="82"></td><td><pre>   4. 在 id 为 ul1 的 ul 下的 li (title 为 hello) 的后面添加 span</pre></td></tr><tr><td data-num="83"></td><td><pre>   5. 将在 id 为 ul2 的 ul 下的 li (title 为 hello) 全部替换为 p</pre></td></tr><tr><td data-num="84"></td><td><pre>   6. 移除 id 为 ul2 的 ul 下的所有 li</pre></td></tr><tr><td data-num="85"></td><td><pre>   */</span></pre></td></tr><tr><td data-num="86"></td><td><pre></pre></td></tr><tr><td data-num="87"></td><td><pre>  <span class="token comment">//1. 向 id 为 ul1 的 ul 下添加一个 span (最后)</span></pre></td></tr><tr><td data-num="88"></td><td><pre>  <span class="token keyword">var</span> $ul1 <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#ul1'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="89"></td><td><pre>  <span class="token comment">// $ul1.append ('&lt;span>append () 添加的 span&lt;/span>')</span></pre></td></tr><tr><td data-num="90"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;span>appendTo()添加的span&lt;/span>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>$ul1<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="91"></td><td><pre></pre></td></tr><tr><td data-num="92"></td><td><pre>  <span class="token comment">//2. 向 id 为 ul1 的 ul 下添加一个 span (最前)</span></pre></td></tr><tr><td data-num="93"></td><td><pre>  <span class="token comment">// $ul1.prepend ('&lt;span>prepend () 添加的 span&lt;/span>')</span></pre></td></tr><tr><td data-num="94"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;span>prependTo()添加的span&lt;/span>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prependTo</span><span class="token punctuation">(</span>$ul1<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="95"></td><td><pre></pre></td></tr><tr><td data-num="96"></td><td><pre>  <span class="token comment">//3. 在 id 为 ul1 的 ul 下的 li (title 为 hello) 的前面添加 span</span></pre></td></tr><tr><td data-num="97"></td><td><pre>  $ul1<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">'li[title=hello]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token string">'&lt;span>before()添加的span&lt;/span>'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="98"></td><td><pre></pre></td></tr><tr><td data-num="99"></td><td><pre>  <span class="token comment">//4. 在 id 为 ul1 的 ul 下的 li (title 为 hello) 的后面添加 span</span></pre></td></tr><tr><td data-num="100"></td><td><pre>  $ul1<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">'li[title=hello]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token string">'&lt;span>after()添加的span&lt;/span>'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="101"></td><td><pre></pre></td></tr><tr><td data-num="102"></td><td><pre>  <span class="token comment">//5. 将在 id 为 ul2 的 ul 下的 li (title 为 hello) 全部替换为 p</span></pre></td></tr><tr><td data-num="103"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#ul2>li[title=hello]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceWith</span><span class="token punctuation">(</span><span class="token string">'&lt;p>replaceAll()替换的p&lt;/p>'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="104"></td><td><pre>  <span class="token comment">//6. 移除 id 为 ul2 的 ul 下的所有 li</span></pre></td></tr><tr><td data-num="105"></td><td><pre>  <span class="token comment">// $('#ul2').empty ()  // &lt;p > 也会删除</span></pre></td></tr><tr><td data-num="106"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#ul2>li'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="107"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="108"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="109"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="jQuery" scheme="http://yoursite.com/categories/jQuery/"/>
    
    
      <category term="jQuery笔记" scheme="http://yoursite.com/tags/jQuery%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>jQuery笔记：事件委托</title>
    <link href="http://yoursite.com/2020/08/05/2020-08-05.3/"/>
    <id>http://yoursite.com/2020/08/05/2020-08-05.3/</id>
    <published>2020-08-05T12:34:48.352Z</published>
    <updated>2020-11-12T15:49:36.394Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><figure class="highlight javascript"><figcaption data-lang="javascript"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> <span class="token constant">HTML</span><span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">&lt;</span>html<span class="token operator">></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="4"></td><td><pre>  <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token operator">&lt;</span>title<span class="token operator">></span><span class="token number">20</span>_事件委托<span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">&lt;</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token operator">&lt;</span>ul<span class="token operator">></span></pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token number">1111</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token number">2222</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="12"></td><td><pre>  <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token number">3333</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="13"></td><td><pre>  <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token number">4444</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token number">22222</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token operator">&lt;</span>br<span class="token operator">></span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"btn1"</span><span class="token operator">></span>添加新的li<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"btn2"</span><span class="token operator">></span>删除ul上的事件委托的监听器<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="22"></td><td><pre>  <span class="token number">1.</span>事件委托（委派<span class="token operator">/</span>代理）</pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token operator">*</span>将多个子元素（例如：li）的事件监听委托给父辈原（ul）处理</pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token operator">*</span>监听回调是加在父辈元素上的</pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token operator">*</span>当操作任何一个子元素（li）时，事件会冒泡到父辈元素（ul<span class="token punctuation">)</span>上</pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token operator">*</span>父辈元素不会直接处理事件，而是根据even<span class="token punctuation">.</span>target得到发生事件的子元素（li<span class="token punctuation">)</span>，通过这个子元素调用事件回调函数</pre></td></tr><tr><td data-num="27"></td><td><pre> </pre></td></tr><tr><td data-num="28"></td><td><pre>  <span class="token number">2.</span>事件委托的<span class="token number">2</span>方：</pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token operator">*</span>委托方：业主 li</pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token operator">*</span>被委托放：中介 ul</pre></td></tr><tr><td data-num="31"></td><td><pre>  </pre></td></tr><tr><td data-num="32"></td><td><pre>  <span class="token number">3.</span>使用委托的好处</pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token operator">*</span>添加新的子元素，自动有事件响应处理</pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token operator">*</span>减少事件监听的数量： n<span class="token operator">==</span>》<span class="token number">1</span></pre></td></tr><tr><td data-num="35"></td><td><pre>  </pre></td></tr><tr><td data-num="36"></td><td><pre>  <span class="token number">4.</span>jQuery的时间委托<span class="token constant">API</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token operator">*</span><span class="token function">设置事件委托：$</span><span class="token punctuation">(</span>parentSelector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delegate</span><span class="token punctuation">(</span>ChildrenSelector<span class="token punctuation">,</span>eventName<span class="token punctuation">,</span>callback<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="38"></td><td><pre>    <span class="token operator">*</span><span class="token function">移除事件委托：$</span><span class="token punctuation">(</span>parentSelector<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">undelegate</span><span class="token punctuation">(</span>eventName<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="39"></td><td><pre></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token operator">--</span><span class="token operator">></span></pre></td></tr><tr><td data-num="41"></td><td><pre><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"js/jquery-1.10.1.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token operator">&lt;</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="43"></td><td><pre></pre></td></tr><tr><td data-num="44"></td><td><pre>    <span class="token comment">/*</pre></td></tr><tr><td data-num="45"></td><td><pre>   需求：</pre></td></tr><tr><td data-num="46"></td><td><pre>   1. 点击 li 背景就会变为红色</pre></td></tr><tr><td data-num="47"></td><td><pre>   2. 点击 btn 就添加一个 li</pre></td></tr><tr><td data-num="48"></td><td><pre>  */</span></pre></td></tr><tr><td data-num="49"></td><td><pre>  <span class="token comment">//1. 不用事件委托时，新添加的 li 点击后背景不会变红</span></pre></td></tr><tr><td data-num="50"></td><td><pre>  <span class="token comment">/*$('ul>li').click (function () &#123;</pre></td></tr><tr><td data-num="51"></td><td><pre>    this.style.background = 'red'</pre></td></tr><tr><td data-num="52"></td><td><pre>  &#125;)</pre></td></tr><tr><td data-num="53"></td><td><pre></pre></td></tr><tr><td data-num="54"></td><td><pre>  $('#btn').click (function () &#123;</pre></td></tr><tr><td data-num="55"></td><td><pre>    $('ul').append ('&lt;li > 新增的 li....&lt;/li>')</pre></td></tr><tr><td data-num="56"></td><td><pre>  &#125;)*/</span></pre></td></tr><tr><td data-num="57"></td><td><pre></pre></td></tr><tr><td data-num="58"></td><td><pre>  <span class="token comment">// 2. 设置事件委托</span></pre></td></tr><tr><td data-num="59"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delegate</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">,</span><span class="token string">'click'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>    <span class="token keyword">this</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">'red'</span></pre></td></tr><tr><td data-num="61"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="62"></td><td><pre>  <span class="token comment">// 添加 li</span></pre></td></tr><tr><td data-num="63"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#btn1'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="64"></td><td><pre>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'&lt;li>新增的li。。。&lt;/li>'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="65"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="66"></td><td><pre>  <span class="token comment">// 移除事件委派</span></pre></td></tr><tr><td data-num="67"></td><td><pre>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#btn2'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">undelegate</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="69"></td><td><pre>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="70"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></pre></td></tr><tr><td data-num="71"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="72"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="jQuery" scheme="http://yoursite.com/categories/jQuery/"/>
    
    
      <category term="jQuery笔记" scheme="http://yoursite.com/tags/jQuery%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>jQuery笔记：笔记总结2</title>
    <link href="http://yoursite.com/2020/08/05/2020-08-05.2/"/>
    <id>http://yoursite.com/2020/08/05/2020-08-05.2/</id>
    <published>2020-08-05T12:31:50.498Z</published>
    <updated>2020-11-12T15:49:07.618Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><h1 id="1css模块"><a class="anchor" href="#1css模块">#</a> 1.CSS 模块</h1><h2 id="style样式"><a class="anchor" href="#style样式">#</a> *style 样式</h2><p>css (styleName): 根据样式名得到对应的值</p><p>css (styleName,value)：设置一个样式和其值</p><p>css ({多个样式对})：设置多个样式</p><h2 id="位置坐标"><a class="anchor" href="#位置坐标">#</a> * 位置坐标</h2><p>offset (): 读 / 写当前元素坐标（原点是页面左上角）</p><p>position (): 读当前元素坐标（原点是父元素左上角）</p><p>scrollTop ()/scrollLeft (): 读 / 写元素 / 页面的滚动条坐标</p><h2 id="尺寸"><a class="anchor" href="#尺寸">#</a> * 尺寸</h2><p>width()/height(): width/height</p><p>innerWidth()/innerHeight():width + padding</p><p>outerWidth()/outerHeight()：width + padding + border</p><h1 id="2筛选模块"><a class="anchor" href="#2筛选模块">#</a> 2. 筛选模块</h1><h2 id="过滤在jquery对象内部的元素中找出部分匹配的元素并封装成新的jquery对象返回"><a class="anchor" href="#过滤在jquery对象内部的元素中找出部分匹配的元素并封装成新的jquery对象返回">#</a> * 过滤：在 jQuery 对象内部的元素中找出部分匹配的元素，并封装成新的 jQuery 对象返回</h2><p>first()</p><p>last()</p><p>eq(index)</p><p>filter (selector): 对当前元素提要求</p><p>not (selector): 对当前元素提要求并取反</p><p>has (selector): 对子孙元素提要求</p><h2 id="查找查找jquery对象内部的元素的子孙兄弟父母元素并封装成新的jquery对象返回"><a class="anchor" href="#查找查找jquery对象内部的元素的子孙兄弟父母元素并封装成新的jquery对象返回">#</a> * 查找：查找 jQuery 对象内部的元素的子孙 / 兄弟 / 父母元素，并封装成新的 jQuery 对象返回</h2><p>children (selector): 子元素</p><p>find (selector): 后代元素</p><p>preAll (selector): 前面的所有兄弟</p><p>siblings (selector): 所有兄弟</p><p>parent (): 父元素</p><h1 id="3文档处理模块"><a class="anchor" href="#3文档处理模块">#</a> 3. 文档处理模块</h1><h2 id="增加"><a class="anchor" href="#增加">#</a> * 增加</h2><p>append () /appenTo () : 插入后部</p><p>preppend () /preppendTo () : 插入前部</p><p>before (): 插到前面</p><p>after (): 插到后面</p><h2 id="删除"><a class="anchor" href="#删除">#</a> * 删除</h2><p>remove (): 将自己及内部的子元素都删除</p><p>empty (): 清空子元素</p><h2 id="更新"><a class="anchor" href="#更新">#</a> * 更新</h2><p>replaceWith()</p><h1 id="4事件模块"><a class="anchor" href="#4事件模块">#</a> 4. 事件模块</h1><h2 id="绑定事件"><a class="anchor" href="#绑定事件">#</a> * 绑定事件</h2><p>常用事件：click mouseenter/mouseleave mouseover/mouseout focus/blur</p><p>eventName(function(){})</p><p>on('eventName',function(){})</p><p>hover(function(){},function(){})</p><h2 id="解绑事件"><a class="anchor" href="#解绑事件">#</a> * 解绑事件</h2><p>off('eventName')</p><h2 id="事件的委托"><a class="anchor" href="#事件的委托">#</a> * 事件的委托</h2><h3 id="理解将子元素的事件委托给父辈元素处理"><a class="anchor" href="#理解将子元素的事件委托给父辈元素处理">#</a> * 理解：将子元素的事件委托给父辈元素处理</h3><p>* 事件监听绑定在父元素身上，当事件发生在子元素上</p><p>* 事件会冒泡到父元素</p><p>* 但最终调用的事件回调函数是子元素：event.targate</p><h3 id="好处"><a class="anchor" href="#好处">#</a> * 好处</h3><p>* 新增的元素没有事件监听</p><p>* 减少监听的数量（n==&gt;1）</p><h3 id="编码"><a class="anchor" href="#编码">#</a> * 编码</h3><p>delegate (' 子 selector','eventName',function (){}) // 回调函数中的 this 是子元素</p><h2 id="事件坐标"><a class="anchor" href="#事件坐标">#</a> * 事件坐标</h2><p>event.offsetX: 原点是当前元素左上角</p><p>event.clientX: 原点是窗口左上角</p><p>event.pageX: 原点是页面左上角</p><h2 id="事件相关"><a class="anchor" href="#事件相关">#</a> * 事件相关</h2><p>停止事件冒泡：event.stopPropagetion ()</p><p>阻止事件的默认行为：event.preventDefault ()</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="jQuery" scheme="http://yoursite.com/categories/jQuery/"/>
    
    
      <category term="jQuery总结" scheme="http://yoursite.com/tags/jQuery%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>jQuery笔记：笔记总结1</title>
    <link href="http://yoursite.com/2020/08/05/2020-08-05.1/"/>
    <id>http://yoursite.com/2020/08/05/2020-08-05.1/</id>
    <published>2020-08-05T12:18:19.276Z</published>
    <updated>2020-11-12T14:12:29.597Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>代码笔记</p><a id="more"></a><h1 id="1了解jquery"><a class="anchor" href="#1了解jquery">#</a> 1. 了解 jQuery</h1><h2 id="是什么"><a class="anchor" href="#是什么">#</a> * 是什么？</h2><p>一个 JS 函数库：write less,do more</p><p>封装简化 DOM 操作（CRUD：增删改查）/Ajax</p><h2 id="为什么用它why"><a class="anchor" href="#为什么用它why">#</a> * 为什么用它：why？</h2><p>强大的选择器：方便快速查找 DOM 元素</p><p>隐式遍历（迭代）：一次操作多个元素</p><p>读写合一：读数据 / 写数据用的是一个函数</p><p>事件处理</p><p>链式调用</p><p>DOM 操作（CUD）</p><p>样式操作</p><h2 id="如何使用how"><a class="anchor" href="#如何使用how">#</a> * 如何使用：How？</h2><h3 id="引入jquery库"><a class="anchor" href="#引入jquery库">#</a> * 引入 JQuery 库</h3><p>本地引入与 CDN 远程引入</p><p>测试版和生产版（压缩版）</p><h3 id="使用jquery"><a class="anchor" href="#使用jquery">#</a> * 使用 jQuery</h3><p>使用 jQuery 函数：$/jQuery</p><p>使用 jQuery 对象：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi>x</mi><mi>x</mi><mo stretchy="false">(</mo><mtext>执行</mtext></mrow><annotation encoding="application/x-tex">xxx(执行</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal">x</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord cjk_fallback">执</span><span class="mord cjk_fallback">行</span></span></span></span> () 得到的)</p><h1 id="2jquery的2把利器"><a class="anchor" href="#2jquery的2把利器">#</a> 2.jQuery 的 2 把利器</h1><h2 id="jquery函数jquery"><a class="anchor" href="#jquery函数jquery">#</a> *jQuery 函数：$/jQuery</h2><h3 id="jquery向外暴露的就是jquery函数可以直接使用"><a class="anchor" href="#jquery向外暴露的就是jquery函数可以直接使用">#</a> *jQuery 向外暴露的就是 jQuery 函数，可以直接使用</h3><h3 id="当成一般函数使用param"><a class="anchor" href="#当成一般函数使用param">#</a> * 当成一般函数使用：$(param)</h3><p>param 是 function：相当于 window.onload = function（文档加载完成的监听）</p><p>param 是选择器字符串：查找所有匹配的 DOM 元素，返回包含所以 DOM 元素的 jQuery 对象</p><p>param 是 DOM 元素：将 DOM 元素对象包装为 jQuery 对象返回 $(this)</p><p>param 是标签字符串：创建标签 DOM 元素对象并包装为 jQuery 对象返回</p><h3 id="当成对象使用xxx"><a class="anchor" href="#当成对象使用xxx">#</a> * 当成对象使用：$.xxx</h3><p>each (obj/arr,function (key,value){}) 遍历函数</p><p>trim(str)</p><h2 id="jquery对象"><a class="anchor" href="#jquery对象">#</a> *jQuery 对象</h2><h3 id="包含所有匹配的n个dom元素的伪数组对象"><a class="anchor" href="#包含所有匹配的n个dom元素的伪数组对象">#</a> * 包含所有匹配的 n 个 DOM 元素的伪数组对象</h3><h3 id="执行返回的就是jquery对象"><a class="anchor" href="#执行返回的就是jquery对象">#</a> * 执行 $() 返回的就是 jQuery 对象</h3><h3 id="基本行为"><a class="anchor" href="#基本行为">#</a> * 基本行为：</h3><p>length/size (): 得到 dom 元素的个数</p><p>each (function (index,domEle){}): 遍历所有 dom 元素</p><p>index ()：得到当前 dom 元素在所有兄弟中的下标</p><h1 id="3选择器"><a class="anchor" href="#3选择器">#</a> 3. 选择器</h1><h2 id="是什么-2"><a class="anchor" href="#是什么-2">#</a> * 是什么？</h2><p>有特定语法规则（css 选择器）的字符串</p><p>用来查找某个 / 些 DOM 元素：$(selector)</p><h2 id="分类"><a class="anchor" href="#分类">#</a> * 分类</h2><h3 id="基本"><a class="anchor" href="#基本">#</a> * 基本</h3><p>#id</p><p>tagName/*</p><p>.class</p><p>selector1,selector2,selector3: 并集</p><p>selector1selector2selector3: 交集</p><h3 id="层次找子孙后代兄弟元素"><a class="anchor" href="#层次找子孙后代兄弟元素">#</a> * 层次：找子孙后代，兄弟元素</h3><p>selector1&gt;selector2: 找子元素</p><p>selector1 selector2: 找后代元素</p><h3 id="过滤在原有匹配元素中筛选出其中一些"><a class="anchor" href="#过滤在原有匹配元素中筛选出其中一些">#</a> * 过滤：在原有匹配元素中筛选出其中一些</h3><p>:first</p><p>:last</p><p>:eq (index)  指定第几个</p><p>:lt</p><p>:gt</p><p>:odd (奇数的)</p><p>:even (偶数的)</p><p>:not (selector) 不包含哪几个</p><p>:hidden</p><p>:visible</p><p>[attrName]</p><p>[attrName=value]</p><h3 id="表单"><a class="anchor" href="#表单">#</a> * 表单</h3><p>:input</p><p>:text</p><p>:checkbox</p><p>:radio</p><p>:checked (选中的)</p><h1 id="4属性操作标签的属性标签体文本"><a class="anchor" href="#4属性操作标签的属性标签体文本">#</a> 4. 属性：操作标签的属性，标签体文本</h1><p>attr (name) /attr (name,value) 读写非布尔值的标签属性</p><p>prop (naem) /prop (name,value) 读写布尔值的标签属性</p><p>removeAttr (name)/removeProp (name) 删除属性</p><p>addClass (classValue) 添加 class</p><p>removeClass (classValue) 移除指定 class</p><p>val () /val (value) 低些标签的 value</p><p>html () /html (htmlString) 读写标签体文本</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码笔记&lt;/p&gt;
    
    </summary>
    
    
      <category term="jQuery" scheme="http://yoursite.com/categories/jQuery/"/>
    
    
      <category term="jQuery总结" scheme="http://yoursite.com/tags/jQuery%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
